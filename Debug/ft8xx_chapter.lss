
ft8xx_chapter.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000085fc  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000448  20000000  000085fc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000500  20000448  00008a44  00020448  2**2
                  ALLOC
  3 .stack        00002000  20000948  00008f44  00020448  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020448  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020470  2**0
                  CONTENTS, READONLY
  6 .debug_info   000114bb  00000000  00000000  000204c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001639  00000000  00000000  00031984  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00001548  00000000  00000000  00032fbd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000428  00000000  00000000  00034505  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000378  00000000  00000000  0003492d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00017bff  00000000  00000000  00034ca5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00006b15  00000000  00000000  0004c8a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0008a8d0  00000000  00000000  000533b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00000e8c  00000000  00000000  000ddc8c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <_sfixed>:
       0:	20002948 	.word	0x20002948
       4:	00001485 	.word	0x00001485
       8:	0000157d 	.word	0x0000157d
       c:	0000157d 	.word	0x0000157d
	...
      2c:	0000157d 	.word	0x0000157d
	...
      38:	0000157d 	.word	0x0000157d
      3c:	0000157d 	.word	0x0000157d
      40:	0000157d 	.word	0x0000157d
      44:	0000157d 	.word	0x0000157d
      48:	0000157d 	.word	0x0000157d
      4c:	0000157d 	.word	0x0000157d
      50:	0000157d 	.word	0x0000157d
      54:	0000157d 	.word	0x0000157d
      58:	0000157d 	.word	0x0000157d
      5c:	0000157d 	.word	0x0000157d
      60:	0000157d 	.word	0x0000157d
      64:	0000157d 	.word	0x0000157d
      68:	0000157d 	.word	0x0000157d
      6c:	0000157d 	.word	0x0000157d
      70:	0000157d 	.word	0x0000157d
      74:	0000157d 	.word	0x0000157d
      78:	0000157d 	.word	0x0000157d
      7c:	0000157d 	.word	0x0000157d
      80:	0000157d 	.word	0x0000157d
      84:	0000157d 	.word	0x0000157d
      88:	0000157d 	.word	0x0000157d
      8c:	0000157d 	.word	0x0000157d
      90:	0000157d 	.word	0x0000157d
	...
      9c:	0000157d 	.word	0x0000157d
      a0:	0000157d 	.word	0x0000157d
      a4:	0000157d 	.word	0x0000157d
      a8:	0000157d 	.word	0x0000157d
      ac:	0000157d 	.word	0x0000157d
      b0:	00000000 	.word	0x00000000

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000448 	.word	0x20000448
      d4:	00000000 	.word	0x00000000
      d8:	000085fc 	.word	0x000085fc

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	2000044c 	.word	0x2000044c
     108:	000085fc 	.word	0x000085fc
     10c:	000085fc 	.word	0x000085fc
     110:	00000000 	.word	0x00000000

00000114 <TransByte>:
        count -= length;


    }while (count > 0);

	return cmdBufferWr;
     114:	b580      	push	{r7, lr}
}
     116:	b084      	sub	sp, #16
     118:	af00      	add	r7, sp, #0
     11a:	0002      	movs	r2, r0
     11c:	1dfb      	adds	r3, r7, #7
     11e:	701a      	strb	r2, [r3, #0]
     120:	1dfb      	adds	r3, r7, #7
     122:	781b      	ldrb	r3, [r3, #0]
     124:	b29b      	uxth	r3, r3
     126:	4a09      	ldr	r2, [pc, #36]	; (14c <TransByte+0x38>)
     128:	0019      	movs	r1, r3
     12a:	0010      	movs	r0, r2
     12c:	4b08      	ldr	r3, [pc, #32]	; (150 <TransByte+0x3c>)
     12e:	4798      	blx	r3
     130:	0003      	movs	r3, r0
     132:	001a      	movs	r2, r3
     134:	230e      	movs	r3, #14
     136:	18fb      	adds	r3, r7, r3
     138:	801a      	strh	r2, [r3, #0]
     13a:	230e      	movs	r3, #14
     13c:	18fb      	adds	r3, r7, r3
     13e:	881b      	ldrh	r3, [r3, #0]
     140:	b2db      	uxtb	r3, r3
     142:	0018      	movs	r0, r3
     144:	46bd      	mov	sp, r7
     146:	b004      	add	sp, #16
     148:	bd80      	pop	{r7, pc}
     14a:	46c0      	nop			; (mov r8, r8)
	unsigned short rcv;

	rcv = SercomSPI_TransByte( SERCOM_FT8XX, byte );

	return rcv;
}
     14c:	42001000 	.word	0x42001000
     150:	00000c15 	.word	0x00000c15

00000154 <HostCommand>:



bool HostCommand( unsigned char cmd, unsigned char p1, unsigned char p2 )
{
     154:	b590      	push	{r4, r7, lr}
     156:	b083      	sub	sp, #12
     158:	af00      	add	r7, sp, #0
     15a:	0004      	movs	r4, r0
     15c:	0008      	movs	r0, r1
     15e:	0011      	movs	r1, r2
     160:	1dfb      	adds	r3, r7, #7
     162:	1c22      	adds	r2, r4, #0
     164:	701a      	strb	r2, [r3, #0]
     166:	1dbb      	adds	r3, r7, #6
     168:	1c02      	adds	r2, r0, #0
     16a:	701a      	strb	r2, [r3, #0]
     16c:	1d7b      	adds	r3, r7, #5
     16e:	1c0a      	adds	r2, r1, #0
     170:	701a      	strb	r2, [r3, #0]
	GpioBitOut( FT8XX_nCS,0 );
     172:	2100      	movs	r1, #0
     174:	200e      	movs	r0, #14
     176:	4b0d      	ldr	r3, [pc, #52]	; (1ac <HostCommand+0x58>)
     178:	4798      	blx	r3

		TransByte( cmd );
     17a:	1dfb      	adds	r3, r7, #7
     17c:	781b      	ldrb	r3, [r3, #0]
     17e:	0018      	movs	r0, r3
     180:	4b0b      	ldr	r3, [pc, #44]	; (1b0 <HostCommand+0x5c>)
     182:	4798      	blx	r3
		TransByte( p1 );
     184:	1dbb      	adds	r3, r7, #6
     186:	781b      	ldrb	r3, [r3, #0]
     188:	0018      	movs	r0, r3
     18a:	4b09      	ldr	r3, [pc, #36]	; (1b0 <HostCommand+0x5c>)
     18c:	4798      	blx	r3
		TransByte( p2 );
     18e:	1d7b      	adds	r3, r7, #5
     190:	781b      	ldrb	r3, [r3, #0]
     192:	0018      	movs	r0, r3
     194:	4b06      	ldr	r3, [pc, #24]	; (1b0 <HostCommand+0x5c>)
     196:	4798      	blx	r3

	GpioBitOut( FT8XX_nCS,1 );
     198:	2101      	movs	r1, #1
     19a:	200e      	movs	r0, #14
     19c:	4b03      	ldr	r3, [pc, #12]	; (1ac <HostCommand+0x58>)
     19e:	4798      	blx	r3

	return true;
     1a0:	2301      	movs	r3, #1
}
     1a2:	0018      	movs	r0, r3
     1a4:	46bd      	mov	sp, r7
     1a6:	b003      	add	sp, #12
     1a8:	bd90      	pop	{r4, r7, pc}
     1aa:	46c0      	nop			; (mov r8, r8)
     1ac:	00000b39 	.word	0x00000b39
     1b0:	00000115 	.word	0x00000115

000001b4 <HostMemWriteByte>:



bool HostMemWriteByte( unsigned long adr, unsigned char p1 )
{
     1b4:	b580      	push	{r7, lr}
     1b6:	b084      	sub	sp, #16
     1b8:	af00      	add	r7, sp, #0
     1ba:	6078      	str	r0, [r7, #4]
     1bc:	000a      	movs	r2, r1
     1be:	1cfb      	adds	r3, r7, #3
     1c0:	701a      	strb	r2, [r3, #0]
	unsigned long addres = adr | 0x00800000;
     1c2:	687b      	ldr	r3, [r7, #4]
     1c4:	2280      	movs	r2, #128	; 0x80
     1c6:	0412      	lsls	r2, r2, #16
     1c8:	4313      	orrs	r3, r2
     1ca:	60fb      	str	r3, [r7, #12]

	GpioBitOut( FT8XX_nCS,0 );
     1cc:	2100      	movs	r1, #0
     1ce:	200e      	movs	r0, #14
     1d0:	4b10      	ldr	r3, [pc, #64]	; (214 <HostMemWriteByte+0x60>)
     1d2:	4798      	blx	r3

		TransByte( (unsigned char)((addres & 0x00FF0000)>>16) );
     1d4:	68fb      	ldr	r3, [r7, #12]
     1d6:	0c1b      	lsrs	r3, r3, #16
     1d8:	b2db      	uxtb	r3, r3
     1da:	0018      	movs	r0, r3
     1dc:	4b0e      	ldr	r3, [pc, #56]	; (218 <HostMemWriteByte+0x64>)
     1de:	4798      	blx	r3
		TransByte( (unsigned char)((addres & 0x0000FF00)>>8) );
     1e0:	68fb      	ldr	r3, [r7, #12]
     1e2:	0a1b      	lsrs	r3, r3, #8
     1e4:	b2db      	uxtb	r3, r3
     1e6:	0018      	movs	r0, r3
     1e8:	4b0b      	ldr	r3, [pc, #44]	; (218 <HostMemWriteByte+0x64>)
     1ea:	4798      	blx	r3
		TransByte( (unsigned char)(addres & 0x000000FF) );
     1ec:	68fb      	ldr	r3, [r7, #12]
     1ee:	b2db      	uxtb	r3, r3
     1f0:	0018      	movs	r0, r3
     1f2:	4b09      	ldr	r3, [pc, #36]	; (218 <HostMemWriteByte+0x64>)
     1f4:	4798      	blx	r3
		TransByte( (unsigned char)(p1) );
     1f6:	1cfb      	adds	r3, r7, #3
     1f8:	781b      	ldrb	r3, [r3, #0]
     1fa:	0018      	movs	r0, r3
     1fc:	4b06      	ldr	r3, [pc, #24]	; (218 <HostMemWriteByte+0x64>)
     1fe:	4798      	blx	r3

	GpioBitOut( FT8XX_nCS,1 );
     200:	2101      	movs	r1, #1
     202:	200e      	movs	r0, #14
     204:	4b03      	ldr	r3, [pc, #12]	; (214 <HostMemWriteByte+0x60>)
     206:	4798      	blx	r3

	return true;
     208:	2301      	movs	r3, #1
}
     20a:	0018      	movs	r0, r3
     20c:	46bd      	mov	sp, r7
     20e:	b004      	add	sp, #16
     210:	bd80      	pop	{r7, pc}
     212:	46c0      	nop			; (mov r8, r8)
     214:	00000b39 	.word	0x00000b39
     218:	00000115 	.word	0x00000115

0000021c <HostMemWriteWord>:



bool HostMemWriteWord( unsigned long adr, unsigned short word )
{
     21c:	b580      	push	{r7, lr}
     21e:	b084      	sub	sp, #16
     220:	af00      	add	r7, sp, #0
     222:	6078      	str	r0, [r7, #4]
     224:	000a      	movs	r2, r1
     226:	1cbb      	adds	r3, r7, #2
     228:	801a      	strh	r2, [r3, #0]
	unsigned long addres = adr | 0x00800000;
     22a:	687b      	ldr	r3, [r7, #4]
     22c:	2280      	movs	r2, #128	; 0x80
     22e:	0412      	lsls	r2, r2, #16
     230:	4313      	orrs	r3, r2
     232:	60fb      	str	r3, [r7, #12]

	GpioBitOut( FT8XX_nCS,0 );
     234:	2100      	movs	r1, #0
     236:	200e      	movs	r0, #14
     238:	4b14      	ldr	r3, [pc, #80]	; (28c <HostMemWriteWord+0x70>)
     23a:	4798      	blx	r3

		TransByte( (unsigned char)((addres & 0x00FF0000)>>16) );
     23c:	68fb      	ldr	r3, [r7, #12]
     23e:	0c1b      	lsrs	r3, r3, #16
     240:	b2db      	uxtb	r3, r3
     242:	0018      	movs	r0, r3
     244:	4b12      	ldr	r3, [pc, #72]	; (290 <HostMemWriteWord+0x74>)
     246:	4798      	blx	r3
		TransByte( (unsigned char)((addres & 0x0000FF00)>>8) );
     248:	68fb      	ldr	r3, [r7, #12]
     24a:	0a1b      	lsrs	r3, r3, #8
     24c:	b2db      	uxtb	r3, r3
     24e:	0018      	movs	r0, r3
     250:	4b0f      	ldr	r3, [pc, #60]	; (290 <HostMemWriteWord+0x74>)
     252:	4798      	blx	r3
		TransByte( (unsigned char)(addres & 0x000000FF) );
     254:	68fb      	ldr	r3, [r7, #12]
     256:	b2db      	uxtb	r3, r3
     258:	0018      	movs	r0, r3
     25a:	4b0d      	ldr	r3, [pc, #52]	; (290 <HostMemWriteWord+0x74>)
     25c:	4798      	blx	r3
		TransByte( (unsigned char)(word&0x00FF) );
     25e:	1cbb      	adds	r3, r7, #2
     260:	881b      	ldrh	r3, [r3, #0]
     262:	b2db      	uxtb	r3, r3
     264:	0018      	movs	r0, r3
     266:	4b0a      	ldr	r3, [pc, #40]	; (290 <HostMemWriteWord+0x74>)
     268:	4798      	blx	r3
		TransByte( (unsigned char)((word&0xFF00)>>8) );
     26a:	1cbb      	adds	r3, r7, #2
     26c:	881b      	ldrh	r3, [r3, #0]
     26e:	0a1b      	lsrs	r3, r3, #8
     270:	b29b      	uxth	r3, r3
     272:	b2db      	uxtb	r3, r3
     274:	0018      	movs	r0, r3
     276:	4b06      	ldr	r3, [pc, #24]	; (290 <HostMemWriteWord+0x74>)
     278:	4798      	blx	r3

	GpioBitOut( FT8XX_nCS,1 );
     27a:	2101      	movs	r1, #1
     27c:	200e      	movs	r0, #14
     27e:	4b03      	ldr	r3, [pc, #12]	; (28c <HostMemWriteWord+0x70>)
     280:	4798      	blx	r3

	return true;
     282:	2301      	movs	r3, #1
}
     284:	0018      	movs	r0, r3
     286:	46bd      	mov	sp, r7
     288:	b004      	add	sp, #16
     28a:	bd80      	pop	{r7, pc}
     28c:	00000b39 	.word	0x00000b39
     290:	00000115 	.word	0x00000115

00000294 <HostMemWriteDoubleWord>:



bool HostMemWriteDoubleWord( unsigned long adr, unsigned long dword )
{
     294:	b580      	push	{r7, lr}
     296:	b088      	sub	sp, #32
     298:	af00      	add	r7, sp, #0
     29a:	6078      	str	r0, [r7, #4]
     29c:	6039      	str	r1, [r7, #0]
	int i;
	unsigned char rx;
	unsigned long addres = adr | 0x00800000;
     29e:	687b      	ldr	r3, [r7, #4]
     2a0:	2280      	movs	r2, #128	; 0x80
     2a2:	0412      	lsls	r2, r2, #16
     2a4:	4313      	orrs	r3, r2
     2a6:	61bb      	str	r3, [r7, #24]
	unsigned char buf[8];

	buf[0]= (unsigned char)((addres & 0x00FF0000)>>16);
     2a8:	69bb      	ldr	r3, [r7, #24]
     2aa:	0c1b      	lsrs	r3, r3, #16
     2ac:	b2da      	uxtb	r2, r3
     2ae:	230c      	movs	r3, #12
     2b0:	18fb      	adds	r3, r7, r3
     2b2:	701a      	strb	r2, [r3, #0]
	buf[1]= (unsigned char)((addres & 0x0000FF00)>>8);
     2b4:	69bb      	ldr	r3, [r7, #24]
     2b6:	0a1b      	lsrs	r3, r3, #8
     2b8:	b2da      	uxtb	r2, r3
     2ba:	230c      	movs	r3, #12
     2bc:	18fb      	adds	r3, r7, r3
     2be:	705a      	strb	r2, [r3, #1]
	buf[2]= (unsigned char)(addres & 0x000000FF);
     2c0:	69bb      	ldr	r3, [r7, #24]
     2c2:	b2da      	uxtb	r2, r3
     2c4:	230c      	movs	r3, #12
     2c6:	18fb      	adds	r3, r7, r3
     2c8:	709a      	strb	r2, [r3, #2]
	buf[3]= (unsigned char)(dword&0x000000FF);
     2ca:	683b      	ldr	r3, [r7, #0]
     2cc:	b2da      	uxtb	r2, r3
     2ce:	230c      	movs	r3, #12
     2d0:	18fb      	adds	r3, r7, r3
     2d2:	70da      	strb	r2, [r3, #3]
	buf[4]= (unsigned char)((dword&0x0000FF00)>> 8);
     2d4:	683b      	ldr	r3, [r7, #0]
     2d6:	0a1b      	lsrs	r3, r3, #8
     2d8:	b2da      	uxtb	r2, r3
     2da:	230c      	movs	r3, #12
     2dc:	18fb      	adds	r3, r7, r3
     2de:	711a      	strb	r2, [r3, #4]
	buf[5]= (unsigned char)((dword&0x00FF0000)>>16);
     2e0:	683b      	ldr	r3, [r7, #0]
     2e2:	0c1b      	lsrs	r3, r3, #16
     2e4:	b2da      	uxtb	r2, r3
     2e6:	230c      	movs	r3, #12
     2e8:	18fb      	adds	r3, r7, r3
     2ea:	715a      	strb	r2, [r3, #5]
	buf[6]= (unsigned char)((dword&0xFF000000)>>24);
     2ec:	683b      	ldr	r3, [r7, #0]
     2ee:	0e1b      	lsrs	r3, r3, #24
     2f0:	b2da      	uxtb	r2, r3
     2f2:	230c      	movs	r3, #12
     2f4:	18fb      	adds	r3, r7, r3
     2f6:	719a      	strb	r2, [r3, #6]

	GpioBitOut( FT8XX_nCS,0 );
     2f8:	2100      	movs	r1, #0
     2fa:	200e      	movs	r0, #14
     2fc:	4b13      	ldr	r3, [pc, #76]	; (34c <HostMemWriteDoubleWord+0xb8>)
     2fe:	4798      	blx	r3

		for( i=0;i<7;i++ )
     300:	2300      	movs	r3, #0
     302:	61fb      	str	r3, [r7, #28]
     304:	e016      	b.n	334 <HostMemWriteDoubleWord+0xa0>
		{
			ATSAM_SPI_TRANS( buf[i] );
     306:	4b12      	ldr	r3, [pc, #72]	; (350 <HostMemWriteDoubleWord+0xbc>)
     308:	220c      	movs	r2, #12
     30a:	18b9      	adds	r1, r7, r2
     30c:	69fa      	ldr	r2, [r7, #28]
     30e:	188a      	adds	r2, r1, r2
     310:	7812      	ldrb	r2, [r2, #0]
     312:	629a      	str	r2, [r3, #40]	; 0x28
     314:	46c0      	nop			; (mov r8, r8)
     316:	4b0e      	ldr	r3, [pc, #56]	; (350 <HostMemWriteDoubleWord+0xbc>)
     318:	7e1b      	ldrb	r3, [r3, #24]
     31a:	b2db      	uxtb	r3, r3
     31c:	001a      	movs	r2, r3
     31e:	2302      	movs	r3, #2
     320:	4013      	ands	r3, r2
     322:	d0f8      	beq.n	316 <HostMemWriteDoubleWord+0x82>
     324:	4b0a      	ldr	r3, [pc, #40]	; (350 <HostMemWriteDoubleWord+0xbc>)
     326:	6a9a      	ldr	r2, [r3, #40]	; 0x28
     328:	2317      	movs	r3, #23
     32a:	18fb      	adds	r3, r7, r3
     32c:	701a      	strb	r2, [r3, #0]
	buf[5]= (unsigned char)((dword&0x00FF0000)>>16);
	buf[6]= (unsigned char)((dword&0xFF000000)>>24);

	GpioBitOut( FT8XX_nCS,0 );

		for( i=0;i<7;i++ )
     32e:	69fb      	ldr	r3, [r7, #28]
     330:	3301      	adds	r3, #1
     332:	61fb      	str	r3, [r7, #28]
     334:	69fb      	ldr	r3, [r7, #28]
     336:	2b06      	cmp	r3, #6
     338:	dde5      	ble.n	306 <HostMemWriteDoubleWord+0x72>
		{
			ATSAM_SPI_TRANS( buf[i] );
		}

	GpioBitOut( FT8XX_nCS,1 );
     33a:	2101      	movs	r1, #1
     33c:	200e      	movs	r0, #14
     33e:	4b03      	ldr	r3, [pc, #12]	; (34c <HostMemWriteDoubleWord+0xb8>)
     340:	4798      	blx	r3
	return true;
     342:	2301      	movs	r3, #1
}
     344:	0018      	movs	r0, r3
     346:	46bd      	mov	sp, r7
     348:	b008      	add	sp, #32
     34a:	bd80      	pop	{r7, pc}
     34c:	00000b39 	.word	0x00000b39
     350:	42001000 	.word	0x42001000

00000354 <HostMemReadWord>:
}



unsigned short HostMemReadWord( unsigned long adr )
{
     354:	b590      	push	{r4, r7, lr}
     356:	b085      	sub	sp, #20
     358:	af00      	add	r7, sp, #0
     35a:	6078      	str	r0, [r7, #4]
	unsigned long addres = adr | 0x00000000;
     35c:	687b      	ldr	r3, [r7, #4]
     35e:	60fb      	str	r3, [r7, #12]
	unsigned char H_byte;
	unsigned char L_byte;

	GpioBitOut( FT8XX_nCS,0 );
     360:	2100      	movs	r1, #0
     362:	200e      	movs	r0, #14
     364:	4b1b      	ldr	r3, [pc, #108]	; (3d4 <HostMemReadWord+0x80>)
     366:	4798      	blx	r3

		TransByte( (unsigned char)((addres & 0x00FF0000)>>16) );
     368:	68fb      	ldr	r3, [r7, #12]
     36a:	0c1b      	lsrs	r3, r3, #16
     36c:	b2db      	uxtb	r3, r3
     36e:	0018      	movs	r0, r3
     370:	4b19      	ldr	r3, [pc, #100]	; (3d8 <HostMemReadWord+0x84>)
     372:	4798      	blx	r3
		TransByte( (unsigned char)((addres & 0x0000FF00)>>8) );
     374:	68fb      	ldr	r3, [r7, #12]
     376:	0a1b      	lsrs	r3, r3, #8
     378:	b2db      	uxtb	r3, r3
     37a:	0018      	movs	r0, r3
     37c:	4b16      	ldr	r3, [pc, #88]	; (3d8 <HostMemReadWord+0x84>)
     37e:	4798      	blx	r3
		TransByte( (unsigned char)(addres & 0x000000FF) );
     380:	68fb      	ldr	r3, [r7, #12]
     382:	b2db      	uxtb	r3, r3
     384:	0018      	movs	r0, r3
     386:	4b14      	ldr	r3, [pc, #80]	; (3d8 <HostMemReadWord+0x84>)
     388:	4798      	blx	r3

		TransByte( 0x00 );//dummy byte
     38a:	2000      	movs	r0, #0
     38c:	4b12      	ldr	r3, [pc, #72]	; (3d8 <HostMemReadWord+0x84>)
     38e:	4798      	blx	r3

		L_byte = TransByte( 0x00 );//Low byte
     390:	230b      	movs	r3, #11
     392:	18fc      	adds	r4, r7, r3
     394:	2000      	movs	r0, #0
     396:	4b10      	ldr	r3, [pc, #64]	; (3d8 <HostMemReadWord+0x84>)
     398:	4798      	blx	r3
     39a:	0003      	movs	r3, r0
     39c:	7023      	strb	r3, [r4, #0]
		H_byte = TransByte( 0x00 );//Hi  byte
     39e:	230a      	movs	r3, #10
     3a0:	18fc      	adds	r4, r7, r3
     3a2:	2000      	movs	r0, #0
     3a4:	4b0c      	ldr	r3, [pc, #48]	; (3d8 <HostMemReadWord+0x84>)
     3a6:	4798      	blx	r3
     3a8:	0003      	movs	r3, r0
     3aa:	7023      	strb	r3, [r4, #0]

	GpioBitOut( FT8XX_nCS,1 );
     3ac:	2101      	movs	r1, #1
     3ae:	200e      	movs	r0, #14
     3b0:	4b08      	ldr	r3, [pc, #32]	; (3d4 <HostMemReadWord+0x80>)
     3b2:	4798      	blx	r3

	return ((unsigned short)(H_byte * 256 + L_byte)) ;
     3b4:	230a      	movs	r3, #10
     3b6:	18fb      	adds	r3, r7, r3
     3b8:	781b      	ldrb	r3, [r3, #0]
     3ba:	b29b      	uxth	r3, r3
     3bc:	021b      	lsls	r3, r3, #8
     3be:	b29a      	uxth	r2, r3
     3c0:	230b      	movs	r3, #11
     3c2:	18fb      	adds	r3, r7, r3
     3c4:	781b      	ldrb	r3, [r3, #0]
     3c6:	b29b      	uxth	r3, r3
     3c8:	18d3      	adds	r3, r2, r3
     3ca:	b29b      	uxth	r3, r3
}
     3cc:	0018      	movs	r0, r3
     3ce:	46bd      	mov	sp, r7
     3d0:	b005      	add	sp, #20
     3d2:	bd90      	pop	{r4, r7, pc}
     3d4:	00000b39 	.word	0x00000b39
     3d8:	00000115 	.word	0x00000115

000003dc <incCMDOffset>:
static unsigned short Updatecmdfifo( unsigned short cmd_fifo_wp, unsigned short count);



unsigned int incCMDOffset(unsigned int currentOffset, unsigned short commandSize)
{
     3dc:	b580      	push	{r7, lr}
     3de:	b084      	sub	sp, #16
     3e0:	af00      	add	r7, sp, #0
     3e2:	6078      	str	r0, [r7, #4]
     3e4:	000a      	movs	r2, r1
     3e6:	1cbb      	adds	r3, r7, #2
     3e8:	801a      	strh	r2, [r3, #0]
    unsigned int newOffset;

    newOffset = currentOffset + commandSize;
     3ea:	1cbb      	adds	r3, r7, #2
     3ec:	881a      	ldrh	r2, [r3, #0]
     3ee:	687b      	ldr	r3, [r7, #4]
     3f0:	18d3      	adds	r3, r2, r3
     3f2:	60fb      	str	r3, [r7, #12]
    if(newOffset > 4095)
     3f4:	68fb      	ldr	r3, [r7, #12]
     3f6:	4a06      	ldr	r2, [pc, #24]	; (410 <incCMDOffset+0x34>)
     3f8:	4293      	cmp	r3, r2
     3fa:	d904      	bls.n	406 <incCMDOffset+0x2a>
    {
        newOffset = (newOffset - 4096);
     3fc:	68fb      	ldr	r3, [r7, #12]
     3fe:	4a05      	ldr	r2, [pc, #20]	; (414 <incCMDOffset+0x38>)
     400:	4694      	mov	ip, r2
     402:	4463      	add	r3, ip
     404:	60fb      	str	r3, [r7, #12]
    }
    return newOffset;
     406:	68fb      	ldr	r3, [r7, #12]
}
     408:	0018      	movs	r0, r3
     40a:	46bd      	mov	sp, r7
     40c:	b004      	add	sp, #16
     40e:	bd80      	pop	{r7, pc}
     410:	00000fff 	.word	0x00000fff
     414:	fffff000 	.word	0xfffff000

00000418 <fifo_Freespace>:



static unsigned short fifo_Freespace(unsigned short cmd_fifo_wp )
{
     418:	b580      	push	{r7, lr}
     41a:	b084      	sub	sp, #16
     41c:	af00      	add	r7, sp, #0
     41e:	0002      	movs	r2, r0
     420:	1dbb      	adds	r3, r7, #6
     422:	801a      	strh	r2, [r3, #0]
 
	unsigned short fullness,retval;
    fullness = ( cmd_fifo_wp - HostMemReadWord(REG_CMD_READ)) & 4095;
     424:	4b0e      	ldr	r3, [pc, #56]	; (460 <fifo_Freespace+0x48>)
     426:	0018      	movs	r0, r3
     428:	4b0e      	ldr	r3, [pc, #56]	; (464 <fifo_Freespace+0x4c>)
     42a:	4798      	blx	r3
     42c:	0003      	movs	r3, r0
     42e:	001a      	movs	r2, r3
     430:	1dbb      	adds	r3, r7, #6
     432:	881b      	ldrh	r3, [r3, #0]
     434:	1a9b      	subs	r3, r3, r2
     436:	b29a      	uxth	r2, r3
     438:	230e      	movs	r3, #14
     43a:	18fb      	adds	r3, r7, r3
     43c:	0512      	lsls	r2, r2, #20
     43e:	0d12      	lsrs	r2, r2, #20
     440:	801a      	strh	r2, [r3, #0]
    retval = (FT_CMD_FIFO_SIZE - 4) - fullness;
     442:	230c      	movs	r3, #12
     444:	18fb      	adds	r3, r7, r3
     446:	220e      	movs	r2, #14
     448:	18ba      	adds	r2, r7, r2
     44a:	8812      	ldrh	r2, [r2, #0]
     44c:	4906      	ldr	r1, [pc, #24]	; (468 <fifo_Freespace+0x50>)
     44e:	1a8a      	subs	r2, r1, r2
     450:	801a      	strh	r2, [r3, #0]


    return (retval);
     452:	230c      	movs	r3, #12
     454:	18fb      	adds	r3, r7, r3
     456:	881b      	ldrh	r3, [r3, #0]
}
     458:	0018      	movs	r0, r3
     45a:	46bd      	mov	sp, r7
     45c:	b004      	add	sp, #16
     45e:	bd80      	pop	{r7, pc}
     460:	003020f8 	.word	0x003020f8
     464:	00000355 	.word	0x00000355
     468:	00000ffc 	.word	0x00000ffc

0000046c <CheckCmdBuffer>:



static void CheckCmdBuffer( unsigned long now , unsigned short count )
{
     46c:	b590      	push	{r4, r7, lr}
     46e:	b085      	sub	sp, #20
     470:	af00      	add	r7, sp, #0
     472:	6078      	str	r0, [r7, #4]
     474:	000a      	movs	r2, r1
     476:	1cbb      	adds	r3, r7, #2
     478:	801a      	strh	r2, [r3, #0]
	unsigned short getfreespace;
	do
	{
		getfreespace = fifo_Freespace( now );
     47a:	687b      	ldr	r3, [r7, #4]
     47c:	b29b      	uxth	r3, r3
     47e:	220e      	movs	r2, #14
     480:	18bc      	adds	r4, r7, r2
     482:	0018      	movs	r0, r3
     484:	4b07      	ldr	r3, [pc, #28]	; (4a4 <CheckCmdBuffer+0x38>)
     486:	4798      	blx	r3
     488:	0003      	movs	r3, r0
     48a:	8023      	strh	r3, [r4, #0]
	}while( getfreespace < count );
     48c:	230e      	movs	r3, #14
     48e:	18fa      	adds	r2, r7, r3
     490:	1cbb      	adds	r3, r7, #2
     492:	8812      	ldrh	r2, [r2, #0]
     494:	881b      	ldrh	r3, [r3, #0]
     496:	429a      	cmp	r2, r3
     498:	d3ef      	bcc.n	47a <CheckCmdBuffer+0xe>
}
     49a:	46c0      	nop			; (mov r8, r8)
     49c:	46bd      	mov	sp, r7
     49e:	b005      	add	sp, #20
     4a0:	bd90      	pop	{r4, r7, pc}
     4a2:	46c0      	nop			; (mov r8, r8)
     4a4:	00000419 	.word	0x00000419

000004a8 <Updatecmdfifo>:



static unsigned short Updatecmdfifo( unsigned short cmd_fifo_wp, unsigned short count )
{
     4a8:	b580      	push	{r7, lr}
     4aa:	b082      	sub	sp, #8
     4ac:	af00      	add	r7, sp, #0
     4ae:	0002      	movs	r2, r0
     4b0:	1dbb      	adds	r3, r7, #6
     4b2:	801a      	strh	r2, [r3, #0]
     4b4:	1d3b      	adds	r3, r7, #4
     4b6:	1c0a      	adds	r2, r1, #0
     4b8:	801a      	strh	r2, [r3, #0]
     cmd_fifo_wp = ( cmd_fifo_wp + count) & 4095;
     4ba:	1dba      	adds	r2, r7, #6
     4bc:	1d3b      	adds	r3, r7, #4
     4be:	8812      	ldrh	r2, [r2, #0]
     4c0:	881b      	ldrh	r3, [r3, #0]
     4c2:	18d3      	adds	r3, r2, r3
     4c4:	b29a      	uxth	r2, r3
     4c6:	1dbb      	adds	r3, r7, #6
     4c8:	0512      	lsls	r2, r2, #20
     4ca:	0d12      	lsrs	r2, r2, #20
     4cc:	801a      	strh	r2, [r3, #0]
     cmd_fifo_wp = ( cmd_fifo_wp + 3) & 0xffc;
     4ce:	1dbb      	adds	r3, r7, #6
     4d0:	881b      	ldrh	r3, [r3, #0]
     4d2:	3303      	adds	r3, #3
     4d4:	b29a      	uxth	r2, r3
     4d6:	1dbb      	adds	r3, r7, #6
     4d8:	4907      	ldr	r1, [pc, #28]	; (4f8 <Updatecmdfifo+0x50>)
     4da:	400a      	ands	r2, r1
     4dc:	801a      	strh	r2, [r3, #0]

    HostMemWriteWord( REG_CMD_WRITE, cmd_fifo_wp);
     4de:	1dbb      	adds	r3, r7, #6
     4e0:	881b      	ldrh	r3, [r3, #0]
     4e2:	4a06      	ldr	r2, [pc, #24]	; (4fc <Updatecmdfifo+0x54>)
     4e4:	0019      	movs	r1, r3
     4e6:	0010      	movs	r0, r2
     4e8:	4b05      	ldr	r3, [pc, #20]	; (500 <Updatecmdfifo+0x58>)
     4ea:	4798      	blx	r3

	return cmd_fifo_wp;
     4ec:	1dbb      	adds	r3, r7, #6
     4ee:	881b      	ldrh	r3, [r3, #0]
}
     4f0:	0018      	movs	r0, r3
     4f2:	46bd      	mov	sp, r7
     4f4:	b002      	add	sp, #8
     4f6:	bd80      	pop	{r7, pc}
     4f8:	00000ffc 	.word	0x00000ffc
     4fc:	003020fc 	.word	0x003020fc
     500:	0000021d 	.word	0x0000021d

00000504 <WaitCmdfifo_empty>:



unsigned short WaitCmdfifo_empty( void )
{
     504:	b590      	push	{r4, r7, lr}
     506:	b083      	sub	sp, #12
     508:	af00      	add	r7, sp, #0
	unsigned short cmd_fifo_wp,cmdBufferRd,cmdBufferWr;

	do
	{
		cmdBufferRd = HostMemReadWord(REG_CMD_READ);
     50a:	1dbc      	adds	r4, r7, #6
     50c:	4b0f      	ldr	r3, [pc, #60]	; (54c <WaitCmdfifo_empty+0x48>)
     50e:	0018      	movs	r0, r3
     510:	4b0f      	ldr	r3, [pc, #60]	; (550 <WaitCmdfifo_empty+0x4c>)
     512:	4798      	blx	r3
     514:	0003      	movs	r3, r0
     516:	8023      	strh	r3, [r4, #0]
		cmdBufferWr = HostMemReadWord(REG_CMD_WRITE);
     518:	1d3c      	adds	r4, r7, #4
     51a:	4b0e      	ldr	r3, [pc, #56]	; (554 <WaitCmdfifo_empty+0x50>)
     51c:	0018      	movs	r0, r3
     51e:	4b0c      	ldr	r3, [pc, #48]	; (550 <WaitCmdfifo_empty+0x4c>)
     520:	4798      	blx	r3
     522:	0003      	movs	r3, r0
     524:	8023      	strh	r3, [r4, #0]
	}while (cmdBufferWr != cmdBufferRd);
     526:	1d3a      	adds	r2, r7, #4
     528:	1dbb      	adds	r3, r7, #6
     52a:	8812      	ldrh	r2, [r2, #0]
     52c:	881b      	ldrh	r3, [r3, #0]
     52e:	429a      	cmp	r2, r3
     530:	d1eb      	bne.n	50a <WaitCmdfifo_empty+0x6>

    cmd_fifo_wp = HostMemReadWord( REG_CMD_WRITE);
     532:	1cbc      	adds	r4, r7, #2
     534:	4b07      	ldr	r3, [pc, #28]	; (554 <WaitCmdfifo_empty+0x50>)
     536:	0018      	movs	r0, r3
     538:	4b05      	ldr	r3, [pc, #20]	; (550 <WaitCmdfifo_empty+0x4c>)
     53a:	4798      	blx	r3
     53c:	0003      	movs	r3, r0
     53e:	8023      	strh	r3, [r4, #0]

	return cmd_fifo_wp;
     540:	1cbb      	adds	r3, r7, #2
     542:	881b      	ldrh	r3, [r3, #0]
}
     544:	0018      	movs	r0, r3
     546:	46bd      	mov	sp, r7
     548:	b003      	add	sp, #12
     54a:	bd90      	pop	{r4, r7, pc}
     54c:	003020f8 	.word	0x003020f8
     550:	00000355 	.word	0x00000355
     554:	003020fc 	.word	0x003020fc

00000558 <WrCmdBuf>:



unsigned short WrCmdBuf( unsigned long adr, unsigned short cmd_fifo_wp, unsigned char *buffer,unsigned short count )
{
     558:	b590      	push	{r4, r7, lr}
     55a:	b089      	sub	sp, #36	; 0x24
     55c:	af00      	add	r7, sp, #0
     55e:	60f8      	str	r0, [r7, #12]
     560:	0008      	movs	r0, r1
     562:	607a      	str	r2, [r7, #4]
     564:	0019      	movs	r1, r3
     566:	230a      	movs	r3, #10
     568:	18fb      	adds	r3, r7, r3
     56a:	1c02      	adds	r2, r0, #0
     56c:	801a      	strh	r2, [r3, #0]
     56e:	2308      	movs	r3, #8
     570:	18fb      	adds	r3, r7, r3
     572:	1c0a      	adds	r2, r1, #0
     574:	801a      	strh	r2, [r3, #0]
  unsigned char rx;
	unsigned long length =0, SizeTransfered = 0;
     576:	2300      	movs	r3, #0
     578:	61fb      	str	r3, [r7, #28]
     57a:	2300      	movs	r3, #0
     57c:	61bb      	str	r3, [r7, #24]
	unsigned long addres = adr | 0x00800000;
     57e:	68fb      	ldr	r3, [r7, #12]
     580:	2280      	movs	r2, #128	; 0x80
     582:	0412      	lsls	r2, r2, #16
     584:	4313      	orrs	r3, r2
     586:	617b      	str	r3, [r7, #20]

    do
	{
        length = count;
     588:	2308      	movs	r3, #8
     58a:	18fb      	adds	r3, r7, r3
     58c:	881b      	ldrh	r3, [r3, #0]
     58e:	61fb      	str	r3, [r7, #28]

        if (length > fifo_Freespace(cmd_fifo_wp) )
     590:	230a      	movs	r3, #10
     592:	18fb      	adds	r3, r7, r3
     594:	881b      	ldrh	r3, [r3, #0]
     596:	0018      	movs	r0, r3
     598:	4b42      	ldr	r3, [pc, #264]	; (6a4 <WrCmdBuf+0x14c>)
     59a:	4798      	blx	r3
     59c:	0003      	movs	r3, r0
     59e:	1e1a      	subs	r2, r3, #0
     5a0:	69fb      	ldr	r3, [r7, #28]
     5a2:	429a      	cmp	r2, r3
     5a4:	d207      	bcs.n	5b6 <WrCmdBuf+0x5e>
		{
            length = fifo_Freespace(cmd_fifo_wp);
     5a6:	230a      	movs	r3, #10
     5a8:	18fb      	adds	r3, r7, r3
     5aa:	881b      	ldrh	r3, [r3, #0]
     5ac:	0018      	movs	r0, r3
     5ae:	4b3d      	ldr	r3, [pc, #244]	; (6a4 <WrCmdBuf+0x14c>)
     5b0:	4798      	blx	r3
     5b2:	0003      	movs	r3, r0
     5b4:	61fb      	str	r3, [r7, #28]
        }
		CheckCmdBuffer( cmd_fifo_wp, length);
     5b6:	230a      	movs	r3, #10
     5b8:	18fb      	adds	r3, r7, r3
     5ba:	881b      	ldrh	r3, [r3, #0]
     5bc:	69fa      	ldr	r2, [r7, #28]
     5be:	b292      	uxth	r2, r2
     5c0:	0011      	movs	r1, r2
     5c2:	0018      	movs	r0, r3
     5c4:	4b38      	ldr	r3, [pc, #224]	; (6a8 <WrCmdBuf+0x150>)
     5c6:	4798      	blx	r3

		GpioBitOut( FT8XX_nCS,0 );
     5c8:	2100      	movs	r1, #0
     5ca:	200e      	movs	r0, #14
     5cc:	4b37      	ldr	r3, [pc, #220]	; (6ac <WrCmdBuf+0x154>)
     5ce:	4798      	blx	r3

			addres = (RAM_CMD + cmd_fifo_wp) | 0x00800000;
     5d0:	230a      	movs	r3, #10
     5d2:	18fb      	adds	r3, r7, r3
     5d4:	881b      	ldrh	r3, [r3, #0]
     5d6:	22c2      	movs	r2, #194	; 0xc2
     5d8:	0392      	lsls	r2, r2, #14
     5da:	4694      	mov	ip, r2
     5dc:	4463      	add	r3, ip
     5de:	2280      	movs	r2, #128	; 0x80
     5e0:	0412      	lsls	r2, r2, #16
     5e2:	4313      	orrs	r3, r2
     5e4:	617b      	str	r3, [r7, #20]
			TransByte( (unsigned char)((addres & 0x00FF0000)>>16) );
     5e6:	697b      	ldr	r3, [r7, #20]
     5e8:	0c1b      	lsrs	r3, r3, #16
     5ea:	b2db      	uxtb	r3, r3
     5ec:	0018      	movs	r0, r3
     5ee:	4b30      	ldr	r3, [pc, #192]	; (6b0 <WrCmdBuf+0x158>)
     5f0:	4798      	blx	r3
			TransByte( (unsigned char)((addres & 0x0000FF00)>>8) );
     5f2:	697b      	ldr	r3, [r7, #20]
     5f4:	0a1b      	lsrs	r3, r3, #8
     5f6:	b2db      	uxtb	r3, r3
     5f8:	0018      	movs	r0, r3
     5fa:	4b2d      	ldr	r3, [pc, #180]	; (6b0 <WrCmdBuf+0x158>)
     5fc:	4798      	blx	r3
			TransByte( (unsigned char)(addres & 0x000000FF) );
     5fe:	697b      	ldr	r3, [r7, #20]
     600:	b2db      	uxtb	r3, r3
     602:	0018      	movs	r0, r3
     604:	4b2a      	ldr	r3, [pc, #168]	; (6b0 <WrCmdBuf+0x158>)
     606:	4798      	blx	r3
 
			SizeTransfered = 0;
     608:	2300      	movs	r3, #0
     60a:	61bb      	str	r3, [r7, #24]
			while (length--)
     60c:	e015      	b.n	63a <WrCmdBuf+0xe2>
			{
				ATSAM_SPI_TRANS(*buffer++);
     60e:	4a29      	ldr	r2, [pc, #164]	; (6b4 <WrCmdBuf+0x15c>)
     610:	687b      	ldr	r3, [r7, #4]
     612:	1c59      	adds	r1, r3, #1
     614:	6079      	str	r1, [r7, #4]
     616:	781b      	ldrb	r3, [r3, #0]
     618:	6293      	str	r3, [r2, #40]	; 0x28
     61a:	46c0      	nop			; (mov r8, r8)
     61c:	4b25      	ldr	r3, [pc, #148]	; (6b4 <WrCmdBuf+0x15c>)
     61e:	7e1b      	ldrb	r3, [r3, #24]
     620:	b2db      	uxtb	r3, r3
     622:	001a      	movs	r2, r3
     624:	2302      	movs	r3, #2
     626:	4013      	ands	r3, r2
     628:	d0f8      	beq.n	61c <WrCmdBuf+0xc4>
     62a:	4b22      	ldr	r3, [pc, #136]	; (6b4 <WrCmdBuf+0x15c>)
     62c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
     62e:	2313      	movs	r3, #19
     630:	18fb      	adds	r3, r7, r3
     632:	701a      	strb	r2, [r3, #0]

				SizeTransfered ++;
     634:	69bb      	ldr	r3, [r7, #24]
     636:	3301      	adds	r3, #1
     638:	61bb      	str	r3, [r7, #24]
			TransByte( (unsigned char)((addres & 0x00FF0000)>>16) );
			TransByte( (unsigned char)((addres & 0x0000FF00)>>8) );
			TransByte( (unsigned char)(addres & 0x000000FF) );
 
			SizeTransfered = 0;
			while (length--)
     63a:	69fb      	ldr	r3, [r7, #28]
     63c:	1e5a      	subs	r2, r3, #1
     63e:	61fa      	str	r2, [r7, #28]
     640:	2b00      	cmp	r3, #0
     642:	d1e4      	bne.n	60e <WrCmdBuf+0xb6>
			{
				ATSAM_SPI_TRANS(*buffer++);

				SizeTransfered ++;
	        }
			length = SizeTransfered;
     644:	69bb      	ldr	r3, [r7, #24]
     646:	61fb      	str	r3, [r7, #28]
 
		GpioBitOut( FT8XX_nCS,1 );
     648:	2101      	movs	r1, #1
     64a:	200e      	movs	r0, #14
     64c:	4b17      	ldr	r3, [pc, #92]	; (6ac <WrCmdBuf+0x154>)
     64e:	4798      	blx	r3
		cmd_fifo_wp = Updatecmdfifo( cmd_fifo_wp, length);
     650:	69fb      	ldr	r3, [r7, #28]
     652:	b29a      	uxth	r2, r3
     654:	230a      	movs	r3, #10
     656:	18fc      	adds	r4, r7, r3
     658:	230a      	movs	r3, #10
     65a:	18fb      	adds	r3, r7, r3
     65c:	881b      	ldrh	r3, [r3, #0]
     65e:	0011      	movs	r1, r2
     660:	0018      	movs	r0, r3
     662:	4b15      	ldr	r3, [pc, #84]	; (6b8 <WrCmdBuf+0x160>)
     664:	4798      	blx	r3
     666:	0003      	movs	r3, r0
     668:	8023      	strh	r3, [r4, #0]
		cmd_fifo_wp = WaitCmdfifo_empty();
     66a:	230a      	movs	r3, #10
     66c:	18fc      	adds	r4, r7, r3
     66e:	4b13      	ldr	r3, [pc, #76]	; (6bc <WrCmdBuf+0x164>)
     670:	4798      	blx	r3
     672:	0003      	movs	r3, r0
     674:	8023      	strh	r3, [r4, #0]
 
        count -= length;
     676:	69fb      	ldr	r3, [r7, #28]
     678:	b29a      	uxth	r2, r3
     67a:	2308      	movs	r3, #8
     67c:	18fb      	adds	r3, r7, r3
     67e:	2108      	movs	r1, #8
     680:	1879      	adds	r1, r7, r1
     682:	8809      	ldrh	r1, [r1, #0]
     684:	1a8a      	subs	r2, r1, r2
     686:	801a      	strh	r2, [r3, #0]

    }while (count > 0);
     688:	2308      	movs	r3, #8
     68a:	18fb      	adds	r3, r7, r3
     68c:	881b      	ldrh	r3, [r3, #0]
     68e:	2b00      	cmp	r3, #0
     690:	d000      	beq.n	694 <WrCmdBuf+0x13c>
     692:	e779      	b.n	588 <WrCmdBuf+0x30>

	return cmd_fifo_wp;
     694:	230a      	movs	r3, #10
     696:	18fb      	adds	r3, r7, r3
     698:	881b      	ldrh	r3, [r3, #0]
}
     69a:	0018      	movs	r0, r3
     69c:	46bd      	mov	sp, r7
     69e:	b009      	add	sp, #36	; 0x24
     6a0:	bd90      	pop	{r4, r7, pc}
     6a2:	46c0      	nop			; (mov r8, r8)
     6a4:	00000419 	.word	0x00000419
     6a8:	0000046d 	.word	0x0000046d
     6ac:	00000b39 	.word	0x00000b39
     6b0:	00000115 	.word	0x00000115
     6b4:	42001000 	.word	0x42001000
     6b8:	000004a9 	.word	0x000004a9
     6bc:	00000505 	.word	0x00000505

000006c0 <InflateLoad>:




unsigned short InflateLoad( unsigned char *src, unsigned long dst_offset, unsigned long size )
{
     6c0:	b5b0      	push	{r4, r5, r7, lr}
     6c2:	b08a      	sub	sp, #40	; 0x28
     6c4:	af00      	add	r7, sp, #0
     6c6:	60f8      	str	r0, [r7, #12]
     6c8:	60b9      	str	r1, [r7, #8]
     6ca:	607a      	str	r2, [r7, #4]
	unsigned int cmdBufferRd = 0x0000;
     6cc:	2300      	movs	r3, #0
     6ce:	61bb      	str	r3, [r7, #24]
	unsigned int cmdBufferWr = 0x0000;
     6d0:	2300      	movs	r3, #0
     6d2:	617b      	str	r3, [r7, #20]
    unsigned short cmdOffset;

    unsigned long count=0;
     6d4:	2300      	movs	r3, #0
     6d6:	623b      	str	r3, [r7, #32]
    unsigned long ofs=0;
     6d8:	2300      	movs	r3, #0
     6da:	61fb      	str	r3, [r7, #28]


//--------------------------------------
	do
	{
		cmdBufferRd = HostMemReadWord(REG_CMD_READ);
     6dc:	4b47      	ldr	r3, [pc, #284]	; (7fc <InflateLoad+0x13c>)
     6de:	0018      	movs	r0, r3
     6e0:	4b47      	ldr	r3, [pc, #284]	; (800 <InflateLoad+0x140>)
     6e2:	4798      	blx	r3
     6e4:	0003      	movs	r3, r0
     6e6:	61bb      	str	r3, [r7, #24]
		cmdBufferWr = HostMemReadWord(REG_CMD_WRITE);
     6e8:	4b46      	ldr	r3, [pc, #280]	; (804 <InflateLoad+0x144>)
     6ea:	0018      	movs	r0, r3
     6ec:	4b44      	ldr	r3, [pc, #272]	; (800 <InflateLoad+0x140>)
     6ee:	4798      	blx	r3
     6f0:	0003      	movs	r3, r0
     6f2:	617b      	str	r3, [r7, #20]
	}while (cmdBufferWr != cmdBufferRd);
     6f4:	697a      	ldr	r2, [r7, #20]
     6f6:	69bb      	ldr	r3, [r7, #24]
     6f8:	429a      	cmp	r2, r3
     6fa:	d1ef      	bne.n	6dc <InflateLoad+0x1c>
	cmdOffset = cmdBufferWr;
     6fc:	2326      	movs	r3, #38	; 0x26
     6fe:	18fb      	adds	r3, r7, r3
     700:	697a      	ldr	r2, [r7, #20]
     702:	801a      	strh	r2, [r3, #0]

//--------------------------------------

	HostMemWriteDoubleWord( RAM_CMD + cmdOffset, (CMD_INFLATE));
     704:	2326      	movs	r3, #38	; 0x26
     706:	18fb      	adds	r3, r7, r3
     708:	881b      	ldrh	r3, [r3, #0]
     70a:	22c2      	movs	r2, #194	; 0xc2
     70c:	0392      	lsls	r2, r2, #14
     70e:	189a      	adds	r2, r3, r2
     710:	23de      	movs	r3, #222	; 0xde
     712:	425b      	negs	r3, r3
     714:	0019      	movs	r1, r3
     716:	0010      	movs	r0, r2
     718:	4b3b      	ldr	r3, [pc, #236]	; (808 <InflateLoad+0x148>)
     71a:	4798      	blx	r3
	cmdOffset = incCMDOffset(cmdOffset, 4);
     71c:	2326      	movs	r3, #38	; 0x26
     71e:	18fb      	adds	r3, r7, r3
     720:	881b      	ldrh	r3, [r3, #0]
     722:	2104      	movs	r1, #4
     724:	0018      	movs	r0, r3
     726:	4b39      	ldr	r3, [pc, #228]	; (80c <InflateLoad+0x14c>)
     728:	4798      	blx	r3
     72a:	0002      	movs	r2, r0
     72c:	2326      	movs	r3, #38	; 0x26
     72e:	18fb      	adds	r3, r7, r3
     730:	801a      	strh	r2, [r3, #0]

	HostMemWriteDoubleWord(RAM_CMD + cmdOffset, dst_offset);
     732:	2326      	movs	r3, #38	; 0x26
     734:	18fb      	adds	r3, r7, r3
     736:	881b      	ldrh	r3, [r3, #0]
     738:	22c2      	movs	r2, #194	; 0xc2
     73a:	0392      	lsls	r2, r2, #14
     73c:	4694      	mov	ip, r2
     73e:	4463      	add	r3, ip
     740:	68ba      	ldr	r2, [r7, #8]
     742:	0011      	movs	r1, r2
     744:	0018      	movs	r0, r3
     746:	4b30      	ldr	r3, [pc, #192]	; (808 <InflateLoad+0x148>)
     748:	4798      	blx	r3
	cmdOffset = incCMDOffset(cmdOffset, 4);
     74a:	2326      	movs	r3, #38	; 0x26
     74c:	18fb      	adds	r3, r7, r3
     74e:	881b      	ldrh	r3, [r3, #0]
     750:	2104      	movs	r1, #4
     752:	0018      	movs	r0, r3
     754:	4b2d      	ldr	r3, [pc, #180]	; (80c <InflateLoad+0x14c>)
     756:	4798      	blx	r3
     758:	0002      	movs	r2, r0
     75a:	2326      	movs	r3, #38	; 0x26
     75c:	18fb      	adds	r3, r7, r3
     75e:	801a      	strh	r2, [r3, #0]

	ofs=0;
     760:	2300      	movs	r3, #0
     762:	61fb      	str	r3, [r7, #28]
	while(size > 0)
     764:	e026      	b.n	7b4 <InflateLoad+0xf4>
	{

		if(size >= 8192)
     766:	687b      	ldr	r3, [r7, #4]
     768:	4a29      	ldr	r2, [pc, #164]	; (810 <InflateLoad+0x150>)
     76a:	4293      	cmp	r3, r2
     76c:	d903      	bls.n	776 <InflateLoad+0xb6>
		{
			count=8192;
     76e:	2380      	movs	r3, #128	; 0x80
     770:	019b      	lsls	r3, r3, #6
     772:	623b      	str	r3, [r7, #32]
     774:	e001      	b.n	77a <InflateLoad+0xba>
		}
		else
		{
			count=size;
     776:	687b      	ldr	r3, [r7, #4]
     778:	623b      	str	r3, [r7, #32]
		}
		cmdOffset = WrCmdBuf( RAM_CMD + cmdOffset, cmdOffset, &src[ofs],count );
     77a:	2326      	movs	r3, #38	; 0x26
     77c:	18fb      	adds	r3, r7, r3
     77e:	881b      	ldrh	r3, [r3, #0]
     780:	22c2      	movs	r2, #194	; 0xc2
     782:	0392      	lsls	r2, r2, #14
     784:	1898      	adds	r0, r3, r2
     786:	68fa      	ldr	r2, [r7, #12]
     788:	69fb      	ldr	r3, [r7, #28]
     78a:	18d2      	adds	r2, r2, r3
     78c:	6a3b      	ldr	r3, [r7, #32]
     78e:	b29d      	uxth	r5, r3
     790:	2326      	movs	r3, #38	; 0x26
     792:	18fc      	adds	r4, r7, r3
     794:	2326      	movs	r3, #38	; 0x26
     796:	18fb      	adds	r3, r7, r3
     798:	8819      	ldrh	r1, [r3, #0]
     79a:	002b      	movs	r3, r5
     79c:	4d1d      	ldr	r5, [pc, #116]	; (814 <InflateLoad+0x154>)
     79e:	47a8      	blx	r5
     7a0:	0003      	movs	r3, r0
     7a2:	8023      	strh	r3, [r4, #0]
		ofs=ofs+count;
     7a4:	69fa      	ldr	r2, [r7, #28]
     7a6:	6a3b      	ldr	r3, [r7, #32]
     7a8:	18d3      	adds	r3, r2, r3
     7aa:	61fb      	str	r3, [r7, #28]
		size -= count;
     7ac:	687a      	ldr	r2, [r7, #4]
     7ae:	6a3b      	ldr	r3, [r7, #32]
     7b0:	1ad3      	subs	r3, r2, r3
     7b2:	607b      	str	r3, [r7, #4]

	HostMemWriteDoubleWord(RAM_CMD + cmdOffset, dst_offset);
	cmdOffset = incCMDOffset(cmdOffset, 4);

	ofs=0;
	while(size > 0)
     7b4:	687b      	ldr	r3, [r7, #4]
     7b6:	2b00      	cmp	r3, #0
     7b8:	d1d5      	bne.n	766 <InflateLoad+0xa6>
		}
		cmdOffset = WrCmdBuf( RAM_CMD + cmdOffset, cmdOffset, &src[ofs],count );
		ofs=ofs+count;
		size -= count;
	}
	HostMemWriteWord(REG_CMD_WRITE, (cmdOffset));
     7ba:	2326      	movs	r3, #38	; 0x26
     7bc:	18fb      	adds	r3, r7, r3
     7be:	881b      	ldrh	r3, [r3, #0]
     7c0:	4a10      	ldr	r2, [pc, #64]	; (804 <InflateLoad+0x144>)
     7c2:	0019      	movs	r1, r3
     7c4:	0010      	movs	r0, r2
     7c6:	4b14      	ldr	r3, [pc, #80]	; (818 <InflateLoad+0x158>)
     7c8:	4798      	blx	r3

	do
	{
		cmdBufferRd = HostMemReadWord(REG_CMD_READ);
     7ca:	4b0c      	ldr	r3, [pc, #48]	; (7fc <InflateLoad+0x13c>)
     7cc:	0018      	movs	r0, r3
     7ce:	4b0c      	ldr	r3, [pc, #48]	; (800 <InflateLoad+0x140>)
     7d0:	4798      	blx	r3
     7d2:	0003      	movs	r3, r0
     7d4:	61bb      	str	r3, [r7, #24]
		cmdBufferWr = HostMemReadWord(REG_CMD_WRITE);
     7d6:	4b0b      	ldr	r3, [pc, #44]	; (804 <InflateLoad+0x144>)
     7d8:	0018      	movs	r0, r3
     7da:	4b09      	ldr	r3, [pc, #36]	; (800 <InflateLoad+0x140>)
     7dc:	4798      	blx	r3
     7de:	0003      	movs	r3, r0
     7e0:	617b      	str	r3, [r7, #20]
	}while (cmdBufferWr != cmdBufferRd);
     7e2:	697a      	ldr	r2, [r7, #20]
     7e4:	69bb      	ldr	r3, [r7, #24]
     7e6:	429a      	cmp	r2, r3
     7e8:	d1ef      	bne.n	7ca <InflateLoad+0x10a>

	cmdOffset = cmdBufferWr;
     7ea:	2326      	movs	r3, #38	; 0x26
     7ec:	18fb      	adds	r3, r7, r3
     7ee:	697a      	ldr	r2, [r7, #20]
     7f0:	801a      	strh	r2, [r3, #0]
}
     7f2:	46c0      	nop			; (mov r8, r8)
     7f4:	0018      	movs	r0, r3
     7f6:	46bd      	mov	sp, r7
     7f8:	b00a      	add	sp, #40	; 0x28
     7fa:	bdb0      	pop	{r4, r5, r7, pc}
     7fc:	003020f8 	.word	0x003020f8
     800:	00000355 	.word	0x00000355
     804:	003020fc 	.word	0x003020fc
     808:	00000295 	.word	0x00000295
     80c:	000003dd 	.word	0x000003dd
     810:	00001fff 	.word	0x00001fff
     814:	00000559 	.word	0x00000559
     818:	0000021d 	.word	0x0000021d

0000081c <system_interrupt_enter_critical_section>:
 * count of the critical section nesting will be kept, so that global interrupts
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_enter_critical_section(void)
{
     81c:	b580      	push	{r7, lr}
     81e:	af00      	add	r7, sp, #0
	cpu_irq_enter_critical();
     820:	4b02      	ldr	r3, [pc, #8]	; (82c <system_interrupt_enter_critical_section+0x10>)
     822:	4798      	blx	r3
}
     824:	46c0      	nop			; (mov r8, r8)
     826:	46bd      	mov	sp, r7
     828:	bd80      	pop	{r7, pc}
     82a:	46c0      	nop			; (mov r8, r8)
     82c:	00000c65 	.word	0x00000c65

00000830 <system_interrupt_leave_critical_section>:
 * count of the critical section nesting will be kept, so that global interrupts
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_leave_critical_section(void)
{
     830:	b580      	push	{r7, lr}
     832:	af00      	add	r7, sp, #0
	cpu_irq_leave_critical();
     834:	4b02      	ldr	r3, [pc, #8]	; (840 <system_interrupt_leave_critical_section+0x10>)
     836:	4798      	blx	r3
}
     838:	46c0      	nop			; (mov r8, r8)
     83a:	46bd      	mov	sp, r7
     83c:	bd80      	pop	{r7, pc}
     83e:	46c0      	nop			; (mov r8, r8)
     840:	00000cb9 	.word	0x00000cb9

00000844 <system_gclk_is_syncing>:




static inline bool system_gclk_is_syncing(void)
{
     844:	b580      	push	{r7, lr}
     846:	af00      	add	r7, sp, #0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
     848:	4b05      	ldr	r3, [pc, #20]	; (860 <system_gclk_is_syncing+0x1c>)
     84a:	785b      	ldrb	r3, [r3, #1]
     84c:	b2db      	uxtb	r3, r3
     84e:	b25b      	sxtb	r3, r3
     850:	2b00      	cmp	r3, #0
     852:	da01      	bge.n	858 <system_gclk_is_syncing+0x14>
		return true;
     854:	2301      	movs	r3, #1
     856:	e000      	b.n	85a <system_gclk_is_syncing+0x16>
	}

	return false;
     858:	2300      	movs	r3, #0
}
     85a:	0018      	movs	r0, r3
     85c:	46bd      	mov	sp, r7
     85e:	bd80      	pop	{r7, pc}
     860:	40000c00 	.word	0x40000c00

00000864 <GClkGenInit>:
	unsigned short div;
}GCLKGENCTRL;
*/

void GClkGenInit( GCLKGENCTRL *tbl )
{
     864:	b580      	push	{r7, lr}
     866:	b084      	sub	sp, #16
     868:	af00      	add	r7, sp, #0
     86a:	6078      	str	r0, [r7, #4]
	unsigned long genctrl = 0;
     86c:	2300      	movs	r3, #0
     86e:	60fb      	str	r3, [r7, #12]
	unsigned long gendiv = 0;
     870:	2300      	movs	r3, #0
     872:	60bb      	str	r3, [r7, #8]

	genctrl = ((tbl->src << USE_GCLKSRC_SHIFT) | tbl->id) | tbl->flag ;
     874:	687b      	ldr	r3, [r7, #4]
     876:	785b      	ldrb	r3, [r3, #1]
     878:	021b      	lsls	r3, r3, #8
     87a:	687a      	ldr	r2, [r7, #4]
     87c:	7812      	ldrb	r2, [r2, #0]
     87e:	4313      	orrs	r3, r2
     880:	001a      	movs	r2, r3
     882:	687b      	ldr	r3, [r7, #4]
     884:	685b      	ldr	r3, [r3, #4]
     886:	4313      	orrs	r3, r2
     888:	60fb      	str	r3, [r7, #12]
	gendiv = ((tbl->div<<USE_GCLKDIV_SHIFT)|tbl->id);
     88a:	687b      	ldr	r3, [r7, #4]
     88c:	891b      	ldrh	r3, [r3, #8]
     88e:	021b      	lsls	r3, r3, #8
     890:	687a      	ldr	r2, [r7, #4]
     892:	7812      	ldrb	r2, [r2, #0]
     894:	4313      	orrs	r3, r2
     896:	60bb      	str	r3, [r7, #8]


	while (system_gclk_is_syncing()) {
     898:	46c0      	nop			; (mov r8, r8)
     89a:	4b0b      	ldr	r3, [pc, #44]	; (8c8 <GClkGenInit+0x64>)
     89c:	4798      	blx	r3
     89e:	1e03      	subs	r3, r0, #0
     8a0:	d1fb      	bne.n	89a <GClkGenInit+0x36>
		/* Wait for synchronization */
	};

	system_interrupt_enter_critical_section();
     8a2:	4b0a      	ldr	r3, [pc, #40]	; (8cc <GClkGenInit+0x68>)
     8a4:	4798      	blx	r3

	GCLK->GENDIV.reg = gendiv;
     8a6:	4b0a      	ldr	r3, [pc, #40]	; (8d0 <GClkGenInit+0x6c>)
     8a8:	68ba      	ldr	r2, [r7, #8]
     8aa:	609a      	str	r2, [r3, #8]

	while (system_gclk_is_syncing()) {
     8ac:	46c0      	nop			; (mov r8, r8)
     8ae:	4b06      	ldr	r3, [pc, #24]	; (8c8 <GClkGenInit+0x64>)
     8b0:	4798      	blx	r3
     8b2:	1e03      	subs	r3, r0, #0
     8b4:	d1fb      	bne.n	8ae <GClkGenInit+0x4a>
		/* Wait for synchronization */
	};
	GCLK->GENCTRL.reg = genctrl;
     8b6:	4b06      	ldr	r3, [pc, #24]	; (8d0 <GClkGenInit+0x6c>)
     8b8:	68fa      	ldr	r2, [r7, #12]
     8ba:	605a      	str	r2, [r3, #4]

	system_interrupt_leave_critical_section();
     8bc:	4b05      	ldr	r3, [pc, #20]	; (8d4 <GClkGenInit+0x70>)
     8be:	4798      	blx	r3
}
     8c0:	46c0      	nop			; (mov r8, r8)
     8c2:	46bd      	mov	sp, r7
     8c4:	b004      	add	sp, #16
     8c6:	bd80      	pop	{r7, pc}
     8c8:	00000845 	.word	0x00000845
     8cc:	0000081d 	.word	0x0000081d
     8d0:	40000c00 	.word	0x40000c00
     8d4:	00000831 	.word	0x00000831

000008d8 <ModuleClkInit>:
}MduleClock;
*/


void ModuleClkInit( MduleClock *tbl )
{
     8d8:	b580      	push	{r7, lr}
     8da:	b084      	sub	sp, #16
     8dc:	af00      	add	r7, sp, #0
     8de:	6078      	str	r0, [r7, #4]
	unsigned short clkctrl=0;
     8e0:	230e      	movs	r3, #14
     8e2:	18fb      	adds	r3, r7, r3
     8e4:	2200      	movs	r2, #0
     8e6:	801a      	strh	r2, [r3, #0]

	clkctrl = ((tbl->src<<USE_GCLKGEN_SHIFT) | tbl->id) | tbl->flag;
     8e8:	687b      	ldr	r3, [r7, #4]
     8ea:	785b      	ldrb	r3, [r3, #1]
     8ec:	021b      	lsls	r3, r3, #8
     8ee:	b21a      	sxth	r2, r3
     8f0:	687b      	ldr	r3, [r7, #4]
     8f2:	781b      	ldrb	r3, [r3, #0]
     8f4:	b21b      	sxth	r3, r3
     8f6:	4313      	orrs	r3, r2
     8f8:	b21a      	sxth	r2, r3
     8fa:	687b      	ldr	r3, [r7, #4]
     8fc:	885b      	ldrh	r3, [r3, #2]
     8fe:	b21b      	sxth	r3, r3
     900:	4313      	orrs	r3, r2
     902:	b21a      	sxth	r2, r3
     904:	230e      	movs	r3, #14
     906:	18fb      	adds	r3, r7, r3
     908:	801a      	strh	r2, [r3, #0]

	system_interrupt_enter_critical_section();
     90a:	4b06      	ldr	r3, [pc, #24]	; (924 <ModuleClkInit+0x4c>)
     90c:	4798      	blx	r3

	GCLK->CLKCTRL.reg = clkctrl;
     90e:	4a06      	ldr	r2, [pc, #24]	; (928 <ModuleClkInit+0x50>)
     910:	230e      	movs	r3, #14
     912:	18fb      	adds	r3, r7, r3
     914:	881b      	ldrh	r3, [r3, #0]
     916:	8053      	strh	r3, [r2, #2]

	system_interrupt_leave_critical_section();
     918:	4b04      	ldr	r3, [pc, #16]	; (92c <ModuleClkInit+0x54>)
     91a:	4798      	blx	r3
}
     91c:	46c0      	nop			; (mov r8, r8)
     91e:	46bd      	mov	sp, r7
     920:	b004      	add	sp, #16
     922:	bd80      	pop	{r7, pc}
     924:	0000081d 	.word	0x0000081d
     928:	40000c00 	.word	0x40000c00
     92c:	00000831 	.word	0x00000831

00000930 <UserClockInit>:




void UserClockInit(void)
{
     930:	b580      	push	{r7, lr}
     932:	b082      	sub	sp, #8
     934:	af00      	add	r7, sp, #0
	int i;
	for( i=0;i<9;i++ )
     936:	2300      	movs	r3, #0
     938:	607b      	str	r3, [r7, #4]
     93a:	e00c      	b.n	956 <UserClockInit+0x26>
	{
		GClkGenInit( &GclkCtrlTbl[i] );
     93c:	687a      	ldr	r2, [r7, #4]
     93e:	0013      	movs	r3, r2
     940:	005b      	lsls	r3, r3, #1
     942:	189b      	adds	r3, r3, r2
     944:	009b      	lsls	r3, r3, #2
     946:	4a0f      	ldr	r2, [pc, #60]	; (984 <UserClockInit+0x54>)
     948:	189b      	adds	r3, r3, r2
     94a:	0018      	movs	r0, r3
     94c:	4b0e      	ldr	r3, [pc, #56]	; (988 <UserClockInit+0x58>)
     94e:	4798      	blx	r3


void UserClockInit(void)
{
	int i;
	for( i=0;i<9;i++ )
     950:	687b      	ldr	r3, [r7, #4]
     952:	3301      	adds	r3, #1
     954:	607b      	str	r3, [r7, #4]
     956:	687b      	ldr	r3, [r7, #4]
     958:	2b08      	cmp	r3, #8
     95a:	ddef      	ble.n	93c <UserClockInit+0xc>
	{
		GClkGenInit( &GclkCtrlTbl[i] );
	}


	for( i=0;i<24;i++ )
     95c:	2300      	movs	r3, #0
     95e:	607b      	str	r3, [r7, #4]
     960:	e009      	b.n	976 <UserClockInit+0x46>
	{
		ModuleClkInit( &ModuleClkTbl[i] );
     962:	687b      	ldr	r3, [r7, #4]
     964:	009a      	lsls	r2, r3, #2
     966:	4b09      	ldr	r3, [pc, #36]	; (98c <UserClockInit+0x5c>)
     968:	18d3      	adds	r3, r2, r3
     96a:	0018      	movs	r0, r3
     96c:	4b08      	ldr	r3, [pc, #32]	; (990 <UserClockInit+0x60>)
     96e:	4798      	blx	r3
	{
		GClkGenInit( &GclkCtrlTbl[i] );
	}


	for( i=0;i<24;i++ )
     970:	687b      	ldr	r3, [r7, #4]
     972:	3301      	adds	r3, #1
     974:	607b      	str	r3, [r7, #4]
     976:	687b      	ldr	r3, [r7, #4]
     978:	2b17      	cmp	r3, #23
     97a:	ddf2      	ble.n	962 <UserClockInit+0x32>
	{
		ModuleClkInit( &ModuleClkTbl[i] );
	}
}
     97c:	46c0      	nop			; (mov r8, r8)
     97e:	46bd      	mov	sp, r7
     980:	b002      	add	sp, #8
     982:	bd80      	pop	{r7, pc}
     984:	20000000 	.word	0x20000000
     988:	00000865 	.word	0x00000865
     98c:	2000006c 	.word	0x2000006c
     990:	000008d9 	.word	0x000008d9

00000994 <GetPortOffset>:
#define PORTD             PORT->Group[3]



static PortGroup *GetPortOffset(GPIO port)
{
     994:	b580      	push	{r7, lr}
     996:	b084      	sub	sp, #16
     998:	af00      	add	r7, sp, #0
     99a:	0002      	movs	r2, r0
     99c:	1dfb      	adds	r3, r7, #7
     99e:	701a      	strb	r2, [r3, #0]
  PortGroup *ptr=NULL;
     9a0:	2300      	movs	r3, #0
     9a2:	60fb      	str	r3, [r7, #12]

  if( port & GPIO_BITIGNORE )
     9a4:	1dfb      	adds	r3, r7, #7
     9a6:	781b      	ldrb	r3, [r3, #0]
     9a8:	2220      	movs	r2, #32
     9aa:	4013      	ands	r3, r2
     9ac:	d001      	beq.n	9b2 <GetPortOffset+0x1e>
  {
    return NULL;
     9ae:	2300      	movs	r3, #0
     9b0:	e01b      	b.n	9ea <GetPortOffset+0x56>
  } 

  switch( port & GPIO_PORTMASK )
     9b2:	1dfb      	adds	r3, r7, #7
     9b4:	781b      	ldrb	r3, [r3, #0]
     9b6:	22c0      	movs	r2, #192	; 0xc0
     9b8:	4013      	ands	r3, r2
     9ba:	2b40      	cmp	r3, #64	; 0x40
     9bc:	d00b      	beq.n	9d6 <GetPortOffset+0x42>
     9be:	dc02      	bgt.n	9c6 <GetPortOffset+0x32>
     9c0:	2b00      	cmp	r3, #0
     9c2:	d005      	beq.n	9d0 <GetPortOffset+0x3c>
      break;
    case PORTD_GROUP://		0x80
      ptr = &PORTD;
      break;
    default:
      break;
     9c4:	e010      	b.n	9e8 <GetPortOffset+0x54>
  if( port & GPIO_BITIGNORE )
  {
    return NULL;
  } 

  switch( port & GPIO_PORTMASK )
     9c6:	2b60      	cmp	r3, #96	; 0x60
     9c8:	d008      	beq.n	9dc <GetPortOffset+0x48>
     9ca:	2b80      	cmp	r3, #128	; 0x80
     9cc:	d009      	beq.n	9e2 <GetPortOffset+0x4e>
      break;
    case PORTD_GROUP://		0x80
      ptr = &PORTD;
      break;
    default:
      break;
     9ce:	e00b      	b.n	9e8 <GetPortOffset+0x54>
  } 

  switch( port & GPIO_PORTMASK )
  {
    case PORTA_GROUP://		0x00
      ptr = &PORTA;
     9d0:	4b08      	ldr	r3, [pc, #32]	; (9f4 <GetPortOffset+0x60>)
     9d2:	60fb      	str	r3, [r7, #12]
      break;
     9d4:	e008      	b.n	9e8 <GetPortOffset+0x54>
    case PORTB_GROUP://		0x40
      ptr = &PORTB;
     9d6:	4b08      	ldr	r3, [pc, #32]	; (9f8 <GetPortOffset+0x64>)
     9d8:	60fb      	str	r3, [r7, #12]
      break;
     9da:	e005      	b.n	9e8 <GetPortOffset+0x54>
    case PORTC_GROUP://		0x60
      ptr = &PORTC;
     9dc:	4b07      	ldr	r3, [pc, #28]	; (9fc <GetPortOffset+0x68>)
     9de:	60fb      	str	r3, [r7, #12]
      break;
     9e0:	e002      	b.n	9e8 <GetPortOffset+0x54>
    case PORTD_GROUP://		0x80
      ptr = &PORTD;
     9e2:	4b07      	ldr	r3, [pc, #28]	; (a00 <GetPortOffset+0x6c>)
     9e4:	60fb      	str	r3, [r7, #12]
      break;
     9e6:	46c0      	nop			; (mov r8, r8)
    default:
      break;
  }
  return ptr;
     9e8:	68fb      	ldr	r3, [r7, #12]
}
     9ea:	0018      	movs	r0, r3
     9ec:	46bd      	mov	sp, r7
     9ee:	b004      	add	sp, #16
     9f0:	bd80      	pop	{r7, pc}
     9f2:	46c0      	nop			; (mov r8, r8)
     9f4:	41004400 	.word	0x41004400
     9f8:	41004480 	.word	0x41004480
     9fc:	41004500 	.word	0x41004500
     a00:	41004580 	.word	0x41004580

00000a04 <GpioPortInit>:


int GpioPortInit( GPIO_INIT_TABLE *tbl )
{
     a04:	b580      	push	{r7, lr}
     a06:	b086      	sub	sp, #24
     a08:	af00      	add	r7, sp, #0
     a0a:	6078      	str	r0, [r7, #4]
	unsigned long value = 0;
     a0c:	2300      	movs	r3, #0
     a0e:	617b      	str	r3, [r7, #20]

	unsigned short low = 0;
     a10:	2312      	movs	r3, #18
     a12:	18fb      	adds	r3, r7, r3
     a14:	2200      	movs	r2, #0
     a16:	801a      	strh	r2, [r3, #0]
	unsigned short hi = 0;
     a18:	2310      	movs	r3, #16
     a1a:	18fb      	adds	r3, r7, r3
     a1c:	2200      	movs	r2, #0
     a1e:	801a      	strh	r2, [r3, #0]
  
//	gpio bit position [15..0]
//	port->WRCONFIG.bit.PINMASK = (0x00000001<<(tbl->port & 0x0F));
//	port->WRCONFIG.bit.HWSEL = ((tbl->port & 0x10)==0?0:1);

  if( tbl == NULL )return -1;
     a20:	687b      	ldr	r3, [r7, #4]
     a22:	2b00      	cmp	r3, #0
     a24:	d102      	bne.n	a2c <GpioPortInit+0x28>
     a26:	2301      	movs	r3, #1
     a28:	425b      	negs	r3, r3
     a2a:	e07c      	b.n	b26 <GpioPortInit+0x122>

  ptr = GetPortOffset( tbl->port );
     a2c:	687b      	ldr	r3, [r7, #4]
     a2e:	781b      	ldrb	r3, [r3, #0]
     a30:	0018      	movs	r0, r3
     a32:	4b3f      	ldr	r3, [pc, #252]	; (b30 <GpioPortInit+0x12c>)
     a34:	4798      	blx	r3
     a36:	0003      	movs	r3, r0
     a38:	60fb      	str	r3, [r7, #12]
  if( ptr == NULL )return -1;
     a3a:	68fb      	ldr	r3, [r7, #12]
     a3c:	2b00      	cmp	r3, #0
     a3e:	d102      	bne.n	a46 <GpioPortInit+0x42>
     a40:	2301      	movs	r3, #1
     a42:	425b      	negs	r3, r3
     a44:	e06f      	b.n	b26 <GpioPortInit+0x122>



	value = (0x00000001<<(tbl->port & GPIO_BITMASK));
     a46:	687b      	ldr	r3, [r7, #4]
     a48:	781b      	ldrb	r3, [r3, #0]
     a4a:	001a      	movs	r2, r3
     a4c:	231f      	movs	r3, #31
     a4e:	4013      	ands	r3, r2
     a50:	2201      	movs	r2, #1
     a52:	409a      	lsls	r2, r3
     a54:	0013      	movs	r3, r2
     a56:	617b      	str	r3, [r7, #20]
	low = (value & 0x0000FFFF);
     a58:	2312      	movs	r3, #18
     a5a:	18fb      	adds	r3, r7, r3
     a5c:	697a      	ldr	r2, [r7, #20]
     a5e:	801a      	strh	r2, [r3, #0]
	hi = ((value & 0xFFFF0000)>>16);
     a60:	697b      	ldr	r3, [r7, #20]
     a62:	0c1a      	lsrs	r2, r3, #16
     a64:	2310      	movs	r3, #16
     a66:	18fb      	adds	r3, r7, r3
     a68:	801a      	strh	r2, [r3, #0]
	value = 0;
     a6a:	2300      	movs	r3, #0
     a6c:	617b      	str	r3, [r7, #20]
	//gpio bit position bit * 32 + pos
//	value |= ((tbl->port & 0x10)==0?0x00000000:WRCONFIG_HWSEL);



	if( tbl->mode == USE_GPIO_FUNC )
     a6e:	687b      	ldr	r3, [r7, #4]
     a70:	785b      	ldrb	r3, [r3, #1]
     a72:	2b01      	cmp	r3, #1
     a74:	d108      	bne.n	a88 <GpioPortInit+0x84>
	{
//		use function
//		port->WRCONFIG.bit.PMUXEN = tbl->func;
//		port->WRCONFIG.bit.PMUXEN = 1;
//		port->WRCONFIG.bit.WRPMUX = 1;
		value |= (((unsigned long)(tbl->func))<<24) | WRCONFIG_PMUXEN | WRCONFIG_WRPMUX | WRCONFIG_WRPINCFG;
     a76:	687b      	ldr	r3, [r7, #4]
     a78:	78db      	ldrb	r3, [r3, #3]
     a7a:	061a      	lsls	r2, r3, #24
     a7c:	697b      	ldr	r3, [r7, #20]
     a7e:	4313      	orrs	r3, r2
     a80:	4a2c      	ldr	r2, [pc, #176]	; (b34 <GpioPortInit+0x130>)
     a82:	4313      	orrs	r3, r2
     a84:	617b      	str	r3, [r7, #20]
     a86:	e023      	b.n	ad0 <GpioPortInit+0xcc>
//		port->WRCONFIG.bit.INEN = ((tbl->config & 0x40)==0 ? 0:1) 
//		port->WRCONFIG.bit.PULLEN = ((tbl->config & 0x20)==0 ? 0:1) 
//		port->WRCONFIG.bit.DRIVE = ((tbl->config & 0x10)==0 ? 0:1) 
//		port->WRCONFIG.bit.WRPINCFG = 1;

		value |= ((tbl->config & USE_GPIO_INPUT)==0 ? 0x00000000:WRCONFIG_INEN) 
     a88:	687b      	ldr	r3, [r7, #4]
     a8a:	789b      	ldrb	r3, [r3, #2]
     a8c:	001a      	movs	r2, r3
     a8e:	2340      	movs	r3, #64	; 0x40
     a90:	4013      	ands	r3, r2
     a92:	d101      	bne.n	a98 <GpioPortInit+0x94>
     a94:	2200      	movs	r2, #0
     a96:	e001      	b.n	a9c <GpioPortInit+0x98>
     a98:	2380      	movs	r3, #128	; 0x80
     a9a:	029a      	lsls	r2, r3, #10
				| ((tbl->config & USE_GPIO_FORCE_PULL)==0 ? 0x00000000:WRCONFIG_PULLEN)
     a9c:	687b      	ldr	r3, [r7, #4]
     a9e:	789b      	ldrb	r3, [r3, #2]
     aa0:	0019      	movs	r1, r3
     aa2:	2320      	movs	r3, #32
     aa4:	400b      	ands	r3, r1
     aa6:	d101      	bne.n	aac <GpioPortInit+0xa8>
     aa8:	2300      	movs	r3, #0
     aaa:	e001      	b.n	ab0 <GpioPortInit+0xac>
     aac:	2380      	movs	r3, #128	; 0x80
     aae:	02db      	lsls	r3, r3, #11
     ab0:	431a      	orrs	r2, r3
				| ((tbl->config & USE_GPIO_DRIVE_STRONG)==0 ? 0x00000000:WRCONFIG_DRVSTR); 
     ab2:	687b      	ldr	r3, [r7, #4]
     ab4:	789b      	ldrb	r3, [r3, #2]
     ab6:	0019      	movs	r1, r3
     ab8:	2310      	movs	r3, #16
     aba:	400b      	ands	r3, r1
     abc:	d101      	bne.n	ac2 <GpioPortInit+0xbe>
     abe:	2300      	movs	r3, #0
     ac0:	e001      	b.n	ac6 <GpioPortInit+0xc2>
     ac2:	2380      	movs	r3, #128	; 0x80
     ac4:	03db      	lsls	r3, r3, #15
     ac6:	4313      	orrs	r3, r2
//		port->WRCONFIG.bit.INEN = ((tbl->config & 0x40)==0 ? 0:1) 
//		port->WRCONFIG.bit.PULLEN = ((tbl->config & 0x20)==0 ? 0:1) 
//		port->WRCONFIG.bit.DRIVE = ((tbl->config & 0x10)==0 ? 0:1) 
//		port->WRCONFIG.bit.WRPINCFG = 1;

		value |= ((tbl->config & USE_GPIO_INPUT)==0 ? 0x00000000:WRCONFIG_INEN) 
     ac8:	001a      	movs	r2, r3
     aca:	697b      	ldr	r3, [r7, #20]
     acc:	4313      	orrs	r3, r2
     ace:	617b      	str	r3, [r7, #20]
				| ((tbl->config & USE_GPIO_FORCE_PULL)==0 ? 0x00000000:WRCONFIG_PULLEN)
				| ((tbl->config & USE_GPIO_DRIVE_STRONG)==0 ? 0x00000000:WRCONFIG_DRVSTR); 
	}

	ptr->DIR.reg |= ( ((tbl->config & 0x80)==0?0x00000000:0x00000001) << (tbl->port & GPIO_BITMASK) );
     ad0:	68fb      	ldr	r3, [r7, #12]
     ad2:	681b      	ldr	r3, [r3, #0]
     ad4:	687a      	ldr	r2, [r7, #4]
     ad6:	7892      	ldrb	r2, [r2, #2]
     ad8:	b252      	sxtb	r2, r2
     ada:	b2d2      	uxtb	r2, r2
     adc:	09d2      	lsrs	r2, r2, #7
     ade:	b2d2      	uxtb	r2, r2
     ae0:	0011      	movs	r1, r2
     ae2:	687a      	ldr	r2, [r7, #4]
     ae4:	7812      	ldrb	r2, [r2, #0]
     ae6:	0010      	movs	r0, r2
     ae8:	221f      	movs	r2, #31
     aea:	4002      	ands	r2, r0
     aec:	4091      	lsls	r1, r2
     aee:	000a      	movs	r2, r1
     af0:	431a      	orrs	r2, r3
     af2:	68fb      	ldr	r3, [r7, #12]
     af4:	601a      	str	r2, [r3, #0]

//	port->WRCONFIG.reg = value;



	value |= low ;
     af6:	2312      	movs	r3, #18
     af8:	18fb      	adds	r3, r7, r3
     afa:	881b      	ldrh	r3, [r3, #0]
     afc:	697a      	ldr	r2, [r7, #20]
     afe:	4313      	orrs	r3, r2
     b00:	617b      	str	r3, [r7, #20]
	ptr->WRCONFIG.reg = (value | low);
     b02:	2312      	movs	r3, #18
     b04:	18fb      	adds	r3, r7, r3
     b06:	881a      	ldrh	r2, [r3, #0]
     b08:	697b      	ldr	r3, [r7, #20]
     b0a:	431a      	orrs	r2, r3
     b0c:	68fb      	ldr	r3, [r7, #12]
     b0e:	629a      	str	r2, [r3, #40]	; 0x28

	ptr->WRCONFIG.reg = (value | hi | WRCONFIG_HWSEL);
     b10:	2310      	movs	r3, #16
     b12:	18fb      	adds	r3, r7, r3
     b14:	881a      	ldrh	r2, [r3, #0]
     b16:	697b      	ldr	r3, [r7, #20]
     b18:	4313      	orrs	r3, r2
     b1a:	2280      	movs	r2, #128	; 0x80
     b1c:	0612      	lsls	r2, r2, #24
     b1e:	431a      	orrs	r2, r3
     b20:	68fb      	ldr	r3, [r7, #12]
     b22:	629a      	str	r2, [r3, #40]	; 0x28


  return 0;
     b24:	2300      	movs	r3, #0
}
     b26:	0018      	movs	r0, r3
     b28:	46bd      	mov	sp, r7
     b2a:	b006      	add	sp, #24
     b2c:	bd80      	pop	{r7, pc}
     b2e:	46c0      	nop			; (mov r8, r8)
     b30:	00000995 	.word	0x00000995
     b34:	50010000 	.word	0x50010000

00000b38 <GpioBitOut>:




int GpioBitOut( GPIO port,unsigned char bit )
{
     b38:	b580      	push	{r7, lr}
     b3a:	b084      	sub	sp, #16
     b3c:	af00      	add	r7, sp, #0
     b3e:	0002      	movs	r2, r0
     b40:	1dfb      	adds	r3, r7, #7
     b42:	701a      	strb	r2, [r3, #0]
     b44:	1dbb      	adds	r3, r7, #6
     b46:	1c0a      	adds	r2, r1, #0
     b48:	701a      	strb	r2, [r3, #0]
	PortGroup *ptr;
  unsigned long value;

	ptr = GetPortOffset( port );
     b4a:	1dfb      	adds	r3, r7, #7
     b4c:	781b      	ldrb	r3, [r3, #0]
     b4e:	0018      	movs	r0, r3
     b50:	4b10      	ldr	r3, [pc, #64]	; (b94 <GpioBitOut+0x5c>)
     b52:	4798      	blx	r3
     b54:	0003      	movs	r3, r0
     b56:	60fb      	str	r3, [r7, #12]
	if( ptr == NULL )return -1;
     b58:	68fb      	ldr	r3, [r7, #12]
     b5a:	2b00      	cmp	r3, #0
     b5c:	d102      	bne.n	b64 <GpioBitOut+0x2c>
     b5e:	2301      	movs	r3, #1
     b60:	425b      	negs	r3, r3
     b62:	e013      	b.n	b8c <GpioBitOut+0x54>

  value = ((bit & 0x01) == 0 ? 0x00000000 : 0x00000001);
     b64:	1dbb      	adds	r3, r7, #6
     b66:	781b      	ldrb	r3, [r3, #0]
     b68:	2201      	movs	r2, #1
     b6a:	4013      	ands	r3, r2
     b6c:	1e5a      	subs	r2, r3, #1
     b6e:	4193      	sbcs	r3, r2
     b70:	b2db      	uxtb	r3, r3
     b72:	60bb      	str	r3, [r7, #8]
  value = ( value << (port & GPIO_BITMASK) );
     b74:	1dfb      	adds	r3, r7, #7
     b76:	781b      	ldrb	r3, [r3, #0]
     b78:	221f      	movs	r2, #31
     b7a:	4013      	ands	r3, r2
     b7c:	68ba      	ldr	r2, [r7, #8]
     b7e:	409a      	lsls	r2, r3
     b80:	0013      	movs	r3, r2
     b82:	60bb      	str	r3, [r7, #8]

	ptr->OUT.bit.OUT = value;
     b84:	68fb      	ldr	r3, [r7, #12]
     b86:	68ba      	ldr	r2, [r7, #8]
     b88:	611a      	str	r2, [r3, #16]
  return 0;
     b8a:	2300      	movs	r3, #0
}
     b8c:	0018      	movs	r0, r3
     b8e:	46bd      	mov	sp, r7
     b90:	b004      	add	sp, #16
     b92:	bd80      	pop	{r7, pc}
     b94:	00000995 	.word	0x00000995

00000b98 <SercomSPI_Enable>:




bool SercomSPI_Enable( Sercom *sercom )
{
     b98:	b580      	push	{r7, lr}
     b9a:	b082      	sub	sp, #8
     b9c:	af00      	add	r7, sp, #0
     b9e:	6078      	str	r0, [r7, #4]
	sercom->SPI.CTRLA.reg |= SPI_CTRLA_ENABLE;
     ba0:	687b      	ldr	r3, [r7, #4]
     ba2:	681b      	ldr	r3, [r3, #0]
     ba4:	2202      	movs	r2, #2
     ba6:	431a      	orrs	r2, r3
     ba8:	687b      	ldr	r3, [r7, #4]
     baa:	601a      	str	r2, [r3, #0]
	return true;
     bac:	2301      	movs	r3, #1
}
     bae:	0018      	movs	r0, r3
     bb0:	46bd      	mov	sp, r7
     bb2:	b002      	add	sp, #8
     bb4:	bd80      	pop	{r7, pc}
     bb6:	46c0      	nop			; (mov r8, r8)

00000bb8 <SercomSPI_Init>:
	return true;
}


bool SercomSPI_Init( Sercom *sercom, unsigned long ctrl_a, unsigned long ctrl_b, unsigned char baud )
{
     bb8:	b580      	push	{r7, lr}
     bba:	b084      	sub	sp, #16
     bbc:	af00      	add	r7, sp, #0
     bbe:	60f8      	str	r0, [r7, #12]
     bc0:	60b9      	str	r1, [r7, #8]
     bc2:	607a      	str	r2, [r7, #4]
     bc4:	001a      	movs	r2, r3
     bc6:	1cfb      	adds	r3, r7, #3
     bc8:	701a      	strb	r2, [r3, #0]
//	sercom->SPI.CTRLA.reg = (sercom->SPI.CTRLA.reg & (~SPI_CTRLA_ENABLE));
	sercom->SPI.CTRLA.reg = (SPI_CTRLA_MODE00|SPI_CTRLA_PINMODE00|SPI_CTRLA_MSB_FIRST|SPI_CTRLA_FORM_SPI|SPI_CTRLA_MASTER);
     bca:	68fb      	ldr	r3, [r7, #12]
     bcc:	4a07      	ldr	r2, [pc, #28]	; (bec <SercomSPI_Init+0x34>)
     bce:	601a      	str	r2, [r3, #0]
	sercom->SPI.CTRLB.reg = (SPI_CTRLB_CHSIZE8BIT|SPI_CTRLB_RXEN);
     bd0:	68fb      	ldr	r3, [r7, #12]
     bd2:	2280      	movs	r2, #128	; 0x80
     bd4:	0292      	lsls	r2, r2, #10
     bd6:	605a      	str	r2, [r3, #4]
	sercom->SPI.BAUD.reg = baud;
     bd8:	68fb      	ldr	r3, [r7, #12]
     bda:	1cfa      	adds	r2, r7, #3
     bdc:	7812      	ldrb	r2, [r2, #0]
     bde:	731a      	strb	r2, [r3, #12]
	return true;
     be0:	2301      	movs	r3, #1
}
     be2:	0018      	movs	r0, r3
     be4:	46bd      	mov	sp, r7
     be6:	b004      	add	sp, #16
     be8:	bd80      	pop	{r7, pc}
     bea:	46c0      	nop			; (mov r8, r8)
     bec:	0030000c 	.word	0x0030000c

00000bf0 <SercomSPI_WriteComplete>:


bool inline SercomSPI_WriteComplete( Sercom *sercom )
{
     bf0:	b580      	push	{r7, lr}
     bf2:	b082      	sub	sp, #8
     bf4:	af00      	add	r7, sp, #0
     bf6:	6078      	str	r0, [r7, #4]
	return (sercom->SPI.INTFLAG.reg & SPI_INTFLAG_TXC);
     bf8:	687b      	ldr	r3, [r7, #4]
     bfa:	7e1b      	ldrb	r3, [r3, #24]
     bfc:	b2db      	uxtb	r3, r3
     bfe:	001a      	movs	r2, r3
     c00:	2302      	movs	r3, #2
     c02:	4013      	ands	r3, r2
     c04:	1e5a      	subs	r2, r3, #1
     c06:	4193      	sbcs	r3, r2
     c08:	b2db      	uxtb	r3, r3
}
     c0a:	0018      	movs	r0, r3
     c0c:	46bd      	mov	sp, r7
     c0e:	b002      	add	sp, #8
     c10:	bd80      	pop	{r7, pc}
     c12:	46c0      	nop			; (mov r8, r8)

00000c14 <SercomSPI_TransByte>:
}


//bool SercomSPI_TransByte( Sercom *sercom, unsigned short tx_data, unsigned short *rx_data )
unsigned char SercomSPI_TransByte( Sercom *sercom, unsigned short tx_data )
{
     c14:	b580      	push	{r7, lr}
     c16:	b084      	sub	sp, #16
     c18:	af00      	add	r7, sp, #0
     c1a:	6078      	str	r0, [r7, #4]
     c1c:	000a      	movs	r2, r1
     c1e:	1cbb      	adds	r3, r7, #2
     c20:	801a      	strh	r2, [r3, #0]
	unsigned char rx;
	//while( !SercomSPI_UnitReady(sercom) )
	{
	};

	sercom->SPI.DATA.reg = (tx_data & SPI_DATA_MASK);
     c22:	1cbb      	adds	r3, r7, #2
     c24:	881b      	ldrh	r3, [r3, #0]
     c26:	05db      	lsls	r3, r3, #23
     c28:	0dda      	lsrs	r2, r3, #23
     c2a:	687b      	ldr	r3, [r7, #4]
     c2c:	629a      	str	r2, [r3, #40]	; 0x28


	while( !SercomSPI_WriteComplete( sercom ) )
     c2e:	46c0      	nop			; (mov r8, r8)
     c30:	687b      	ldr	r3, [r7, #4]
     c32:	0018      	movs	r0, r3
     c34:	4b0a      	ldr	r3, [pc, #40]	; (c60 <SercomSPI_TransByte+0x4c>)
     c36:	4798      	blx	r3
     c38:	0003      	movs	r3, r0
     c3a:	001a      	movs	r2, r3
     c3c:	2301      	movs	r3, #1
     c3e:	4053      	eors	r3, r2
     c40:	b2db      	uxtb	r3, r3
     c42:	2b00      	cmp	r3, #0
     c44:	d1f4      	bne.n	c30 <SercomSPI_TransByte+0x1c>
	{
	};

	rx = (sercom->SPI.DATA.reg & 0xFF);//SPI_DATA_MASK;
     c46:	687b      	ldr	r3, [r7, #4]
     c48:	6a9a      	ldr	r2, [r3, #40]	; 0x28
     c4a:	230f      	movs	r3, #15
     c4c:	18fb      	adds	r3, r7, r3
     c4e:	701a      	strb	r2, [r3, #0]

	return rx;
     c50:	230f      	movs	r3, #15
     c52:	18fb      	adds	r3, r7, r3
     c54:	781b      	ldrb	r3, [r3, #0]
}
     c56:	0018      	movs	r0, r3
     c58:	46bd      	mov	sp, r7
     c5a:	b004      	add	sp, #16
     c5c:	bd80      	pop	{r7, pc}
     c5e:	46c0      	nop			; (mov r8, r8)
     c60:	00000bf1 	.word	0x00000bf1

00000c64 <cpu_irq_enter_critical>:
 */
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
     c64:	b580      	push	{r7, lr}
     c66:	b082      	sub	sp, #8
     c68:	af00      	add	r7, sp, #0
	if (cpu_irq_critical_section_counter == 0) {
     c6a:	4b10      	ldr	r3, [pc, #64]	; (cac <cpu_irq_enter_critical+0x48>)
     c6c:	681b      	ldr	r3, [r3, #0]
     c6e:	2b00      	cmp	r3, #0
     c70:	d112      	bne.n	c98 <cpu_irq_enter_critical+0x34>
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     c72:	f3ef 8310 	mrs	r3, PRIMASK
     c76:	607b      	str	r3, [r7, #4]
  return(result);
     c78:	687b      	ldr	r3, [r7, #4]
		if (cpu_irq_is_enabled()) {
     c7a:	2b00      	cmp	r3, #0
     c7c:	d109      	bne.n	c92 <cpu_irq_enter_critical+0x2e>
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
     c7e:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
     c80:	f3bf 8f5f 	dmb	sy
			cpu_irq_disable();
     c84:	4b0a      	ldr	r3, [pc, #40]	; (cb0 <cpu_irq_enter_critical+0x4c>)
     c86:	2200      	movs	r2, #0
     c88:	701a      	strb	r2, [r3, #0]
			cpu_irq_prev_interrupt_state = true;
     c8a:	4b0a      	ldr	r3, [pc, #40]	; (cb4 <cpu_irq_enter_critical+0x50>)
     c8c:	2201      	movs	r2, #1
     c8e:	701a      	strb	r2, [r3, #0]
     c90:	e002      	b.n	c98 <cpu_irq_enter_critical+0x34>
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
     c92:	4b08      	ldr	r3, [pc, #32]	; (cb4 <cpu_irq_enter_critical+0x50>)
     c94:	2200      	movs	r2, #0
     c96:	701a      	strb	r2, [r3, #0]
		}

	}

	cpu_irq_critical_section_counter++;
     c98:	4b04      	ldr	r3, [pc, #16]	; (cac <cpu_irq_enter_critical+0x48>)
     c9a:	681b      	ldr	r3, [r3, #0]
     c9c:	1c5a      	adds	r2, r3, #1
     c9e:	4b03      	ldr	r3, [pc, #12]	; (cac <cpu_irq_enter_critical+0x48>)
     ca0:	601a      	str	r2, [r3, #0]
}
     ca2:	46c0      	nop			; (mov r8, r8)
     ca4:	46bd      	mov	sp, r7
     ca6:	b002      	add	sp, #8
     ca8:	bd80      	pop	{r7, pc}
     caa:	46c0      	nop			; (mov r8, r8)
     cac:	20000464 	.word	0x20000464
     cb0:	200000cc 	.word	0x200000cc
     cb4:	20000468 	.word	0x20000468

00000cb8 <cpu_irq_leave_critical>:

void cpu_irq_leave_critical(void)
{
     cb8:	b580      	push	{r7, lr}
     cba:	af00      	add	r7, sp, #0
	/* Check if the user is trying to leave a critical section when not in a critical section */
	Assert(cpu_irq_critical_section_counter > 0);

	cpu_irq_critical_section_counter--;
     cbc:	4b0b      	ldr	r3, [pc, #44]	; (cec <cpu_irq_leave_critical+0x34>)
     cbe:	681b      	ldr	r3, [r3, #0]
     cc0:	1e5a      	subs	r2, r3, #1
     cc2:	4b0a      	ldr	r3, [pc, #40]	; (cec <cpu_irq_leave_critical+0x34>)
     cc4:	601a      	str	r2, [r3, #0]

	/* Only enable global interrupts when the counter reaches 0 and the state of the global interrupt flag
	   was enabled when entering critical state */
	if ((cpu_irq_critical_section_counter == 0) && (cpu_irq_prev_interrupt_state)) {
     cc6:	4b09      	ldr	r3, [pc, #36]	; (cec <cpu_irq_leave_critical+0x34>)
     cc8:	681b      	ldr	r3, [r3, #0]
     cca:	2b00      	cmp	r3, #0
     ccc:	d10a      	bne.n	ce4 <cpu_irq_leave_critical+0x2c>
     cce:	4b08      	ldr	r3, [pc, #32]	; (cf0 <cpu_irq_leave_critical+0x38>)
     cd0:	781b      	ldrb	r3, [r3, #0]
     cd2:	b2db      	uxtb	r3, r3
     cd4:	2b00      	cmp	r3, #0
     cd6:	d005      	beq.n	ce4 <cpu_irq_leave_critical+0x2c>
		cpu_irq_enable();
     cd8:	4b06      	ldr	r3, [pc, #24]	; (cf4 <cpu_irq_leave_critical+0x3c>)
     cda:	2201      	movs	r2, #1
     cdc:	701a      	strb	r2, [r3, #0]
     cde:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
     ce2:	b662      	cpsie	i
	}
}
     ce4:	46c0      	nop			; (mov r8, r8)
     ce6:	46bd      	mov	sp, r7
     ce8:	bd80      	pop	{r7, pc}
     cea:	46c0      	nop			; (mov r8, r8)
     cec:	20000464 	.word	0x20000464
     cf0:	20000468 	.word	0x20000468
     cf4:	200000cc 	.word	0x200000cc

00000cf8 <system_gclk_gen_get_config_defaults>:
 *
 * \param[out] config  Configuration structure to initialize to default values
 */
static inline void system_gclk_gen_get_config_defaults(
		struct system_gclk_gen_config *const config)
{
     cf8:	b580      	push	{r7, lr}
     cfa:	b082      	sub	sp, #8
     cfc:	af00      	add	r7, sp, #0
     cfe:	6078      	str	r0, [r7, #4]
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->division_factor    = 1;
     d00:	687b      	ldr	r3, [r7, #4]
     d02:	2201      	movs	r2, #1
     d04:	605a      	str	r2, [r3, #4]
	config->high_when_disabled = false;
     d06:	687b      	ldr	r3, [r7, #4]
     d08:	2200      	movs	r2, #0
     d0a:	705a      	strb	r2, [r3, #1]
#if SAML21 || SAML22  || SAMR30
	config->source_clock       = GCLK_SOURCE_OSC16M;
#elif (SAMC20) || (SAMC21)
	config->source_clock       = GCLK_SOURCE_OSC48M;
#else
	config->source_clock       = GCLK_SOURCE_OSC8M;
     d0c:	687b      	ldr	r3, [r7, #4]
     d0e:	2206      	movs	r2, #6
     d10:	701a      	strb	r2, [r3, #0]
#endif
	config->run_in_standby     = false;
     d12:	687b      	ldr	r3, [r7, #4]
     d14:	2200      	movs	r2, #0
     d16:	721a      	strb	r2, [r3, #8]
	config->output_enable      = false;
     d18:	687b      	ldr	r3, [r7, #4]
     d1a:	2200      	movs	r2, #0
     d1c:	725a      	strb	r2, [r3, #9]
}
     d1e:	46c0      	nop			; (mov r8, r8)
     d20:	46bd      	mov	sp, r7
     d22:	b002      	add	sp, #8
     d24:	bd80      	pop	{r7, pc}
     d26:	46c0      	nop			; (mov r8, r8)

00000d28 <system_clock_source_osc8m_get_config_defaults>:
 *
 * \param[out] config  Configuration structure to fill with default values
 */
static inline void system_clock_source_osc8m_get_config_defaults(
		struct system_clock_source_osc8m_config *const config)
{
     d28:	b580      	push	{r7, lr}
     d2a:	b082      	sub	sp, #8
     d2c:	af00      	add	r7, sp, #0
     d2e:	6078      	str	r0, [r7, #4]
	Assert(config);

	config->prescaler       = SYSTEM_OSC8M_DIV_8;
     d30:	687b      	ldr	r3, [r7, #4]
     d32:	2203      	movs	r2, #3
     d34:	701a      	strb	r2, [r3, #0]
	config->run_in_standby  = false;
     d36:	687b      	ldr	r3, [r7, #4]
     d38:	2200      	movs	r2, #0
     d3a:	705a      	strb	r2, [r3, #1]
	config->on_demand       = true;
     d3c:	687b      	ldr	r3, [r7, #4]
     d3e:	2201      	movs	r2, #1
     d40:	709a      	strb	r2, [r3, #2]
}
     d42:	46c0      	nop			; (mov r8, r8)
     d44:	46bd      	mov	sp, r7
     d46:	b002      	add	sp, #8
     d48:	bd80      	pop	{r7, pc}
     d4a:	46c0      	nop			; (mov r8, r8)

00000d4c <system_cpu_clock_set_divider>:
 *
 * \param[in] divider  CPU clock divider to set
 */
static inline void system_cpu_clock_set_divider(
		const enum system_main_clock_div divider)
{
     d4c:	b580      	push	{r7, lr}
     d4e:	b082      	sub	sp, #8
     d50:	af00      	add	r7, sp, #0
     d52:	0002      	movs	r2, r0
     d54:	1dfb      	adds	r3, r7, #7
     d56:	701a      	strb	r2, [r3, #0]
	Assert(((uint32_t)divider & PM_CPUSEL_CPUDIV_Msk) == divider);
	PM->CPUSEL.reg = (uint32_t)divider;
     d58:	4a03      	ldr	r2, [pc, #12]	; (d68 <system_cpu_clock_set_divider+0x1c>)
     d5a:	1dfb      	adds	r3, r7, #7
     d5c:	781b      	ldrb	r3, [r3, #0]
     d5e:	7213      	strb	r3, [r2, #8]
}
     d60:	46c0      	nop			; (mov r8, r8)
     d62:	46bd      	mov	sp, r7
     d64:	b002      	add	sp, #8
     d66:	bd80      	pop	{r7, pc}
     d68:	40000400 	.word	0x40000400

00000d6c <system_apb_clock_set_divider>:
 * \retval STATUS_OK               The APBx clock was set successfully
 */
static inline enum status_code system_apb_clock_set_divider(
		const enum system_clock_apb_bus bus,
		const enum system_main_clock_div divider)
{
     d6c:	b580      	push	{r7, lr}
     d6e:	b082      	sub	sp, #8
     d70:	af00      	add	r7, sp, #0
     d72:	0002      	movs	r2, r0
     d74:	1dfb      	adds	r3, r7, #7
     d76:	701a      	strb	r2, [r3, #0]
     d78:	1dbb      	adds	r3, r7, #6
     d7a:	1c0a      	adds	r2, r1, #0
     d7c:	701a      	strb	r2, [r3, #0]
	switch (bus) {
     d7e:	1dfb      	adds	r3, r7, #7
     d80:	781b      	ldrb	r3, [r3, #0]
     d82:	2b01      	cmp	r3, #1
     d84:	d008      	beq.n	d98 <system_apb_clock_set_divider+0x2c>
     d86:	2b02      	cmp	r3, #2
     d88:	d00b      	beq.n	da2 <system_apb_clock_set_divider+0x36>
     d8a:	2b00      	cmp	r3, #0
     d8c:	d10e      	bne.n	dac <system_apb_clock_set_divider+0x40>
		case SYSTEM_CLOCK_APB_APBA:
			PM->APBASEL.reg = (uint32_t)divider;
     d8e:	4a0b      	ldr	r2, [pc, #44]	; (dbc <system_apb_clock_set_divider+0x50>)
     d90:	1dbb      	adds	r3, r7, #6
     d92:	781b      	ldrb	r3, [r3, #0]
     d94:	7253      	strb	r3, [r2, #9]
			break;
     d96:	e00b      	b.n	db0 <system_apb_clock_set_divider+0x44>
		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBSEL.reg = (uint32_t)divider;
     d98:	4a08      	ldr	r2, [pc, #32]	; (dbc <system_apb_clock_set_divider+0x50>)
     d9a:	1dbb      	adds	r3, r7, #6
     d9c:	781b      	ldrb	r3, [r3, #0]
     d9e:	7293      	strb	r3, [r2, #10]
			break;
     da0:	e006      	b.n	db0 <system_apb_clock_set_divider+0x44>
		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCSEL.reg = (uint32_t)divider;
     da2:	4a06      	ldr	r2, [pc, #24]	; (dbc <system_apb_clock_set_divider+0x50>)
     da4:	1dbb      	adds	r3, r7, #6
     da6:	781b      	ldrb	r3, [r3, #0]
     da8:	72d3      	strb	r3, [r2, #11]
			break;
     daa:	e001      	b.n	db0 <system_apb_clock_set_divider+0x44>
		default:
			Assert(false);
			return STATUS_ERR_INVALID_ARG;
     dac:	2317      	movs	r3, #23
     dae:	e000      	b.n	db2 <system_apb_clock_set_divider+0x46>
	}

	return STATUS_OK;
     db0:	2300      	movs	r3, #0
}
     db2:	0018      	movs	r0, r3
     db4:	46bd      	mov	sp, r7
     db6:	b002      	add	sp, #8
     db8:	bd80      	pop	{r7, pc}
     dba:	46c0      	nop			; (mov r8, r8)
     dbc:	40000400 	.word	0x40000400

00000dc0 <system_flash_set_waitstates>:
 * can be found in the electrical characteristics of the device.
 *
 * \param[in] wait_states Number of wait states to use for internal flash
 */
static inline void system_flash_set_waitstates(uint8_t wait_states)
{
     dc0:	b580      	push	{r7, lr}
     dc2:	b082      	sub	sp, #8
     dc4:	af00      	add	r7, sp, #0
     dc6:	0002      	movs	r2, r0
     dc8:	1dfb      	adds	r3, r7, #7
     dca:	701a      	strb	r2, [r3, #0]
	Assert(NVMCTRL_CTRLB_RWS((uint32_t)wait_states) ==
			((uint32_t)wait_states << NVMCTRL_CTRLB_RWS_Pos));

	NVMCTRL->CTRLB.bit.RWS = wait_states;
     dcc:	4a08      	ldr	r2, [pc, #32]	; (df0 <system_flash_set_waitstates+0x30>)
     dce:	1dfb      	adds	r3, r7, #7
     dd0:	781b      	ldrb	r3, [r3, #0]
     dd2:	210f      	movs	r1, #15
     dd4:	400b      	ands	r3, r1
     dd6:	b2d9      	uxtb	r1, r3
     dd8:	6853      	ldr	r3, [r2, #4]
     dda:	200f      	movs	r0, #15
     ddc:	4001      	ands	r1, r0
     dde:	0049      	lsls	r1, r1, #1
     de0:	201e      	movs	r0, #30
     de2:	4383      	bics	r3, r0
     de4:	430b      	orrs	r3, r1
     de6:	6053      	str	r3, [r2, #4]
}
     de8:	46c0      	nop			; (mov r8, r8)
     dea:	46bd      	mov	sp, r7
     dec:	b002      	add	sp, #8
     dee:	bd80      	pop	{r7, pc}
     df0:	41004000 	.word	0x41004000

00000df4 <_system_dfll_wait_for_sync>:
/**
 * \internal
 * \brief Wait for sync to the DFLL control registers.
 */
static inline void _system_dfll_wait_for_sync(void)
{
     df4:	b580      	push	{r7, lr}
     df6:	af00      	add	r7, sp, #0
	while (!(SYSCTRL->PCLKSR.reg & SYSCTRL_PCLKSR_DFLLRDY)) {
     df8:	46c0      	nop			; (mov r8, r8)
     dfa:	4b04      	ldr	r3, [pc, #16]	; (e0c <_system_dfll_wait_for_sync+0x18>)
     dfc:	68db      	ldr	r3, [r3, #12]
     dfe:	2210      	movs	r2, #16
     e00:	4013      	ands	r3, r2
     e02:	d0fa      	beq.n	dfa <_system_dfll_wait_for_sync+0x6>
		/* Wait for DFLL sync */
	}
}
     e04:	46c0      	nop			; (mov r8, r8)
     e06:	46bd      	mov	sp, r7
     e08:	bd80      	pop	{r7, pc}
     e0a:	46c0      	nop			; (mov r8, r8)
     e0c:	40000800 	.word	0x40000800

00000e10 <_system_clock_source_dfll_set_config_errata_9905>:
		/* Wait for OSC32K sync */
	}
}

static inline void _system_clock_source_dfll_set_config_errata_9905(void)
{
     e10:	b580      	push	{r7, lr}
     e12:	af00      	add	r7, sp, #0

	/* Disable ONDEMAND mode while writing configurations */
	SYSCTRL->DFLLCTRL.reg = SYSCTRL_DFLLCTRL_ENABLE;
     e14:	4b0c      	ldr	r3, [pc, #48]	; (e48 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
     e16:	2202      	movs	r2, #2
     e18:	849a      	strh	r2, [r3, #36]	; 0x24
	_system_dfll_wait_for_sync();
     e1a:	4b0c      	ldr	r3, [pc, #48]	; (e4c <_system_clock_source_dfll_set_config_errata_9905+0x3c>)
     e1c:	4798      	blx	r3

	SYSCTRL->DFLLMUL.reg = _system_clock_inst.dfll.mul;
     e1e:	4a0a      	ldr	r2, [pc, #40]	; (e48 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
     e20:	4b0b      	ldr	r3, [pc, #44]	; (e50 <_system_clock_source_dfll_set_config_errata_9905+0x40>)
     e22:	689b      	ldr	r3, [r3, #8]
     e24:	62d3      	str	r3, [r2, #44]	; 0x2c
	SYSCTRL->DFLLVAL.reg = _system_clock_inst.dfll.val;
     e26:	4a08      	ldr	r2, [pc, #32]	; (e48 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
     e28:	4b09      	ldr	r3, [pc, #36]	; (e50 <_system_clock_source_dfll_set_config_errata_9905+0x40>)
     e2a:	685b      	ldr	r3, [r3, #4]
     e2c:	6293      	str	r3, [r2, #40]	; 0x28

	/* Write full configuration to DFLL control register */
	SYSCTRL->DFLLCTRL.reg = 0;
     e2e:	4b06      	ldr	r3, [pc, #24]	; (e48 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
     e30:	2200      	movs	r2, #0
     e32:	849a      	strh	r2, [r3, #36]	; 0x24
	_system_dfll_wait_for_sync();
     e34:	4b05      	ldr	r3, [pc, #20]	; (e4c <_system_clock_source_dfll_set_config_errata_9905+0x3c>)
     e36:	4798      	blx	r3
	SYSCTRL->DFLLCTRL.reg = _system_clock_inst.dfll.control;
     e38:	4a03      	ldr	r2, [pc, #12]	; (e48 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
     e3a:	4b05      	ldr	r3, [pc, #20]	; (e50 <_system_clock_source_dfll_set_config_errata_9905+0x40>)
     e3c:	681b      	ldr	r3, [r3, #0]
     e3e:	b29b      	uxth	r3, r3
     e40:	8493      	strh	r3, [r2, #36]	; 0x24
}
     e42:	46c0      	nop			; (mov r8, r8)
     e44:	46bd      	mov	sp, r7
     e46:	bd80      	pop	{r7, pc}
     e48:	40000800 	.word	0x40000800
     e4c:	00000df5 	.word	0x00000df5
     e50:	2000046c 	.word	0x2000046c

00000e54 <system_clock_source_osc8m_set_config>:
 *
 * \param[in] config  OSC8M configuration structure containing the new config
 */
void system_clock_source_osc8m_set_config(
		struct system_clock_source_osc8m_config *const config)
{
     e54:	b580      	push	{r7, lr}
     e56:	b084      	sub	sp, #16
     e58:	af00      	add	r7, sp, #0
     e5a:	6078      	str	r0, [r7, #4]
	SYSCTRL_OSC8M_Type temp = SYSCTRL->OSC8M;
     e5c:	4b1a      	ldr	r3, [pc, #104]	; (ec8 <system_clock_source_osc8m_set_config+0x74>)
     e5e:	6a1b      	ldr	r3, [r3, #32]
     e60:	60fb      	str	r3, [r7, #12]

	/* Use temporary struct to reduce register access */
	temp.bit.PRESC    = config->prescaler;
     e62:	687b      	ldr	r3, [r7, #4]
     e64:	781b      	ldrb	r3, [r3, #0]
     e66:	1c1a      	adds	r2, r3, #0
     e68:	2303      	movs	r3, #3
     e6a:	4013      	ands	r3, r2
     e6c:	b2da      	uxtb	r2, r3
     e6e:	230d      	movs	r3, #13
     e70:	18fb      	adds	r3, r7, r3
     e72:	2103      	movs	r1, #3
     e74:	400a      	ands	r2, r1
     e76:	0010      	movs	r0, r2
     e78:	781a      	ldrb	r2, [r3, #0]
     e7a:	2103      	movs	r1, #3
     e7c:	438a      	bics	r2, r1
     e7e:	1c11      	adds	r1, r2, #0
     e80:	1c02      	adds	r2, r0, #0
     e82:	430a      	orrs	r2, r1
     e84:	701a      	strb	r2, [r3, #0]
	temp.bit.ONDEMAND = config->on_demand;
     e86:	687b      	ldr	r3, [r7, #4]
     e88:	789a      	ldrb	r2, [r3, #2]
     e8a:	230c      	movs	r3, #12
     e8c:	18fb      	adds	r3, r7, r3
     e8e:	01d0      	lsls	r0, r2, #7
     e90:	781a      	ldrb	r2, [r3, #0]
     e92:	217f      	movs	r1, #127	; 0x7f
     e94:	400a      	ands	r2, r1
     e96:	1c11      	adds	r1, r2, #0
     e98:	1c02      	adds	r2, r0, #0
     e9a:	430a      	orrs	r2, r1
     e9c:	701a      	strb	r2, [r3, #0]
	temp.bit.RUNSTDBY = config->run_in_standby;
     e9e:	687b      	ldr	r3, [r7, #4]
     ea0:	785a      	ldrb	r2, [r3, #1]
     ea2:	230c      	movs	r3, #12
     ea4:	18fb      	adds	r3, r7, r3
     ea6:	2101      	movs	r1, #1
     ea8:	400a      	ands	r2, r1
     eaa:	0190      	lsls	r0, r2, #6
     eac:	781a      	ldrb	r2, [r3, #0]
     eae:	2140      	movs	r1, #64	; 0x40
     eb0:	438a      	bics	r2, r1
     eb2:	1c11      	adds	r1, r2, #0
     eb4:	1c02      	adds	r2, r0, #0
     eb6:	430a      	orrs	r2, r1
     eb8:	701a      	strb	r2, [r3, #0]

	SYSCTRL->OSC8M = temp;
     eba:	4b03      	ldr	r3, [pc, #12]	; (ec8 <system_clock_source_osc8m_set_config+0x74>)
     ebc:	68fa      	ldr	r2, [r7, #12]
     ebe:	621a      	str	r2, [r3, #32]
}
     ec0:	46c0      	nop			; (mov r8, r8)
     ec2:	46bd      	mov	sp, r7
     ec4:	b004      	add	sp, #16
     ec6:	bd80      	pop	{r7, pc}
     ec8:	40000800 	.word	0x40000800

00000ecc <system_clock_source_dfll_set_config>:
 *
 * \param[in] config  DFLL configuration structure containing the new config
 */
void system_clock_source_dfll_set_config(
		struct system_clock_source_dfll_config *const config)
{
     ecc:	b580      	push	{r7, lr}
     ece:	b082      	sub	sp, #8
     ed0:	af00      	add	r7, sp, #0
     ed2:	6078      	str	r0, [r7, #4]
	_system_clock_inst.dfll.val =
			SYSCTRL_DFLLVAL_COARSE(config->coarse_value) |
     ed4:	687b      	ldr	r3, [r7, #4]
     ed6:	7a1b      	ldrb	r3, [r3, #8]
     ed8:	029b      	lsls	r3, r3, #10
     eda:	041b      	lsls	r3, r3, #16
     edc:	0c1a      	lsrs	r2, r3, #16
			SYSCTRL_DFLLVAL_FINE(config->fine_value);
     ede:	687b      	ldr	r3, [r7, #4]
     ee0:	895b      	ldrh	r3, [r3, #10]
     ee2:	059b      	lsls	r3, r3, #22
     ee4:	0d9b      	lsrs	r3, r3, #22
 */
void system_clock_source_dfll_set_config(
		struct system_clock_source_dfll_config *const config)
{
	_system_clock_inst.dfll.val =
			SYSCTRL_DFLLVAL_COARSE(config->coarse_value) |
     ee6:	431a      	orrs	r2, r3
 * \param[in] config  DFLL configuration structure containing the new config
 */
void system_clock_source_dfll_set_config(
		struct system_clock_source_dfll_config *const config)
{
	_system_clock_inst.dfll.val =
     ee8:	4b2a      	ldr	r3, [pc, #168]	; (f94 <system_clock_source_dfll_set_config+0xc8>)
     eea:	605a      	str	r2, [r3, #4]
			SYSCTRL_DFLLVAL_COARSE(config->coarse_value) |
			SYSCTRL_DFLLVAL_FINE(config->fine_value);

	_system_clock_inst.dfll.control =
			(uint32_t)config->wakeup_lock     |
     eec:	687b      	ldr	r3, [r7, #4]
     eee:	799a      	ldrb	r2, [r3, #6]
			(uint32_t)config->stable_tracking |
     ef0:	687b      	ldr	r3, [r7, #4]
     ef2:	79db      	ldrb	r3, [r3, #7]
	_system_clock_inst.dfll.val =
			SYSCTRL_DFLLVAL_COARSE(config->coarse_value) |
			SYSCTRL_DFLLVAL_FINE(config->fine_value);

	_system_clock_inst.dfll.control =
			(uint32_t)config->wakeup_lock     |
     ef4:	4313      	orrs	r3, r2
     ef6:	b2db      	uxtb	r3, r3
     ef8:	001a      	movs	r2, r3
			(uint32_t)config->stable_tracking |
			(uint32_t)config->quick_lock      |
     efa:	687b      	ldr	r3, [r7, #4]
     efc:	885b      	ldrh	r3, [r3, #2]
			SYSCTRL_DFLLVAL_COARSE(config->coarse_value) |
			SYSCTRL_DFLLVAL_FINE(config->fine_value);

	_system_clock_inst.dfll.control =
			(uint32_t)config->wakeup_lock     |
			(uint32_t)config->stable_tracking |
     efe:	4313      	orrs	r3, r2
			(uint32_t)config->quick_lock      |
			(uint32_t)config->chill_cycle     |
     f00:	687a      	ldr	r2, [r7, #4]
     f02:	8892      	ldrh	r2, [r2, #4]
			SYSCTRL_DFLLVAL_FINE(config->fine_value);

	_system_clock_inst.dfll.control =
			(uint32_t)config->wakeup_lock     |
			(uint32_t)config->stable_tracking |
			(uint32_t)config->quick_lock      |
     f04:	431a      	orrs	r2, r3
			(uint32_t)config->chill_cycle     |
			((uint32_t)config->on_demand << SYSCTRL_DFLLCTRL_ONDEMAND_Pos);
     f06:	687b      	ldr	r3, [r7, #4]
     f08:	785b      	ldrb	r3, [r3, #1]
     f0a:	01db      	lsls	r3, r3, #7

	_system_clock_inst.dfll.control =
			(uint32_t)config->wakeup_lock     |
			(uint32_t)config->stable_tracking |
			(uint32_t)config->quick_lock      |
			(uint32_t)config->chill_cycle     |
     f0c:	431a      	orrs	r2, r3
{
	_system_clock_inst.dfll.val =
			SYSCTRL_DFLLVAL_COARSE(config->coarse_value) |
			SYSCTRL_DFLLVAL_FINE(config->fine_value);

	_system_clock_inst.dfll.control =
     f0e:	4b21      	ldr	r3, [pc, #132]	; (f94 <system_clock_source_dfll_set_config+0xc8>)
     f10:	601a      	str	r2, [r3, #0]
			(uint32_t)config->stable_tracking |
			(uint32_t)config->quick_lock      |
			(uint32_t)config->chill_cycle     |
			((uint32_t)config->on_demand << SYSCTRL_DFLLCTRL_ONDEMAND_Pos);

	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_CLOSED) {
     f12:	687b      	ldr	r3, [r7, #4]
     f14:	781b      	ldrb	r3, [r3, #0]
     f16:	2b04      	cmp	r3, #4
     f18:	d116      	bne.n	f48 <system_clock_source_dfll_set_config+0x7c>

		_system_clock_inst.dfll.mul =
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
     f1a:	687b      	ldr	r3, [r7, #4]
     f1c:	7b1b      	ldrb	r3, [r3, #12]
     f1e:	069b      	lsls	r3, r3, #26
     f20:	001a      	movs	r2, r3
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
     f22:	687b      	ldr	r3, [r7, #4]
     f24:	89db      	ldrh	r3, [r3, #14]
     f26:	041b      	lsls	r3, r3, #16
     f28:	0019      	movs	r1, r3
     f2a:	4b1b      	ldr	r3, [pc, #108]	; (f98 <system_clock_source_dfll_set_config+0xcc>)
     f2c:	400b      	ands	r3, r1
			((uint32_t)config->on_demand << SYSCTRL_DFLLCTRL_ONDEMAND_Pos);

	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_CLOSED) {

		_system_clock_inst.dfll.mul =
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
     f2e:	4313      	orrs	r3, r2
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
				SYSCTRL_DFLLMUL_MUL(config->multiply_factor);
     f30:	687a      	ldr	r2, [r7, #4]
     f32:	8a12      	ldrh	r2, [r2, #16]

	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_CLOSED) {

		_system_clock_inst.dfll.mul =
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
     f34:	431a      	orrs	r2, r3
			(uint32_t)config->chill_cycle     |
			((uint32_t)config->on_demand << SYSCTRL_DFLLCTRL_ONDEMAND_Pos);

	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_CLOSED) {

		_system_clock_inst.dfll.mul =
     f36:	4b17      	ldr	r3, [pc, #92]	; (f94 <system_clock_source_dfll_set_config+0xc8>)
     f38:	609a      	str	r2, [r3, #8]
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
				SYSCTRL_DFLLMUL_MUL(config->multiply_factor);

		/* Enable the closed loop mode */
		_system_clock_inst.dfll.control |= config->loop_mode;
     f3a:	4b16      	ldr	r3, [pc, #88]	; (f94 <system_clock_source_dfll_set_config+0xc8>)
     f3c:	681b      	ldr	r3, [r3, #0]
     f3e:	687a      	ldr	r2, [r7, #4]
     f40:	7812      	ldrb	r2, [r2, #0]
     f42:	431a      	orrs	r2, r3
     f44:	4b13      	ldr	r3, [pc, #76]	; (f94 <system_clock_source_dfll_set_config+0xc8>)
     f46:	601a      	str	r2, [r3, #0]
	}
	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_USB_RECOVERY) {
     f48:	687b      	ldr	r3, [r7, #4]
     f4a:	781b      	ldrb	r3, [r3, #0]
     f4c:	2b20      	cmp	r3, #32
     f4e:	d11c      	bne.n	f8a <system_clock_source_dfll_set_config+0xbe>

		_system_clock_inst.dfll.mul =
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
     f50:	687b      	ldr	r3, [r7, #4]
     f52:	7b1b      	ldrb	r3, [r3, #12]
     f54:	069b      	lsls	r3, r3, #26
     f56:	001a      	movs	r2, r3
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
     f58:	687b      	ldr	r3, [r7, #4]
     f5a:	89db      	ldrh	r3, [r3, #14]
     f5c:	041b      	lsls	r3, r3, #16
     f5e:	0019      	movs	r1, r3
     f60:	4b0d      	ldr	r3, [pc, #52]	; (f98 <system_clock_source_dfll_set_config+0xcc>)
     f62:	400b      	ands	r3, r1
		_system_clock_inst.dfll.control |= config->loop_mode;
	}
	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_USB_RECOVERY) {

		_system_clock_inst.dfll.mul =
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
     f64:	4313      	orrs	r3, r2
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
				SYSCTRL_DFLLMUL_MUL(config->multiply_factor);
     f66:	687a      	ldr	r2, [r7, #4]
     f68:	8a12      	ldrh	r2, [r2, #16]
	}
	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_USB_RECOVERY) {

		_system_clock_inst.dfll.mul =
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
     f6a:	431a      	orrs	r2, r3
		/* Enable the closed loop mode */
		_system_clock_inst.dfll.control |= config->loop_mode;
	}
	if (config->loop_mode == SYSTEM_CLOCK_DFLL_LOOP_MODE_USB_RECOVERY) {

		_system_clock_inst.dfll.mul =
     f6c:	4b09      	ldr	r3, [pc, #36]	; (f94 <system_clock_source_dfll_set_config+0xc8>)
     f6e:	609a      	str	r2, [r3, #8]
				SYSCTRL_DFLLMUL_CSTEP(config->coarse_max_step) |
				SYSCTRL_DFLLMUL_FSTEP(config->fine_max_step)   |
				SYSCTRL_DFLLMUL_MUL(config->multiply_factor);

		/* Enable the USB recovery mode */
		_system_clock_inst.dfll.control |= config->loop_mode |
     f70:	4b08      	ldr	r3, [pc, #32]	; (f94 <system_clock_source_dfll_set_config+0xc8>)
     f72:	681b      	ldr	r3, [r3, #0]
     f74:	687a      	ldr	r2, [r7, #4]
     f76:	7812      	ldrb	r2, [r2, #0]
     f78:	2104      	movs	r1, #4
     f7a:	430a      	orrs	r2, r1
     f7c:	b2d2      	uxtb	r2, r2
     f7e:	4313      	orrs	r3, r2
     f80:	2280      	movs	r2, #128	; 0x80
     f82:	00d2      	lsls	r2, r2, #3
     f84:	431a      	orrs	r2, r3
     f86:	4b03      	ldr	r3, [pc, #12]	; (f94 <system_clock_source_dfll_set_config+0xc8>)
     f88:	601a      	str	r2, [r3, #0]
				SYSCTRL_DFLLCTRL_MODE | SYSCTRL_DFLLCTRL_BPLCKC;
	}
}
     f8a:	46c0      	nop			; (mov r8, r8)
     f8c:	46bd      	mov	sp, r7
     f8e:	b002      	add	sp, #8
     f90:	bd80      	pop	{r7, pc}
     f92:	46c0      	nop			; (mov r8, r8)
     f94:	2000046c 	.word	0x2000046c
     f98:	03ff0000 	.word	0x03ff0000

00000f9c <system_clock_source_enable>:
 * \retval STATUS_ERR_INVALID_ARG  The clock source is not available on this
 *                                 device
 */
enum status_code system_clock_source_enable(
		const enum system_clock_source clock_source)
{
     f9c:	b580      	push	{r7, lr}
     f9e:	b082      	sub	sp, #8
     fa0:	af00      	add	r7, sp, #0
     fa2:	0002      	movs	r2, r0
     fa4:	1dfb      	adds	r3, r7, #7
     fa6:	701a      	strb	r2, [r3, #0]
	switch (clock_source) {
     fa8:	1dfb      	adds	r3, r7, #7
     faa:	781b      	ldrb	r3, [r3, #0]
     fac:	2b08      	cmp	r3, #8
     fae:	d83b      	bhi.n	1028 <system_clock_source_enable+0x8c>
     fb0:	009a      	lsls	r2, r3, #2
     fb2:	4b21      	ldr	r3, [pc, #132]	; (1038 <system_clock_source_enable+0x9c>)
     fb4:	18d3      	adds	r3, r2, r3
     fb6:	681b      	ldr	r3, [r3, #0]
     fb8:	469f      	mov	pc, r3
	case SYSTEM_CLOCK_SOURCE_OSC8M:
		SYSCTRL->OSC8M.reg |= SYSCTRL_OSC8M_ENABLE;
     fba:	4b20      	ldr	r3, [pc, #128]	; (103c <system_clock_source_enable+0xa0>)
     fbc:	4a1f      	ldr	r2, [pc, #124]	; (103c <system_clock_source_enable+0xa0>)
     fbe:	6a12      	ldr	r2, [r2, #32]
     fc0:	2102      	movs	r1, #2
     fc2:	430a      	orrs	r2, r1
     fc4:	621a      	str	r2, [r3, #32]
		return STATUS_OK;
     fc6:	2300      	movs	r3, #0
     fc8:	e031      	b.n	102e <system_clock_source_enable+0x92>

	case SYSTEM_CLOCK_SOURCE_OSC32K:
		SYSCTRL->OSC32K.reg |= SYSCTRL_OSC32K_ENABLE;
     fca:	4b1c      	ldr	r3, [pc, #112]	; (103c <system_clock_source_enable+0xa0>)
     fcc:	4a1b      	ldr	r2, [pc, #108]	; (103c <system_clock_source_enable+0xa0>)
     fce:	6992      	ldr	r2, [r2, #24]
     fd0:	2102      	movs	r1, #2
     fd2:	430a      	orrs	r2, r1
     fd4:	619a      	str	r2, [r3, #24]
		break;
     fd6:	e029      	b.n	102c <system_clock_source_enable+0x90>

	case SYSTEM_CLOCK_SOURCE_XOSC:
		SYSCTRL->XOSC.reg |= SYSCTRL_XOSC_ENABLE;
     fd8:	4a18      	ldr	r2, [pc, #96]	; (103c <system_clock_source_enable+0xa0>)
     fda:	4b18      	ldr	r3, [pc, #96]	; (103c <system_clock_source_enable+0xa0>)
     fdc:	8a1b      	ldrh	r3, [r3, #16]
     fde:	b29b      	uxth	r3, r3
     fe0:	2102      	movs	r1, #2
     fe2:	430b      	orrs	r3, r1
     fe4:	b29b      	uxth	r3, r3
     fe6:	8213      	strh	r3, [r2, #16]
		break;
     fe8:	e020      	b.n	102c <system_clock_source_enable+0x90>

	case SYSTEM_CLOCK_SOURCE_XOSC32K:
		SYSCTRL->XOSC32K.reg |= SYSCTRL_XOSC32K_ENABLE;
     fea:	4a14      	ldr	r2, [pc, #80]	; (103c <system_clock_source_enable+0xa0>)
     fec:	4b13      	ldr	r3, [pc, #76]	; (103c <system_clock_source_enable+0xa0>)
     fee:	8a9b      	ldrh	r3, [r3, #20]
     ff0:	b29b      	uxth	r3, r3
     ff2:	2102      	movs	r1, #2
     ff4:	430b      	orrs	r3, r1
     ff6:	b29b      	uxth	r3, r3
     ff8:	8293      	strh	r3, [r2, #20]
		break;
     ffa:	e017      	b.n	102c <system_clock_source_enable+0x90>

	case SYSTEM_CLOCK_SOURCE_DFLL:
		_system_clock_inst.dfll.control |= SYSCTRL_DFLLCTRL_ENABLE;
     ffc:	4b10      	ldr	r3, [pc, #64]	; (1040 <system_clock_source_enable+0xa4>)
     ffe:	681b      	ldr	r3, [r3, #0]
    1000:	2202      	movs	r2, #2
    1002:	431a      	orrs	r2, r3
    1004:	4b0e      	ldr	r3, [pc, #56]	; (1040 <system_clock_source_enable+0xa4>)
    1006:	601a      	str	r2, [r3, #0]
		_system_clock_source_dfll_set_config_errata_9905();
    1008:	4b0e      	ldr	r3, [pc, #56]	; (1044 <system_clock_source_enable+0xa8>)
    100a:	4798      	blx	r3
		break;
    100c:	e00e      	b.n	102c <system_clock_source_enable+0x90>

#ifdef FEATURE_SYSTEM_CLOCK_DPLL
	case SYSTEM_CLOCK_SOURCE_DPLL:
		SYSCTRL->DPLLCTRLA.reg |= SYSCTRL_DPLLCTRLA_ENABLE;
    100e:	4a0b      	ldr	r2, [pc, #44]	; (103c <system_clock_source_enable+0xa0>)
    1010:	490a      	ldr	r1, [pc, #40]	; (103c <system_clock_source_enable+0xa0>)
    1012:	2344      	movs	r3, #68	; 0x44
    1014:	5ccb      	ldrb	r3, [r1, r3]
    1016:	b2db      	uxtb	r3, r3
    1018:	2102      	movs	r1, #2
    101a:	430b      	orrs	r3, r1
    101c:	b2d9      	uxtb	r1, r3
    101e:	2344      	movs	r3, #68	; 0x44
    1020:	54d1      	strb	r1, [r2, r3]
		break;
    1022:	e003      	b.n	102c <system_clock_source_enable+0x90>
#endif

	case SYSTEM_CLOCK_SOURCE_ULP32K:
		/* Always enabled */
		return STATUS_OK;
    1024:	2300      	movs	r3, #0
    1026:	e002      	b.n	102e <system_clock_source_enable+0x92>

	default:
		Assert(false);
		return STATUS_ERR_INVALID_ARG;
    1028:	2317      	movs	r3, #23
    102a:	e000      	b.n	102e <system_clock_source_enable+0x92>
	}

	return STATUS_OK;
    102c:	2300      	movs	r3, #0
}
    102e:	0018      	movs	r0, r3
    1030:	46bd      	mov	sp, r7
    1032:	b002      	add	sp, #8
    1034:	bd80      	pop	{r7, pc}
    1036:	46c0      	nop			; (mov r8, r8)
    1038:	00002984 	.word	0x00002984
    103c:	40000800 	.word	0x40000800
    1040:	2000046c 	.word	0x2000046c
    1044:	00000e11 	.word	0x00000e11

00001048 <_switch_peripheral_gclk>:
 *
 * Switch all peripheral clock to a not enabled general clock
 * to save power.
 */
static void _switch_peripheral_gclk(void)
{
    1048:	b580      	push	{r7, lr}
    104a:	b082      	sub	sp, #8
    104c:	af00      	add	r7, sp, #0
	uint32_t gclk_id;
	struct system_gclk_chan_config gclk_conf;

#if CONF_CLOCK_GCLK_1_ENABLE == false
	gclk_conf.source_generator = GCLK_GENERATOR_1;
    104e:	003b      	movs	r3, r7
    1050:	2201      	movs	r2, #1
    1052:	701a      	strb	r2, [r3, #0]
	gclk_conf.source_generator = GCLK_GENERATOR_7;
#else
	gclk_conf.source_generator = GCLK_GENERATOR_7;
#endif

	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
    1054:	2300      	movs	r3, #0
    1056:	607b      	str	r3, [r7, #4]
    1058:	e009      	b.n	106e <_switch_peripheral_gclk+0x26>
		system_gclk_chan_set_config(gclk_id, &gclk_conf);
    105a:	687b      	ldr	r3, [r7, #4]
    105c:	b2db      	uxtb	r3, r3
    105e:	003a      	movs	r2, r7
    1060:	0011      	movs	r1, r2
    1062:	0018      	movs	r0, r3
    1064:	4b05      	ldr	r3, [pc, #20]	; (107c <_switch_peripheral_gclk+0x34>)
    1066:	4798      	blx	r3
	gclk_conf.source_generator = GCLK_GENERATOR_7;
#else
	gclk_conf.source_generator = GCLK_GENERATOR_7;
#endif

	for (gclk_id = 0; gclk_id < GCLK_NUM; gclk_id++) {
    1068:	687b      	ldr	r3, [r7, #4]
    106a:	3301      	adds	r3, #1
    106c:	607b      	str	r3, [r7, #4]
    106e:	687b      	ldr	r3, [r7, #4]
    1070:	2b24      	cmp	r3, #36	; 0x24
    1072:	d9f2      	bls.n	105a <_switch_peripheral_gclk+0x12>
		system_gclk_chan_set_config(gclk_id, &gclk_conf);
	}
}
    1074:	46c0      	nop			; (mov r8, r8)
    1076:	46bd      	mov	sp, r7
    1078:	b002      	add	sp, #8
    107a:	bd80      	pop	{r7, pc}
    107c:	000013a9 	.word	0x000013a9

00001080 <system_clock_init>:
 * \note OSC8M is always enabled and if user selects other clocks for GCLK generators,
 * the OSC8M default enable can be disabled after system_clock_init. Make sure the
 * clock switch successfully before disabling OSC8M.
 */
void system_clock_init(void)
{
    1080:	b580      	push	{r7, lr}
    1082:	b0a0      	sub	sp, #128	; 0x80
    1084:	af00      	add	r7, sp, #0
	/* Various bits in the INTFLAG register can be set to one at startup.
	   This will ensure that these bits are cleared */
	SYSCTRL->INTFLAG.reg = SYSCTRL_INTFLAG_BOD33RDY | SYSCTRL_INTFLAG_BOD33DET |
    1086:	4b27      	ldr	r3, [pc, #156]	; (1124 <system_clock_init+0xa4>)
    1088:	22c2      	movs	r2, #194	; 0xc2
    108a:	00d2      	lsls	r2, r2, #3
    108c:	609a      	str	r2, [r3, #8]
			SYSCTRL_INTFLAG_DFLLRDY;

	system_flash_set_waitstates(CONF_CLOCK_FLASH_WAIT_STATES);
    108e:	2000      	movs	r0, #0
    1090:	4b25      	ldr	r3, [pc, #148]	; (1128 <system_clock_init+0xa8>)
    1092:	4798      	blx	r3

	/* Switch all peripheral clock to a not enabled general clock to save power. */
	_switch_peripheral_gclk();
    1094:	4b25      	ldr	r3, [pc, #148]	; (112c <system_clock_init+0xac>)
    1096:	4798      	blx	r3
#endif


	/* OSC8M */
	struct system_clock_source_osc8m_config osc8m_conf;
	system_clock_source_osc8m_get_config_defaults(&osc8m_conf);
    1098:	237c      	movs	r3, #124	; 0x7c
    109a:	18fb      	adds	r3, r7, r3
    109c:	0018      	movs	r0, r3
    109e:	4b24      	ldr	r3, [pc, #144]	; (1130 <system_clock_init+0xb0>)
    10a0:	4798      	blx	r3

	osc8m_conf.prescaler       = CONF_CLOCK_OSC8M_PRESCALER;
    10a2:	237c      	movs	r3, #124	; 0x7c
    10a4:	18fb      	adds	r3, r7, r3
    10a6:	2200      	movs	r2, #0
    10a8:	701a      	strb	r2, [r3, #0]
	osc8m_conf.on_demand       = CONF_CLOCK_OSC8M_ON_DEMAND;
    10aa:	237c      	movs	r3, #124	; 0x7c
    10ac:	18fb      	adds	r3, r7, r3
    10ae:	2201      	movs	r2, #1
    10b0:	709a      	strb	r2, [r3, #2]
	osc8m_conf.run_in_standby  = CONF_CLOCK_OSC8M_RUN_IN_STANDBY;
    10b2:	237c      	movs	r3, #124	; 0x7c
    10b4:	18fb      	adds	r3, r7, r3
    10b6:	2200      	movs	r2, #0
    10b8:	705a      	strb	r2, [r3, #1]

	system_clock_source_osc8m_set_config(&osc8m_conf);
    10ba:	237c      	movs	r3, #124	; 0x7c
    10bc:	18fb      	adds	r3, r7, r3
    10be:	0018      	movs	r0, r3
    10c0:	4b1c      	ldr	r3, [pc, #112]	; (1134 <system_clock_init+0xb4>)
    10c2:	4798      	blx	r3
	system_clock_source_enable(SYSTEM_CLOCK_SOURCE_OSC8M);
    10c4:	2006      	movs	r0, #6
    10c6:	4b1c      	ldr	r3, [pc, #112]	; (1138 <system_clock_init+0xb8>)
    10c8:	4798      	blx	r3


	/* GCLK */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	system_gclk_init();
    10ca:	4b1c      	ldr	r3, [pc, #112]	; (113c <system_clock_init+0xbc>)
    10cc:	4798      	blx	r3

#  endif
#endif

	/* CPU and BUS clocks */
	system_cpu_clock_set_divider(CONF_CLOCK_CPU_DIVIDER);
    10ce:	2000      	movs	r0, #0
    10d0:	4b1b      	ldr	r3, [pc, #108]	; (1140 <system_clock_init+0xc0>)
    10d2:	4798      	blx	r3

	system_apb_clock_set_divider(SYSTEM_CLOCK_APB_APBA, CONF_CLOCK_APBA_DIVIDER);
    10d4:	2100      	movs	r1, #0
    10d6:	2000      	movs	r0, #0
    10d8:	4b1a      	ldr	r3, [pc, #104]	; (1144 <system_clock_init+0xc4>)
    10da:	4798      	blx	r3
	system_apb_clock_set_divider(SYSTEM_CLOCK_APB_APBB, CONF_CLOCK_APBB_DIVIDER);
    10dc:	2100      	movs	r1, #0
    10de:	2001      	movs	r0, #1
    10e0:	4b18      	ldr	r3, [pc, #96]	; (1144 <system_clock_init+0xc4>)
    10e2:	4798      	blx	r3
	system_apb_clock_set_divider(SYSTEM_CLOCK_APB_APBC, CONF_CLOCK_APBC_DIVIDER);
    10e4:	2100      	movs	r1, #0
    10e6:	2002      	movs	r0, #2
    10e8:	4b16      	ldr	r3, [pc, #88]	; (1144 <system_clock_init+0xc4>)
    10ea:	4798      	blx	r3

	/* GCLK 0 */
#if CONF_CLOCK_CONFIGURE_GCLK == true
	/* Configure the main GCLK last as it might depend on other generators */
	_CONF_CLOCK_GCLK_CONFIG(0, ~);
    10ec:	1d3b      	adds	r3, r7, #4
    10ee:	0018      	movs	r0, r3
    10f0:	4b15      	ldr	r3, [pc, #84]	; (1148 <system_clock_init+0xc8>)
    10f2:	4798      	blx	r3
    10f4:	1d3b      	adds	r3, r7, #4
    10f6:	2206      	movs	r2, #6
    10f8:	701a      	strb	r2, [r3, #0]
    10fa:	1d3b      	adds	r3, r7, #4
    10fc:	2201      	movs	r2, #1
    10fe:	605a      	str	r2, [r3, #4]
    1100:	1d3b      	adds	r3, r7, #4
    1102:	2200      	movs	r2, #0
    1104:	721a      	strb	r2, [r3, #8]
    1106:	1d3b      	adds	r3, r7, #4
    1108:	2200      	movs	r2, #0
    110a:	725a      	strb	r2, [r3, #9]
    110c:	1d3b      	adds	r3, r7, #4
    110e:	0019      	movs	r1, r3
    1110:	2000      	movs	r0, #0
    1112:	4b0e      	ldr	r3, [pc, #56]	; (114c <system_clock_init+0xcc>)
    1114:	4798      	blx	r3
    1116:	2000      	movs	r0, #0
    1118:	4b0d      	ldr	r3, [pc, #52]	; (1150 <system_clock_init+0xd0>)
    111a:	4798      	blx	r3
#endif
}
    111c:	46c0      	nop			; (mov r8, r8)
    111e:	46bd      	mov	sp, r7
    1120:	b020      	add	sp, #128	; 0x80
    1122:	bd80      	pop	{r7, pc}
    1124:	40000800 	.word	0x40000800
    1128:	00000dc1 	.word	0x00000dc1
    112c:	00001049 	.word	0x00001049
    1130:	00000d29 	.word	0x00000d29
    1134:	00000e55 	.word	0x00000e55
    1138:	00000f9d 	.word	0x00000f9d
    113c:	000011f9 	.word	0x000011f9
    1140:	00000d4d 	.word	0x00000d4d
    1144:	00000d6d 	.word	0x00000d6d
    1148:	00000cf9 	.word	0x00000cf9
    114c:	00001229 	.word	0x00001229
    1150:	0000134d 	.word	0x0000134d

00001154 <system_apb_clock_set_mask>:
 * \retval STATUS_OK               The clock mask was set successfully
 */
static inline enum status_code system_apb_clock_set_mask(
		const enum system_clock_apb_bus bus,
		const uint32_t mask)
{
    1154:	b580      	push	{r7, lr}
    1156:	b082      	sub	sp, #8
    1158:	af00      	add	r7, sp, #0
    115a:	0002      	movs	r2, r0
    115c:	6039      	str	r1, [r7, #0]
    115e:	1dfb      	adds	r3, r7, #7
    1160:	701a      	strb	r2, [r3, #0]
	switch (bus) {
    1162:	1dfb      	adds	r3, r7, #7
    1164:	781b      	ldrb	r3, [r3, #0]
    1166:	2b01      	cmp	r3, #1
    1168:	d00a      	beq.n	1180 <system_apb_clock_set_mask+0x2c>
    116a:	2b02      	cmp	r3, #2
    116c:	d00f      	beq.n	118e <system_apb_clock_set_mask+0x3a>
    116e:	2b00      	cmp	r3, #0
    1170:	d114      	bne.n	119c <system_apb_clock_set_mask+0x48>
		case SYSTEM_CLOCK_APB_APBA:
			PM->APBAMASK.reg |= mask;
    1172:	4b0e      	ldr	r3, [pc, #56]	; (11ac <system_apb_clock_set_mask+0x58>)
    1174:	4a0d      	ldr	r2, [pc, #52]	; (11ac <system_apb_clock_set_mask+0x58>)
    1176:	6991      	ldr	r1, [r2, #24]
    1178:	683a      	ldr	r2, [r7, #0]
    117a:	430a      	orrs	r2, r1
    117c:	619a      	str	r2, [r3, #24]
			break;
    117e:	e00f      	b.n	11a0 <system_apb_clock_set_mask+0x4c>

		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBMASK.reg |= mask;
    1180:	4b0a      	ldr	r3, [pc, #40]	; (11ac <system_apb_clock_set_mask+0x58>)
    1182:	4a0a      	ldr	r2, [pc, #40]	; (11ac <system_apb_clock_set_mask+0x58>)
    1184:	69d1      	ldr	r1, [r2, #28]
    1186:	683a      	ldr	r2, [r7, #0]
    1188:	430a      	orrs	r2, r1
    118a:	61da      	str	r2, [r3, #28]
			break;
    118c:	e008      	b.n	11a0 <system_apb_clock_set_mask+0x4c>

		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCMASK.reg |= mask;
    118e:	4b07      	ldr	r3, [pc, #28]	; (11ac <system_apb_clock_set_mask+0x58>)
    1190:	4a06      	ldr	r2, [pc, #24]	; (11ac <system_apb_clock_set_mask+0x58>)
    1192:	6a11      	ldr	r1, [r2, #32]
    1194:	683a      	ldr	r2, [r7, #0]
    1196:	430a      	orrs	r2, r1
    1198:	621a      	str	r2, [r3, #32]
			break;
    119a:	e001      	b.n	11a0 <system_apb_clock_set_mask+0x4c>

		default:
			Assert(false);
			return STATUS_ERR_INVALID_ARG;
    119c:	2317      	movs	r3, #23
    119e:	e000      	b.n	11a2 <system_apb_clock_set_mask+0x4e>

	}

	return STATUS_OK;
    11a0:	2300      	movs	r3, #0
}
    11a2:	0018      	movs	r0, r3
    11a4:	46bd      	mov	sp, r7
    11a6:	b002      	add	sp, #8
    11a8:	bd80      	pop	{r7, pc}
    11aa:	46c0      	nop			; (mov r8, r8)
    11ac:	40000400 	.word	0x40000400

000011b0 <system_interrupt_enter_critical_section>:
 * count of the critical section nesting will be kept, so that global interrupts
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_enter_critical_section(void)
{
    11b0:	b580      	push	{r7, lr}
    11b2:	af00      	add	r7, sp, #0
	cpu_irq_enter_critical();
    11b4:	4b02      	ldr	r3, [pc, #8]	; (11c0 <system_interrupt_enter_critical_section+0x10>)
    11b6:	4798      	blx	r3
}
    11b8:	46c0      	nop			; (mov r8, r8)
    11ba:	46bd      	mov	sp, r7
    11bc:	bd80      	pop	{r7, pc}
    11be:	46c0      	nop			; (mov r8, r8)
    11c0:	00000c65 	.word	0x00000c65

000011c4 <system_interrupt_leave_critical_section>:
 * count of the critical section nesting will be kept, so that global interrupts
 * are only re-enabled upon leaving the outermost nested critical section.
 *
 */
static inline void system_interrupt_leave_critical_section(void)
{
    11c4:	b580      	push	{r7, lr}
    11c6:	af00      	add	r7, sp, #0
	cpu_irq_leave_critical();
    11c8:	4b02      	ldr	r3, [pc, #8]	; (11d4 <system_interrupt_leave_critical_section+0x10>)
    11ca:	4798      	blx	r3
}
    11cc:	46c0      	nop			; (mov r8, r8)
    11ce:	46bd      	mov	sp, r7
    11d0:	bd80      	pop	{r7, pc}
    11d2:	46c0      	nop			; (mov r8, r8)
    11d4:	00000cb9 	.word	0x00000cb9

000011d8 <system_gclk_is_syncing>:
 *
 * \retval false if the module has completed synchronization
 * \retval true if the module synchronization is ongoing
 */
static inline bool system_gclk_is_syncing(void)
{
    11d8:	b580      	push	{r7, lr}
    11da:	af00      	add	r7, sp, #0
	if (GCLK->STATUS.reg & GCLK_STATUS_SYNCBUSY){
    11dc:	4b05      	ldr	r3, [pc, #20]	; (11f4 <system_gclk_is_syncing+0x1c>)
    11de:	785b      	ldrb	r3, [r3, #1]
    11e0:	b2db      	uxtb	r3, r3
    11e2:	b25b      	sxtb	r3, r3
    11e4:	2b00      	cmp	r3, #0
    11e6:	da01      	bge.n	11ec <system_gclk_is_syncing+0x14>
		return true;
    11e8:	2301      	movs	r3, #1
    11ea:	e000      	b.n	11ee <system_gclk_is_syncing+0x16>
	}

	return false;
    11ec:	2300      	movs	r3, #0
}
    11ee:	0018      	movs	r0, r3
    11f0:	46bd      	mov	sp, r7
    11f2:	bd80      	pop	{r7, pc}
    11f4:	40000c00 	.word	0x40000c00

000011f8 <system_gclk_init>:
 *
 * Initializes the Generic Clock module, disabling and resetting all active
 * Generic Clock Generators and Channels to their power-on default values.
 */
void system_gclk_init(void)
{
    11f8:	b580      	push	{r7, lr}
    11fa:	af00      	add	r7, sp, #0
	/* Turn on the digital interface clock */
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBA, PM_APBAMASK_GCLK);
    11fc:	2108      	movs	r1, #8
    11fe:	2000      	movs	r0, #0
    1200:	4b07      	ldr	r3, [pc, #28]	; (1220 <system_gclk_init+0x28>)
    1202:	4798      	blx	r3

	/* Software reset the module to ensure it is re-initialized correctly */
	GCLK->CTRL.reg = GCLK_CTRL_SWRST;
    1204:	4b07      	ldr	r3, [pc, #28]	; (1224 <system_gclk_init+0x2c>)
    1206:	2201      	movs	r2, #1
    1208:	701a      	strb	r2, [r3, #0]
	while (GCLK->CTRL.reg & GCLK_CTRL_SWRST) {
    120a:	46c0      	nop			; (mov r8, r8)
    120c:	4b05      	ldr	r3, [pc, #20]	; (1224 <system_gclk_init+0x2c>)
    120e:	781b      	ldrb	r3, [r3, #0]
    1210:	b2db      	uxtb	r3, r3
    1212:	001a      	movs	r2, r3
    1214:	2301      	movs	r3, #1
    1216:	4013      	ands	r3, r2
    1218:	d1f8      	bne.n	120c <system_gclk_init+0x14>
		/* Wait for reset to complete */
	}
}
    121a:	46c0      	nop			; (mov r8, r8)
    121c:	46bd      	mov	sp, r7
    121e:	bd80      	pop	{r7, pc}
    1220:	00001155 	.word	0x00001155
    1224:	40000c00 	.word	0x40000c00

00001228 <system_gclk_gen_set_config>:
 * \param[in] config     Configuration settings for the generator
 */
void system_gclk_gen_set_config(
		const uint8_t generator,
		struct system_gclk_gen_config *const config)
{
    1228:	b580      	push	{r7, lr}
    122a:	b086      	sub	sp, #24
    122c:	af00      	add	r7, sp, #0
    122e:	0002      	movs	r2, r0
    1230:	6039      	str	r1, [r7, #0]
    1232:	1dfb      	adds	r3, r7, #7
    1234:	701a      	strb	r2, [r3, #0]
	/* Sanity check arguments */
	Assert(config);

	/* Cache new register configurations to minimize sync requirements. */
	uint32_t new_genctrl_config = (generator << GCLK_GENCTRL_ID_Pos);
    1236:	1dfb      	adds	r3, r7, #7
    1238:	781b      	ldrb	r3, [r3, #0]
    123a:	617b      	str	r3, [r7, #20]
	uint32_t new_gendiv_config  = (generator << GCLK_GENDIV_ID_Pos);
    123c:	1dfb      	adds	r3, r7, #7
    123e:	781b      	ldrb	r3, [r3, #0]
    1240:	613b      	str	r3, [r7, #16]

	/* Select the requested source clock for the generator */
	new_genctrl_config |= config->source_clock << GCLK_GENCTRL_SRC_Pos;
    1242:	683b      	ldr	r3, [r7, #0]
    1244:	781b      	ldrb	r3, [r3, #0]
    1246:	021b      	lsls	r3, r3, #8
    1248:	001a      	movs	r2, r3
    124a:	697b      	ldr	r3, [r7, #20]
    124c:	4313      	orrs	r3, r2
    124e:	617b      	str	r3, [r7, #20]

	/* Configure the clock to be either high or low when disabled */
	if (config->high_when_disabled) {
    1250:	683b      	ldr	r3, [r7, #0]
    1252:	785b      	ldrb	r3, [r3, #1]
    1254:	2b00      	cmp	r3, #0
    1256:	d004      	beq.n	1262 <system_gclk_gen_set_config+0x3a>
		new_genctrl_config |= GCLK_GENCTRL_OOV;
    1258:	697b      	ldr	r3, [r7, #20]
    125a:	2280      	movs	r2, #128	; 0x80
    125c:	02d2      	lsls	r2, r2, #11
    125e:	4313      	orrs	r3, r2
    1260:	617b      	str	r3, [r7, #20]
	}

	/* Configure if the clock output to I/O pin should be enabled. */
	if (config->output_enable) {
    1262:	683b      	ldr	r3, [r7, #0]
    1264:	7a5b      	ldrb	r3, [r3, #9]
    1266:	2b00      	cmp	r3, #0
    1268:	d004      	beq.n	1274 <system_gclk_gen_set_config+0x4c>
		new_genctrl_config |= GCLK_GENCTRL_OE;
    126a:	697b      	ldr	r3, [r7, #20]
    126c:	2280      	movs	r2, #128	; 0x80
    126e:	0312      	lsls	r2, r2, #12
    1270:	4313      	orrs	r3, r2
    1272:	617b      	str	r3, [r7, #20]
	}

	/* Set division factor */
	if (config->division_factor > 1) {
    1274:	683b      	ldr	r3, [r7, #0]
    1276:	685b      	ldr	r3, [r3, #4]
    1278:	2b01      	cmp	r3, #1
    127a:	d92c      	bls.n	12d6 <system_gclk_gen_set_config+0xae>
		/* Check if division is a power of two */
		if (((config->division_factor & (config->division_factor - 1)) == 0)) {
    127c:	683b      	ldr	r3, [r7, #0]
    127e:	685a      	ldr	r2, [r3, #4]
    1280:	683b      	ldr	r3, [r7, #0]
    1282:	685b      	ldr	r3, [r3, #4]
    1284:	3b01      	subs	r3, #1
    1286:	4013      	ands	r3, r2
    1288:	d11a      	bne.n	12c0 <system_gclk_gen_set_config+0x98>
			/* Determine the index of the highest bit set to get the
			 * division factor that must be loaded into the division
			 * register */

			uint32_t div2_count = 0;
    128a:	2300      	movs	r3, #0
    128c:	60fb      	str	r3, [r7, #12]

			uint32_t mask;
			for (mask = (1UL << 1); mask < config->division_factor;
    128e:	2302      	movs	r3, #2
    1290:	60bb      	str	r3, [r7, #8]
    1292:	e005      	b.n	12a0 <system_gclk_gen_set_config+0x78>
						mask <<= 1) {
				div2_count++;
    1294:	68fb      	ldr	r3, [r7, #12]
    1296:	3301      	adds	r3, #1
    1298:	60fb      	str	r3, [r7, #12]

			uint32_t div2_count = 0;

			uint32_t mask;
			for (mask = (1UL << 1); mask < config->division_factor;
						mask <<= 1) {
    129a:	68bb      	ldr	r3, [r7, #8]
    129c:	005b      	lsls	r3, r3, #1
    129e:	60bb      	str	r3, [r7, #8]
			 * register */

			uint32_t div2_count = 0;

			uint32_t mask;
			for (mask = (1UL << 1); mask < config->division_factor;
    12a0:	683b      	ldr	r3, [r7, #0]
    12a2:	685a      	ldr	r2, [r3, #4]
    12a4:	68bb      	ldr	r3, [r7, #8]
    12a6:	429a      	cmp	r2, r3
    12a8:	d8f4      	bhi.n	1294 <system_gclk_gen_set_config+0x6c>
						mask <<= 1) {
				div2_count++;
			}

			/* Set binary divider power of 2 division factor */
			new_gendiv_config  |= div2_count << GCLK_GENDIV_DIV_Pos;
    12aa:	68fb      	ldr	r3, [r7, #12]
    12ac:	021b      	lsls	r3, r3, #8
    12ae:	693a      	ldr	r2, [r7, #16]
    12b0:	4313      	orrs	r3, r2
    12b2:	613b      	str	r3, [r7, #16]
			new_genctrl_config |= GCLK_GENCTRL_DIVSEL;
    12b4:	697b      	ldr	r3, [r7, #20]
    12b6:	2280      	movs	r2, #128	; 0x80
    12b8:	0352      	lsls	r2, r2, #13
    12ba:	4313      	orrs	r3, r2
    12bc:	617b      	str	r3, [r7, #20]
    12be:	e00a      	b.n	12d6 <system_gclk_gen_set_config+0xae>
		} else {
			/* Set integer division factor */

			new_gendiv_config  |=
					(config->division_factor) << GCLK_GENDIV_DIV_Pos;
    12c0:	683b      	ldr	r3, [r7, #0]
    12c2:	685b      	ldr	r3, [r3, #4]
    12c4:	021b      	lsls	r3, r3, #8
			new_gendiv_config  |= div2_count << GCLK_GENDIV_DIV_Pos;
			new_genctrl_config |= GCLK_GENCTRL_DIVSEL;
		} else {
			/* Set integer division factor */

			new_gendiv_config  |=
    12c6:	693a      	ldr	r2, [r7, #16]
    12c8:	4313      	orrs	r3, r2
    12ca:	613b      	str	r3, [r7, #16]
					(config->division_factor) << GCLK_GENDIV_DIV_Pos;

			/* Enable non-binary division with increased duty cycle accuracy */
			new_genctrl_config |= GCLK_GENCTRL_IDC;
    12cc:	697b      	ldr	r3, [r7, #20]
    12ce:	2280      	movs	r2, #128	; 0x80
    12d0:	0292      	lsls	r2, r2, #10
    12d2:	4313      	orrs	r3, r2
    12d4:	617b      	str	r3, [r7, #20]
		}

	}

	/* Enable or disable the clock in standby mode */
	if (config->run_in_standby) {
    12d6:	683b      	ldr	r3, [r7, #0]
    12d8:	7a1b      	ldrb	r3, [r3, #8]
    12da:	2b00      	cmp	r3, #0
    12dc:	d004      	beq.n	12e8 <system_gclk_gen_set_config+0xc0>
		new_genctrl_config |= GCLK_GENCTRL_RUNSTDBY;
    12de:	697b      	ldr	r3, [r7, #20]
    12e0:	2280      	movs	r2, #128	; 0x80
    12e2:	0392      	lsls	r2, r2, #14
    12e4:	4313      	orrs	r3, r2
    12e6:	617b      	str	r3, [r7, #20]
	}

	while (system_gclk_is_syncing()) {
    12e8:	46c0      	nop			; (mov r8, r8)
    12ea:	4b13      	ldr	r3, [pc, #76]	; (1338 <system_gclk_gen_set_config+0x110>)
    12ec:	4798      	blx	r3
    12ee:	1e03      	subs	r3, r0, #0
    12f0:	d1fb      	bne.n	12ea <system_gclk_gen_set_config+0xc2>
		/* Wait for synchronization */
	};

	system_interrupt_enter_critical_section();
    12f2:	4b12      	ldr	r3, [pc, #72]	; (133c <system_gclk_gen_set_config+0x114>)
    12f4:	4798      	blx	r3

	/* Select the correct generator */
	*((uint8_t*)&GCLK->GENDIV.reg) = generator;
    12f6:	4a12      	ldr	r2, [pc, #72]	; (1340 <system_gclk_gen_set_config+0x118>)
    12f8:	1dfb      	adds	r3, r7, #7
    12fa:	781b      	ldrb	r3, [r3, #0]
    12fc:	7013      	strb	r3, [r2, #0]

	/* Write the new generator configuration */
	while (system_gclk_is_syncing()) {
    12fe:	46c0      	nop			; (mov r8, r8)
    1300:	4b0d      	ldr	r3, [pc, #52]	; (1338 <system_gclk_gen_set_config+0x110>)
    1302:	4798      	blx	r3
    1304:	1e03      	subs	r3, r0, #0
    1306:	d1fb      	bne.n	1300 <system_gclk_gen_set_config+0xd8>
		/* Wait for synchronization */
	};
	GCLK->GENDIV.reg  = new_gendiv_config;
    1308:	4b0e      	ldr	r3, [pc, #56]	; (1344 <system_gclk_gen_set_config+0x11c>)
    130a:	693a      	ldr	r2, [r7, #16]
    130c:	609a      	str	r2, [r3, #8]

	while (system_gclk_is_syncing()) {
    130e:	46c0      	nop			; (mov r8, r8)
    1310:	4b09      	ldr	r3, [pc, #36]	; (1338 <system_gclk_gen_set_config+0x110>)
    1312:	4798      	blx	r3
    1314:	1e03      	subs	r3, r0, #0
    1316:	d1fb      	bne.n	1310 <system_gclk_gen_set_config+0xe8>
		/* Wait for synchronization */
	};
	GCLK->GENCTRL.reg = new_genctrl_config | (GCLK->GENCTRL.reg & GCLK_GENCTRL_GENEN);
    1318:	4b0a      	ldr	r3, [pc, #40]	; (1344 <system_gclk_gen_set_config+0x11c>)
    131a:	4a0a      	ldr	r2, [pc, #40]	; (1344 <system_gclk_gen_set_config+0x11c>)
    131c:	6851      	ldr	r1, [r2, #4]
    131e:	2280      	movs	r2, #128	; 0x80
    1320:	0252      	lsls	r2, r2, #9
    1322:	4011      	ands	r1, r2
    1324:	697a      	ldr	r2, [r7, #20]
    1326:	430a      	orrs	r2, r1
    1328:	605a      	str	r2, [r3, #4]

	system_interrupt_leave_critical_section();
    132a:	4b07      	ldr	r3, [pc, #28]	; (1348 <system_gclk_gen_set_config+0x120>)
    132c:	4798      	blx	r3
}
    132e:	46c0      	nop			; (mov r8, r8)
    1330:	46bd      	mov	sp, r7
    1332:	b006      	add	sp, #24
    1334:	bd80      	pop	{r7, pc}
    1336:	46c0      	nop			; (mov r8, r8)
    1338:	000011d9 	.word	0x000011d9
    133c:	000011b1 	.word	0x000011b1
    1340:	40000c08 	.word	0x40000c08
    1344:	40000c00 	.word	0x40000c00
    1348:	000011c5 	.word	0x000011c5

0000134c <system_gclk_gen_enable>:
 *
 * \param[in] generator  Generic Clock Generator index to enable
 */
void system_gclk_gen_enable(
		const uint8_t generator)
{
    134c:	b580      	push	{r7, lr}
    134e:	b082      	sub	sp, #8
    1350:	af00      	add	r7, sp, #0
    1352:	0002      	movs	r2, r0
    1354:	1dfb      	adds	r3, r7, #7
    1356:	701a      	strb	r2, [r3, #0]
	while (system_gclk_is_syncing()) {
    1358:	46c0      	nop			; (mov r8, r8)
    135a:	4b0e      	ldr	r3, [pc, #56]	; (1394 <system_gclk_gen_enable+0x48>)
    135c:	4798      	blx	r3
    135e:	1e03      	subs	r3, r0, #0
    1360:	d1fb      	bne.n	135a <system_gclk_gen_enable+0xe>
		/* Wait for synchronization */
	};

	system_interrupt_enter_critical_section();
    1362:	4b0d      	ldr	r3, [pc, #52]	; (1398 <system_gclk_gen_enable+0x4c>)
    1364:	4798      	blx	r3

	/* Select the requested generator */
	*((uint8_t*)&GCLK->GENCTRL.reg) = generator;
    1366:	4a0d      	ldr	r2, [pc, #52]	; (139c <system_gclk_gen_enable+0x50>)
    1368:	1dfb      	adds	r3, r7, #7
    136a:	781b      	ldrb	r3, [r3, #0]
    136c:	7013      	strb	r3, [r2, #0]
	while (system_gclk_is_syncing()) {
    136e:	46c0      	nop			; (mov r8, r8)
    1370:	4b08      	ldr	r3, [pc, #32]	; (1394 <system_gclk_gen_enable+0x48>)
    1372:	4798      	blx	r3
    1374:	1e03      	subs	r3, r0, #0
    1376:	d1fb      	bne.n	1370 <system_gclk_gen_enable+0x24>
		/* Wait for synchronization */
	};

	/* Enable generator */
	GCLK->GENCTRL.reg |= GCLK_GENCTRL_GENEN;
    1378:	4b09      	ldr	r3, [pc, #36]	; (13a0 <system_gclk_gen_enable+0x54>)
    137a:	4a09      	ldr	r2, [pc, #36]	; (13a0 <system_gclk_gen_enable+0x54>)
    137c:	6852      	ldr	r2, [r2, #4]
    137e:	2180      	movs	r1, #128	; 0x80
    1380:	0249      	lsls	r1, r1, #9
    1382:	430a      	orrs	r2, r1
    1384:	605a      	str	r2, [r3, #4]

	system_interrupt_leave_critical_section();
    1386:	4b07      	ldr	r3, [pc, #28]	; (13a4 <system_gclk_gen_enable+0x58>)
    1388:	4798      	blx	r3
}
    138a:	46c0      	nop			; (mov r8, r8)
    138c:	46bd      	mov	sp, r7
    138e:	b002      	add	sp, #8
    1390:	bd80      	pop	{r7, pc}
    1392:	46c0      	nop			; (mov r8, r8)
    1394:	000011d9 	.word	0x000011d9
    1398:	000011b1 	.word	0x000011b1
    139c:	40000c04 	.word	0x40000c04
    13a0:	40000c00 	.word	0x40000c00
    13a4:	000011c5 	.word	0x000011c5

000013a8 <system_gclk_chan_set_config>:
 *
 */
void system_gclk_chan_set_config(
		const uint8_t channel,
		struct system_gclk_chan_config *const config)
{
    13a8:	b580      	push	{r7, lr}
    13aa:	b084      	sub	sp, #16
    13ac:	af00      	add	r7, sp, #0
    13ae:	0002      	movs	r2, r0
    13b0:	6039      	str	r1, [r7, #0]
    13b2:	1dfb      	adds	r3, r7, #7
    13b4:	701a      	strb	r2, [r3, #0]
	/* Sanity check arguments */
	Assert(config);

	/* Cache the new config to reduce sync requirements */
	uint32_t new_clkctrl_config = (channel << GCLK_CLKCTRL_ID_Pos);
    13b6:	1dfb      	adds	r3, r7, #7
    13b8:	781b      	ldrb	r3, [r3, #0]
    13ba:	60fb      	str	r3, [r7, #12]

	/* Select the desired generic clock generator */
	new_clkctrl_config |= config->source_generator << GCLK_CLKCTRL_GEN_Pos;
    13bc:	683b      	ldr	r3, [r7, #0]
    13be:	781b      	ldrb	r3, [r3, #0]
    13c0:	021b      	lsls	r3, r3, #8
    13c2:	001a      	movs	r2, r3
    13c4:	68fb      	ldr	r3, [r7, #12]
    13c6:	4313      	orrs	r3, r2
    13c8:	60fb      	str	r3, [r7, #12]

	/* Disable generic clock channel */
	system_gclk_chan_disable(channel);
    13ca:	1dfb      	adds	r3, r7, #7
    13cc:	781b      	ldrb	r3, [r3, #0]
    13ce:	0018      	movs	r0, r3
    13d0:	4b04      	ldr	r3, [pc, #16]	; (13e4 <system_gclk_chan_set_config+0x3c>)
    13d2:	4798      	blx	r3

	/* Write the new configuration */
	GCLK->CLKCTRL.reg = new_clkctrl_config;
    13d4:	4b04      	ldr	r3, [pc, #16]	; (13e8 <system_gclk_chan_set_config+0x40>)
    13d6:	68fa      	ldr	r2, [r7, #12]
    13d8:	b292      	uxth	r2, r2
    13da:	805a      	strh	r2, [r3, #2]
}
    13dc:	46c0      	nop			; (mov r8, r8)
    13de:	46bd      	mov	sp, r7
    13e0:	b004      	add	sp, #16
    13e2:	bd80      	pop	{r7, pc}
    13e4:	000013ed 	.word	0x000013ed
    13e8:	40000c00 	.word	0x40000c00

000013ec <system_gclk_chan_disable>:
 *
 * \param[in] channel  Generic Clock channel to disable
 */
void system_gclk_chan_disable(
		const uint8_t channel)
{
    13ec:	b580      	push	{r7, lr}
    13ee:	b084      	sub	sp, #16
    13f0:	af00      	add	r7, sp, #0
    13f2:	0002      	movs	r2, r0
    13f4:	1dfb      	adds	r3, r7, #7
    13f6:	701a      	strb	r2, [r3, #0]
	system_interrupt_enter_critical_section();
    13f8:	4b1c      	ldr	r3, [pc, #112]	; (146c <system_gclk_chan_disable+0x80>)
    13fa:	4798      	blx	r3

	/* Select the requested generator channel */
	*((uint8_t*)&GCLK->CLKCTRL.reg) = channel;
    13fc:	4a1c      	ldr	r2, [pc, #112]	; (1470 <system_gclk_chan_disable+0x84>)
    13fe:	1dfb      	adds	r3, r7, #7
    1400:	781b      	ldrb	r3, [r3, #0]
    1402:	7013      	strb	r3, [r2, #0]

	/* Sanity check WRTLOCK */
	Assert(!GCLK->CLKCTRL.bit.WRTLOCK);

	/* Switch to known-working source so that the channel can be disabled */
	uint32_t prev_gen_id = GCLK->CLKCTRL.bit.GEN;
    1404:	4b1b      	ldr	r3, [pc, #108]	; (1474 <system_gclk_chan_disable+0x88>)
    1406:	885b      	ldrh	r3, [r3, #2]
    1408:	051b      	lsls	r3, r3, #20
    140a:	0f1b      	lsrs	r3, r3, #28
    140c:	b2db      	uxtb	r3, r3
    140e:	60fb      	str	r3, [r7, #12]
	GCLK->CLKCTRL.bit.GEN = 0;
    1410:	4a18      	ldr	r2, [pc, #96]	; (1474 <system_gclk_chan_disable+0x88>)
    1412:	8853      	ldrh	r3, [r2, #2]
    1414:	4918      	ldr	r1, [pc, #96]	; (1478 <system_gclk_chan_disable+0x8c>)
    1416:	400b      	ands	r3, r1
    1418:	8053      	strh	r3, [r2, #2]

	/* Disable the generic clock */
	GCLK->CLKCTRL.reg &= ~GCLK_CLKCTRL_CLKEN;
    141a:	4a16      	ldr	r2, [pc, #88]	; (1474 <system_gclk_chan_disable+0x88>)
    141c:	4b15      	ldr	r3, [pc, #84]	; (1474 <system_gclk_chan_disable+0x88>)
    141e:	885b      	ldrh	r3, [r3, #2]
    1420:	b29b      	uxth	r3, r3
    1422:	4916      	ldr	r1, [pc, #88]	; (147c <system_gclk_chan_disable+0x90>)
    1424:	400b      	ands	r3, r1
    1426:	b29b      	uxth	r3, r3
    1428:	8053      	strh	r3, [r2, #2]
	while (GCLK->CLKCTRL.reg & GCLK_CLKCTRL_CLKEN) {
    142a:	46c0      	nop			; (mov r8, r8)
    142c:	4b11      	ldr	r3, [pc, #68]	; (1474 <system_gclk_chan_disable+0x88>)
    142e:	885b      	ldrh	r3, [r3, #2]
    1430:	b29b      	uxth	r3, r3
    1432:	001a      	movs	r2, r3
    1434:	2380      	movs	r3, #128	; 0x80
    1436:	01db      	lsls	r3, r3, #7
    1438:	4013      	ands	r3, r2
    143a:	d1f7      	bne.n	142c <system_gclk_chan_disable+0x40>
		/* Wait for clock to become disabled */
	}

	/* Restore previous configured clock generator */
	GCLK->CLKCTRL.bit.GEN = prev_gen_id;
    143c:	4a0d      	ldr	r2, [pc, #52]	; (1474 <system_gclk_chan_disable+0x88>)
    143e:	68fb      	ldr	r3, [r7, #12]
    1440:	b2db      	uxtb	r3, r3
    1442:	1c19      	adds	r1, r3, #0
    1444:	230f      	movs	r3, #15
    1446:	400b      	ands	r3, r1
    1448:	b2d9      	uxtb	r1, r3
    144a:	8853      	ldrh	r3, [r2, #2]
    144c:	1c08      	adds	r0, r1, #0
    144e:	210f      	movs	r1, #15
    1450:	4001      	ands	r1, r0
    1452:	0208      	lsls	r0, r1, #8
    1454:	4908      	ldr	r1, [pc, #32]	; (1478 <system_gclk_chan_disable+0x8c>)
    1456:	400b      	ands	r3, r1
    1458:	1c19      	adds	r1, r3, #0
    145a:	1c03      	adds	r3, r0, #0
    145c:	430b      	orrs	r3, r1
    145e:	8053      	strh	r3, [r2, #2]

	system_interrupt_leave_critical_section();
    1460:	4b07      	ldr	r3, [pc, #28]	; (1480 <system_gclk_chan_disable+0x94>)
    1462:	4798      	blx	r3
}
    1464:	46c0      	nop			; (mov r8, r8)
    1466:	46bd      	mov	sp, r7
    1468:	b004      	add	sp, #16
    146a:	bd80      	pop	{r7, pc}
    146c:	000011b1 	.word	0x000011b1
    1470:	40000c02 	.word	0x40000c02
    1474:	40000c00 	.word	0x40000c00
    1478:	fffff0ff 	.word	0xfffff0ff
    147c:	ffffbfff 	.word	0xffffbfff
    1480:	000011c5 	.word	0x000011c5

00001484 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
    1484:	b580      	push	{r7, lr}
    1486:	b082      	sub	sp, #8
    1488:	af00      	add	r7, sp, #0
        uint32_t *pSrc, *pDest;

        /* Initialize the relocate segment */
        pSrc = &_etext;
    148a:	4b2f      	ldr	r3, [pc, #188]	; (1548 <Reset_Handler+0xc4>)
    148c:	607b      	str	r3, [r7, #4]
        pDest = &_srelocate;
    148e:	4b2f      	ldr	r3, [pc, #188]	; (154c <Reset_Handler+0xc8>)
    1490:	603b      	str	r3, [r7, #0]

        if (pSrc != pDest) {
    1492:	687a      	ldr	r2, [r7, #4]
    1494:	683b      	ldr	r3, [r7, #0]
    1496:	429a      	cmp	r2, r3
    1498:	d00c      	beq.n	14b4 <Reset_Handler+0x30>
                for (; pDest < &_erelocate;) {
    149a:	e007      	b.n	14ac <Reset_Handler+0x28>
                        *pDest++ = *pSrc++;
    149c:	683b      	ldr	r3, [r7, #0]
    149e:	1d1a      	adds	r2, r3, #4
    14a0:	603a      	str	r2, [r7, #0]
    14a2:	687a      	ldr	r2, [r7, #4]
    14a4:	1d11      	adds	r1, r2, #4
    14a6:	6079      	str	r1, [r7, #4]
    14a8:	6812      	ldr	r2, [r2, #0]
    14aa:	601a      	str	r2, [r3, #0]
        /* Initialize the relocate segment */
        pSrc = &_etext;
        pDest = &_srelocate;

        if (pSrc != pDest) {
                for (; pDest < &_erelocate;) {
    14ac:	683a      	ldr	r2, [r7, #0]
    14ae:	4b28      	ldr	r3, [pc, #160]	; (1550 <Reset_Handler+0xcc>)
    14b0:	429a      	cmp	r2, r3
    14b2:	d3f3      	bcc.n	149c <Reset_Handler+0x18>
                        *pDest++ = *pSrc++;
                }
        }

        /* Clear the zero segment */
        for (pDest = &_szero; pDest < &_ezero;) {
    14b4:	4b27      	ldr	r3, [pc, #156]	; (1554 <Reset_Handler+0xd0>)
    14b6:	603b      	str	r3, [r7, #0]
    14b8:	e004      	b.n	14c4 <Reset_Handler+0x40>
                *pDest++ = 0;
    14ba:	683b      	ldr	r3, [r7, #0]
    14bc:	1d1a      	adds	r2, r3, #4
    14be:	603a      	str	r2, [r7, #0]
    14c0:	2200      	movs	r2, #0
    14c2:	601a      	str	r2, [r3, #0]
                        *pDest++ = *pSrc++;
                }
        }

        /* Clear the zero segment */
        for (pDest = &_szero; pDest < &_ezero;) {
    14c4:	683a      	ldr	r2, [r7, #0]
    14c6:	4b24      	ldr	r3, [pc, #144]	; (1558 <Reset_Handler+0xd4>)
    14c8:	429a      	cmp	r2, r3
    14ca:	d3f6      	bcc.n	14ba <Reset_Handler+0x36>
                *pDest++ = 0;
        }

        /* Set the vector table base address */
        pSrc = (uint32_t *) & _sfixed;
    14cc:	4b23      	ldr	r3, [pc, #140]	; (155c <Reset_Handler+0xd8>)
    14ce:	607b      	str	r3, [r7, #4]
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    14d0:	4b23      	ldr	r3, [pc, #140]	; (1560 <Reset_Handler+0xdc>)
    14d2:	687a      	ldr	r2, [r7, #4]
    14d4:	21ff      	movs	r1, #255	; 0xff
    14d6:	438a      	bics	r2, r1
    14d8:	609a      	str	r2, [r3, #8]

        /* Change default QOS values to have the best performance and correct USB behaviour */
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
    14da:	4a22      	ldr	r2, [pc, #136]	; (1564 <Reset_Handler+0xe0>)
    14dc:	2390      	movs	r3, #144	; 0x90
    14de:	005b      	lsls	r3, r3, #1
    14e0:	2102      	movs	r1, #2
    14e2:	50d1      	str	r1, [r2, r3]
#if defined(ID_USB)
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
    14e4:	4a20      	ldr	r2, [pc, #128]	; (1568 <Reset_Handler+0xe4>)
    14e6:	78d3      	ldrb	r3, [r2, #3]
    14e8:	2103      	movs	r1, #3
    14ea:	438b      	bics	r3, r1
    14ec:	1c19      	adds	r1, r3, #0
    14ee:	2302      	movs	r3, #2
    14f0:	430b      	orrs	r3, r1
    14f2:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
    14f4:	4a1c      	ldr	r2, [pc, #112]	; (1568 <Reset_Handler+0xe4>)
    14f6:	78d3      	ldrb	r3, [r2, #3]
    14f8:	210c      	movs	r1, #12
    14fa:	438b      	bics	r3, r1
    14fc:	1c19      	adds	r1, r3, #0
    14fe:	2308      	movs	r3, #8
    1500:	430b      	orrs	r3, r1
    1502:	70d3      	strb	r3, [r2, #3]
#endif
        DMAC->QOSCTRL.bit.DQOS = 2;
    1504:	4a19      	ldr	r2, [pc, #100]	; (156c <Reset_Handler+0xe8>)
    1506:	7b93      	ldrb	r3, [r2, #14]
    1508:	2130      	movs	r1, #48	; 0x30
    150a:	438b      	bics	r3, r1
    150c:	1c19      	adds	r1, r3, #0
    150e:	2320      	movs	r3, #32
    1510:	430b      	orrs	r3, r1
    1512:	7393      	strb	r3, [r2, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
    1514:	4a15      	ldr	r2, [pc, #84]	; (156c <Reset_Handler+0xe8>)
    1516:	7b93      	ldrb	r3, [r2, #14]
    1518:	210c      	movs	r1, #12
    151a:	438b      	bics	r3, r1
    151c:	1c19      	adds	r1, r3, #0
    151e:	2308      	movs	r3, #8
    1520:	430b      	orrs	r3, r1
    1522:	7393      	strb	r3, [r2, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
    1524:	4a11      	ldr	r2, [pc, #68]	; (156c <Reset_Handler+0xe8>)
    1526:	7b93      	ldrb	r3, [r2, #14]
    1528:	2103      	movs	r1, #3
    152a:	438b      	bics	r3, r1
    152c:	1c19      	adds	r1, r3, #0
    152e:	2302      	movs	r3, #2
    1530:	430b      	orrs	r3, r1
    1532:	7393      	strb	r3, [r2, #14]

        /* Overwriting the default value of the NVMCTRL.CTRLB.MANW bit (errata reference 13134) */
        NVMCTRL->CTRLB.bit.MANW = 1;
    1534:	4a0e      	ldr	r2, [pc, #56]	; (1570 <Reset_Handler+0xec>)
    1536:	6853      	ldr	r3, [r2, #4]
    1538:	2180      	movs	r1, #128	; 0x80
    153a:	430b      	orrs	r3, r1
    153c:	6053      	str	r3, [r2, #4]

        /* Initialize the C library */
        __libc_init_array();
    153e:	4b0d      	ldr	r3, [pc, #52]	; (1574 <Reset_Handler+0xf0>)
    1540:	4798      	blx	r3

        /* Branch to main function */
        main();
    1542:	4b0d      	ldr	r3, [pc, #52]	; (1578 <Reset_Handler+0xf4>)
    1544:	4798      	blx	r3

        /* Infinite loop */
        while (1);
    1546:	e7fe      	b.n	1546 <Reset_Handler+0xc2>
    1548:	000085fc 	.word	0x000085fc
    154c:	20000000 	.word	0x20000000
    1550:	20000448 	.word	0x20000448
    1554:	20000448 	.word	0x20000448
    1558:	20000948 	.word	0x20000948
    155c:	00000000 	.word	0x00000000
    1560:	e000ed00 	.word	0xe000ed00
    1564:	41007000 	.word	0x41007000
    1568:	41005000 	.word	0x41005000
    156c:	41004800 	.word	0x41004800
    1570:	41004000 	.word	0x41004000
    1574:	00002785 	.word	0x00002785
    1578:	00001dbd 	.word	0x00001dbd

0000157c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    157c:	b580      	push	{r7, lr}
    157e:	af00      	add	r7, sp, #0
        while (1) {
        }
    1580:	e7fe      	b.n	1580 <Dummy_Handler+0x4>
    1582:	46c0      	nop			; (mov r8, r8)

00001584 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
    1584:	b580      	push	{r7, lr}
    1586:	b084      	sub	sp, #16
    1588:	af00      	add	r7, sp, #0
    158a:	6078      	str	r0, [r7, #4]
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;

	if (heap == NULL) {
    158c:	4b0a      	ldr	r3, [pc, #40]	; (15b8 <_sbrk+0x34>)
    158e:	681b      	ldr	r3, [r3, #0]
    1590:	2b00      	cmp	r3, #0
    1592:	d102      	bne.n	159a <_sbrk+0x16>
		heap = (unsigned char *)&_end;
    1594:	4b08      	ldr	r3, [pc, #32]	; (15b8 <_sbrk+0x34>)
    1596:	4a09      	ldr	r2, [pc, #36]	; (15bc <_sbrk+0x38>)
    1598:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
    159a:	4b07      	ldr	r3, [pc, #28]	; (15b8 <_sbrk+0x34>)
    159c:	681b      	ldr	r3, [r3, #0]
    159e:	60fb      	str	r3, [r7, #12]

	heap += incr;
    15a0:	4b05      	ldr	r3, [pc, #20]	; (15b8 <_sbrk+0x34>)
    15a2:	681a      	ldr	r2, [r3, #0]
    15a4:	687b      	ldr	r3, [r7, #4]
    15a6:	18d2      	adds	r2, r2, r3
    15a8:	4b03      	ldr	r3, [pc, #12]	; (15b8 <_sbrk+0x34>)
    15aa:	601a      	str	r2, [r3, #0]

	return (caddr_t) prev_heap;
    15ac:	68fb      	ldr	r3, [r7, #12]
}
    15ae:	0018      	movs	r0, r3
    15b0:	46bd      	mov	sp, r7
    15b2:	b004      	add	sp, #16
    15b4:	bd80      	pop	{r7, pc}
    15b6:	46c0      	nop			; (mov r8, r8)
    15b8:	20000484 	.word	0x20000484
    15bc:	20002948 	.word	0x20002948

000015c0 <system_gclk_gen_get_config_defaults>:
 *
 * \param[out] config  Configuration structure to initialize to default values
 */
static inline void system_gclk_gen_get_config_defaults(
		struct system_gclk_gen_config *const config)
{
    15c0:	b580      	push	{r7, lr}
    15c2:	b082      	sub	sp, #8
    15c4:	af00      	add	r7, sp, #0
    15c6:	6078      	str	r0, [r7, #4]
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->division_factor    = 1;
    15c8:	687b      	ldr	r3, [r7, #4]
    15ca:	2201      	movs	r2, #1
    15cc:	605a      	str	r2, [r3, #4]
	config->high_when_disabled = false;
    15ce:	687b      	ldr	r3, [r7, #4]
    15d0:	2200      	movs	r2, #0
    15d2:	705a      	strb	r2, [r3, #1]
#if SAML21 || SAML22  || SAMR30
	config->source_clock       = GCLK_SOURCE_OSC16M;
#elif (SAMC20) || (SAMC21)
	config->source_clock       = GCLK_SOURCE_OSC48M;
#else
	config->source_clock       = GCLK_SOURCE_OSC8M;
    15d4:	687b      	ldr	r3, [r7, #4]
    15d6:	2206      	movs	r2, #6
    15d8:	701a      	strb	r2, [r3, #0]
#endif
	config->run_in_standby     = false;
    15da:	687b      	ldr	r3, [r7, #4]
    15dc:	2200      	movs	r2, #0
    15de:	721a      	strb	r2, [r3, #8]
	config->output_enable      = false;
    15e0:	687b      	ldr	r3, [r7, #4]
    15e2:	2200      	movs	r2, #0
    15e4:	725a      	strb	r2, [r3, #9]
}
    15e6:	46c0      	nop			; (mov r8, r8)
    15e8:	46bd      	mov	sp, r7
    15ea:	b002      	add	sp, #8
    15ec:	bd80      	pop	{r7, pc}
    15ee:	46c0      	nop			; (mov r8, r8)

000015f0 <system_clock_source_dfll_get_config_defaults>:
 *
 * \param[out] config  Configuration structure to fill with default values
 */
static inline void system_clock_source_dfll_get_config_defaults(
		struct system_clock_source_dfll_config *const config)
{
    15f0:	b580      	push	{r7, lr}
    15f2:	b082      	sub	sp, #8
    15f4:	af00      	add	r7, sp, #0
    15f6:	6078      	str	r0, [r7, #4]
	Assert(config);

	config->loop_mode       = SYSTEM_CLOCK_DFLL_LOOP_MODE_OPEN;
    15f8:	687b      	ldr	r3, [r7, #4]
    15fa:	2200      	movs	r2, #0
    15fc:	701a      	strb	r2, [r3, #0]
	config->quick_lock      = SYSTEM_CLOCK_DFLL_QUICK_LOCK_ENABLE;
    15fe:	687b      	ldr	r3, [r7, #4]
    1600:	2200      	movs	r2, #0
    1602:	805a      	strh	r2, [r3, #2]
	config->chill_cycle     = SYSTEM_CLOCK_DFLL_CHILL_CYCLE_ENABLE;
    1604:	687b      	ldr	r3, [r7, #4]
    1606:	2200      	movs	r2, #0
    1608:	809a      	strh	r2, [r3, #4]
	config->wakeup_lock     = SYSTEM_CLOCK_DFLL_WAKEUP_LOCK_KEEP;
    160a:	687b      	ldr	r3, [r7, #4]
    160c:	2200      	movs	r2, #0
    160e:	719a      	strb	r2, [r3, #6]
	config->stable_tracking = SYSTEM_CLOCK_DFLL_STABLE_TRACKING_TRACK_AFTER_LOCK;
    1610:	687b      	ldr	r3, [r7, #4]
    1612:	2200      	movs	r2, #0
    1614:	71da      	strb	r2, [r3, #7]
	config->on_demand       = true;
    1616:	687b      	ldr	r3, [r7, #4]
    1618:	2201      	movs	r2, #1
    161a:	705a      	strb	r2, [r3, #1]

	/* Open loop mode calibration value */
	config->coarse_value    = 0x1f / 4; /* Midpoint */
    161c:	687b      	ldr	r3, [r7, #4]
    161e:	2207      	movs	r2, #7
    1620:	721a      	strb	r2, [r3, #8]
	config->fine_value      = 0xff / 4; /* Midpoint */
    1622:	687b      	ldr	r3, [r7, #4]
    1624:	223f      	movs	r2, #63	; 0x3f
    1626:	815a      	strh	r2, [r3, #10]

	/* Closed loop mode */
	config->coarse_max_step = 1;
    1628:	687b      	ldr	r3, [r7, #4]
    162a:	2201      	movs	r2, #1
    162c:	731a      	strb	r2, [r3, #12]
	config->fine_max_step   = 1;
    162e:	687b      	ldr	r3, [r7, #4]
    1630:	2201      	movs	r2, #1
    1632:	81da      	strh	r2, [r3, #14]
	config->multiply_factor = 6; /* Multiply 8MHz by 6 to get 48MHz */
    1634:	687b      	ldr	r3, [r7, #4]
    1636:	2206      	movs	r2, #6
    1638:	821a      	strh	r2, [r3, #16]
}
    163a:	46c0      	nop			; (mov r8, r8)
    163c:	46bd      	mov	sp, r7
    163e:	b002      	add	sp, #8
    1640:	bd80      	pop	{r7, pc}
    1642:	46c0      	nop			; (mov r8, r8)

00001644 <system_apb_clock_set_mask>:
 * \retval STATUS_OK               The clock mask was set successfully
 */
static inline enum status_code system_apb_clock_set_mask(
		const enum system_clock_apb_bus bus,
		const uint32_t mask)
{
    1644:	b580      	push	{r7, lr}
    1646:	b082      	sub	sp, #8
    1648:	af00      	add	r7, sp, #0
    164a:	0002      	movs	r2, r0
    164c:	6039      	str	r1, [r7, #0]
    164e:	1dfb      	adds	r3, r7, #7
    1650:	701a      	strb	r2, [r3, #0]
	switch (bus) {
    1652:	1dfb      	adds	r3, r7, #7
    1654:	781b      	ldrb	r3, [r3, #0]
    1656:	2b01      	cmp	r3, #1
    1658:	d00a      	beq.n	1670 <system_apb_clock_set_mask+0x2c>
    165a:	2b02      	cmp	r3, #2
    165c:	d00f      	beq.n	167e <system_apb_clock_set_mask+0x3a>
    165e:	2b00      	cmp	r3, #0
    1660:	d114      	bne.n	168c <system_apb_clock_set_mask+0x48>
		case SYSTEM_CLOCK_APB_APBA:
			PM->APBAMASK.reg |= mask;
    1662:	4b0e      	ldr	r3, [pc, #56]	; (169c <system_apb_clock_set_mask+0x58>)
    1664:	4a0d      	ldr	r2, [pc, #52]	; (169c <system_apb_clock_set_mask+0x58>)
    1666:	6991      	ldr	r1, [r2, #24]
    1668:	683a      	ldr	r2, [r7, #0]
    166a:	430a      	orrs	r2, r1
    166c:	619a      	str	r2, [r3, #24]
			break;
    166e:	e00f      	b.n	1690 <system_apb_clock_set_mask+0x4c>

		case SYSTEM_CLOCK_APB_APBB:
			PM->APBBMASK.reg |= mask;
    1670:	4b0a      	ldr	r3, [pc, #40]	; (169c <system_apb_clock_set_mask+0x58>)
    1672:	4a0a      	ldr	r2, [pc, #40]	; (169c <system_apb_clock_set_mask+0x58>)
    1674:	69d1      	ldr	r1, [r2, #28]
    1676:	683a      	ldr	r2, [r7, #0]
    1678:	430a      	orrs	r2, r1
    167a:	61da      	str	r2, [r3, #28]
			break;
    167c:	e008      	b.n	1690 <system_apb_clock_set_mask+0x4c>

		case SYSTEM_CLOCK_APB_APBC:
			PM->APBCMASK.reg |= mask;
    167e:	4b07      	ldr	r3, [pc, #28]	; (169c <system_apb_clock_set_mask+0x58>)
    1680:	4a06      	ldr	r2, [pc, #24]	; (169c <system_apb_clock_set_mask+0x58>)
    1682:	6a11      	ldr	r1, [r2, #32]
    1684:	683a      	ldr	r2, [r7, #0]
    1686:	430a      	orrs	r2, r1
    1688:	621a      	str	r2, [r3, #32]
			break;
    168a:	e001      	b.n	1690 <system_apb_clock_set_mask+0x4c>

		default:
			Assert(false);
			return STATUS_ERR_INVALID_ARG;
    168c:	2317      	movs	r3, #23
    168e:	e000      	b.n	1692 <system_apb_clock_set_mask+0x4e>

	}

	return STATUS_OK;
    1690:	2300      	movs	r3, #0
}
    1692:	0018      	movs	r0, r3
    1694:	46bd      	mov	sp, r7
    1696:	b002      	add	sp, #8
    1698:	bd80      	pop	{r7, pc}
    169a:	46c0      	nop			; (mov r8, r8)
    169c:	40000400 	.word	0x40000400

000016a0 <system_flash_set_waitstates>:
 * can be found in the electrical characteristics of the device.
 *
 * \param[in] wait_states Number of wait states to use for internal flash
 */
static inline void system_flash_set_waitstates(uint8_t wait_states)
{
    16a0:	b580      	push	{r7, lr}
    16a2:	b082      	sub	sp, #8
    16a4:	af00      	add	r7, sp, #0
    16a6:	0002      	movs	r2, r0
    16a8:	1dfb      	adds	r3, r7, #7
    16aa:	701a      	strb	r2, [r3, #0]
	Assert(NVMCTRL_CTRLB_RWS((uint32_t)wait_states) ==
			((uint32_t)wait_states << NVMCTRL_CTRLB_RWS_Pos));

	NVMCTRL->CTRLB.bit.RWS = wait_states;
    16ac:	4a08      	ldr	r2, [pc, #32]	; (16d0 <system_flash_set_waitstates+0x30>)
    16ae:	1dfb      	adds	r3, r7, #7
    16b0:	781b      	ldrb	r3, [r3, #0]
    16b2:	210f      	movs	r1, #15
    16b4:	400b      	ands	r3, r1
    16b6:	b2d9      	uxtb	r1, r3
    16b8:	6853      	ldr	r3, [r2, #4]
    16ba:	200f      	movs	r0, #15
    16bc:	4001      	ands	r1, r0
    16be:	0049      	lsls	r1, r1, #1
    16c0:	201e      	movs	r0, #30
    16c2:	4383      	bics	r3, r0
    16c4:	430b      	orrs	r3, r1
    16c6:	6053      	str	r3, [r2, #4]
}
    16c8:	46c0      	nop			; (mov r8, r8)
    16ca:	46bd      	mov	sp, r7
    16cc:	b002      	add	sp, #8
    16ce:	bd80      	pop	{r7, pc}
    16d0:	41004000 	.word	0x41004000

000016d4 <UserWait>:
	{ GPIO_ENDMARK,0,0,0},
};


volatile UserWait( unsigned long time )
{
    16d4:	b580      	push	{r7, lr}
    16d6:	b082      	sub	sp, #8
    16d8:	af00      	add	r7, sp, #0
    16da:	6078      	str	r0, [r7, #4]
	while( time-- )
    16dc:	46c0      	nop			; (mov r8, r8)
    16de:	687b      	ldr	r3, [r7, #4]
    16e0:	1e5a      	subs	r2, r3, #1
    16e2:	607a      	str	r2, [r7, #4]
    16e4:	2b00      	cmp	r3, #0
    16e6:	d1fa      	bne.n	16de <UserWait+0xa>
	{
		
	};
}
    16e8:	46c0      	nop			; (mov r8, r8)
    16ea:	0018      	movs	r0, r3
    16ec:	46bd      	mov	sp, r7
    16ee:	b002      	add	sp, #8
    16f0:	bd80      	pop	{r7, pc}
    16f2:	46c0      	nop			; (mov r8, r8)

000016f4 <configure_dfll_open_loop>:


void configure_dfll_open_loop(void)
{
    16f4:	b580      	push	{r7, lr}
    16f6:	b086      	sub	sp, #24
    16f8:	af00      	add	r7, sp, #0
    struct system_clock_source_dfll_config config_dfll;
    system_clock_source_dfll_get_config_defaults(&config_dfll);
    16fa:	1d3b      	adds	r3, r7, #4
    16fc:	0018      	movs	r0, r3
    16fe:	4b05      	ldr	r3, [pc, #20]	; (1714 <configure_dfll_open_loop+0x20>)
    1700:	4798      	blx	r3
    system_clock_source_dfll_set_config(&config_dfll);
    1702:	1d3b      	adds	r3, r7, #4
    1704:	0018      	movs	r0, r3
    1706:	4b04      	ldr	r3, [pc, #16]	; (1718 <configure_dfll_open_loop+0x24>)
    1708:	4798      	blx	r3
}
    170a:	46c0      	nop			; (mov r8, r8)
    170c:	46bd      	mov	sp, r7
    170e:	b006      	add	sp, #24
    1710:	bd80      	pop	{r7, pc}
    1712:	46c0      	nop			; (mov r8, r8)
    1714:	000015f1 	.word	0x000015f1
    1718:	00000ecd 	.word	0x00000ecd

0000171c <ClockInitTest>:

void ClockInitTest(void)
{
    171c:	b590      	push	{r4, r7, lr}
    171e:	b085      	sub	sp, #20
    1720:	af00      	add	r7, sp, #0
	/* Enable the external 32KHz oscillator */
	enum status_code osc32k_status = system_clock_source_enable(SYSTEM_CLOCK_SOURCE_XOSC32K);
    1722:	230f      	movs	r3, #15
    1724:	18fc      	adds	r4, r7, r3
    1726:	2005      	movs	r0, #5
    1728:	4b11      	ldr	r3, [pc, #68]	; (1770 <ClockInitTest+0x54>)
    172a:	4798      	blx	r3
    172c:	0003      	movs	r3, r0
    172e:	7023      	strb	r3, [r4, #0]
	{
	/* Error enabling the clock source */
	}

	/* Configure the DFLL in open loop mode using default values */
	configure_dfll_open_loop();
    1730:	4b10      	ldr	r3, [pc, #64]	; (1774 <ClockInitTest+0x58>)
    1732:	4798      	blx	r3
	/* Enable the DFLL oscillator */

	enum status_code dfll_status = system_clock_source_enable(SYSTEM_CLOCK_SOURCE_DFLL);
    1734:	230e      	movs	r3, #14
    1736:	18fc      	adds	r4, r7, r3
    1738:	2007      	movs	r0, #7
    173a:	4b0d      	ldr	r3, [pc, #52]	; (1770 <ClockInitTest+0x54>)
    173c:	4798      	blx	r3
    173e:	0003      	movs	r3, r0
    1740:	7023      	strb	r3, [r4, #0]
	if(dfll_status != STATUS_OK)
	{
	/* Error enabling the clock source */
	}
	/* Configure flash wait states before switching to high frequency clock */
	system_flash_set_waitstates(2);
    1742:	2002      	movs	r0, #2
    1744:	4b0c      	ldr	r3, [pc, #48]	; (1778 <ClockInitTest+0x5c>)
    1746:	4798      	blx	r3
	/* Change system clock to DFLL */

	struct system_gclk_gen_config config_gclock_gen;

	system_gclk_gen_get_config_defaults(&config_gclock_gen);
    1748:	003b      	movs	r3, r7
    174a:	0018      	movs	r0, r3
    174c:	4b0b      	ldr	r3, [pc, #44]	; (177c <ClockInitTest+0x60>)
    174e:	4798      	blx	r3
	config_gclock_gen.source_clock    = SYSTEM_CLOCK_SOURCE_DFLL;
    1750:	003b      	movs	r3, r7
    1752:	2207      	movs	r2, #7
    1754:	701a      	strb	r2, [r3, #0]
	config_gclock_gen.division_factor = 1;
    1756:	003b      	movs	r3, r7
    1758:	2201      	movs	r2, #1
    175a:	605a      	str	r2, [r3, #4]
	system_gclk_gen_set_config(GCLK_GENERATOR_0, &config_gclock_gen);
    175c:	003b      	movs	r3, r7
    175e:	0019      	movs	r1, r3
    1760:	2000      	movs	r0, #0
    1762:	4b07      	ldr	r3, [pc, #28]	; (1780 <ClockInitTest+0x64>)
    1764:	4798      	blx	r3
}
    1766:	46c0      	nop			; (mov r8, r8)
    1768:	46bd      	mov	sp, r7
    176a:	b005      	add	sp, #20
    176c:	bd90      	pop	{r4, r7, pc}
    176e:	46c0      	nop			; (mov r8, r8)
    1770:	00000f9d 	.word	0x00000f9d
    1774:	000016f5 	.word	0x000016f5
    1778:	000016a1 	.word	0x000016a1
    177c:	000015c1 	.word	0x000015c1
    1780:	00001229 	.word	0x00001229

00001784 <AnimetionImageinit>:
};



void AnimetionImageinit( struct AnimeImage *img, unsigned long image_offset, unsigned short wx, unsigned short wy, unsigned short depth )
{
    1784:	b580      	push	{r7, lr}
    1786:	b086      	sub	sp, #24
    1788:	af00      	add	r7, sp, #0
    178a:	60f8      	str	r0, [r7, #12]
    178c:	60b9      	str	r1, [r7, #8]
    178e:	0019      	movs	r1, r3
    1790:	1dbb      	adds	r3, r7, #6
    1792:	801a      	strh	r2, [r3, #0]
    1794:	1d3b      	adds	r3, r7, #4
    1796:	1c0a      	adds	r2, r1, #0
    1798:	801a      	strh	r2, [r3, #0]
	if( img != NULL )
    179a:	68fb      	ldr	r3, [r7, #12]
    179c:	2b00      	cmp	r3, #0
    179e:	d054      	beq.n	184a <AnimetionImageinit+0xc6>
	{
		img->ImageBase = image_offset;
    17a0:	68fb      	ldr	r3, [r7, #12]
    17a2:	68ba      	ldr	r2, [r7, #8]
    17a4:	601a      	str	r2, [r3, #0]
		img->IMAGE_SIZE_X = wx;
    17a6:	68fb      	ldr	r3, [r7, #12]
    17a8:	1dba      	adds	r2, r7, #6
    17aa:	8812      	ldrh	r2, [r2, #0]
    17ac:	809a      	strh	r2, [r3, #4]
		img->IMAGE_SIZE_Y = wy;
    17ae:	68fb      	ldr	r3, [r7, #12]
    17b0:	1d3a      	adds	r2, r7, #4
    17b2:	8812      	ldrh	r2, [r2, #0]
    17b4:	80da      	strh	r2, [r3, #6]
		img->COLOR_DPTH = depth;
    17b6:	68fb      	ldr	r3, [r7, #12]
    17b8:	2220      	movs	r2, #32
    17ba:	18ba      	adds	r2, r7, r2
    17bc:	8812      	ldrh	r2, [r2, #0]
    17be:	811a      	strh	r2, [r3, #8]
		for( int i=0;i<32;i++ )
    17c0:	2300      	movs	r3, #0
    17c2:	617b      	str	r3, [r7, #20]
    17c4:	e03e      	b.n	1844 <AnimetionImageinit+0xc0>
		{
			img->Entry[i].CHARACTOR_SIZE_X = 0;
    17c6:	68f9      	ldr	r1, [r7, #12]
    17c8:	697a      	ldr	r2, [r7, #20]
    17ca:	0013      	movs	r3, r2
    17cc:	009b      	lsls	r3, r3, #2
    17ce:	189b      	adds	r3, r3, r2
    17d0:	009b      	lsls	r3, r3, #2
    17d2:	18cb      	adds	r3, r1, r3
    17d4:	330c      	adds	r3, #12
    17d6:	2200      	movs	r2, #0
    17d8:	801a      	strh	r2, [r3, #0]
			img->Entry[i].CHARACTOR_SIZE_Y = 0;
    17da:	68f9      	ldr	r1, [r7, #12]
    17dc:	697a      	ldr	r2, [r7, #20]
    17de:	0013      	movs	r3, r2
    17e0:	009b      	lsls	r3, r3, #2
    17e2:	189b      	adds	r3, r3, r2
    17e4:	009b      	lsls	r3, r3, #2
    17e6:	18cb      	adds	r3, r1, r3
    17e8:	330e      	adds	r3, #14
    17ea:	2200      	movs	r2, #0
    17ec:	801a      	strh	r2, [r3, #0]
			img->Entry[i].table = NULL;
    17ee:	68f9      	ldr	r1, [r7, #12]
    17f0:	697a      	ldr	r2, [r7, #20]
    17f2:	0013      	movs	r3, r2
    17f4:	009b      	lsls	r3, r3, #2
    17f6:	189b      	adds	r3, r3, r2
    17f8:	009b      	lsls	r3, r3, #2
    17fa:	18cb      	adds	r3, r1, r3
    17fc:	3310      	adds	r3, #16
    17fe:	2200      	movs	r2, #0
    1800:	601a      	str	r2, [r3, #0]
			img->Entry[i].Now.ImageOffset = 0;
    1802:	68f9      	ldr	r1, [r7, #12]
    1804:	697a      	ldr	r2, [r7, #20]
    1806:	0013      	movs	r3, r2
    1808:	009b      	lsls	r3, r3, #2
    180a:	189b      	adds	r3, r3, r2
    180c:	009b      	lsls	r3, r3, #2
    180e:	18cb      	adds	r3, r1, r3
    1810:	3314      	adds	r3, #20
    1812:	2200      	movs	r2, #0
    1814:	601a      	str	r2, [r3, #0]
			img->Entry[i].Now.Time = 0;
    1816:	68f9      	ldr	r1, [r7, #12]
    1818:	697a      	ldr	r2, [r7, #20]
    181a:	0013      	movs	r3, r2
    181c:	009b      	lsls	r3, r3, #2
    181e:	189b      	adds	r3, r3, r2
    1820:	009b      	lsls	r3, r3, #2
    1822:	18cb      	adds	r3, r1, r3
    1824:	3318      	adds	r3, #24
    1826:	2200      	movs	r2, #0
    1828:	801a      	strh	r2, [r3, #0]
			img->Entry[i].Now.next = NULL;
    182a:	68f9      	ldr	r1, [r7, #12]
    182c:	697a      	ldr	r2, [r7, #20]
    182e:	0013      	movs	r3, r2
    1830:	009b      	lsls	r3, r3, #2
    1832:	189b      	adds	r3, r3, r2
    1834:	009b      	lsls	r3, r3, #2
    1836:	18cb      	adds	r3, r1, r3
    1838:	331c      	adds	r3, #28
    183a:	2200      	movs	r2, #0
    183c:	601a      	str	r2, [r3, #0]
	{
		img->ImageBase = image_offset;
		img->IMAGE_SIZE_X = wx;
		img->IMAGE_SIZE_Y = wy;
		img->COLOR_DPTH = depth;
		for( int i=0;i<32;i++ )
    183e:	697b      	ldr	r3, [r7, #20]
    1840:	3301      	adds	r3, #1
    1842:	617b      	str	r3, [r7, #20]
    1844:	697b      	ldr	r3, [r7, #20]
    1846:	2b1f      	cmp	r3, #31
    1848:	ddbd      	ble.n	17c6 <AnimetionImageinit+0x42>
			img->Entry[i].Now.ImageOffset = 0;
			img->Entry[i].Now.Time = 0;
			img->Entry[i].Now.next = NULL;
		}
	}
}
    184a:	46c0      	nop			; (mov r8, r8)
    184c:	46bd      	mov	sp, r7
    184e:	b006      	add	sp, #24
    1850:	bd80      	pop	{r7, pc}
    1852:	46c0      	nop			; (mov r8, r8)

00001854 <AnimetionAlloc>:

int AnimetionAlloc( struct AnimeImage *img, struct AnimeEntry *entry )
{
    1854:	b590      	push	{r4, r7, lr}
    1856:	b087      	sub	sp, #28
    1858:	af00      	add	r7, sp, #0
    185a:	6078      	str	r0, [r7, #4]
    185c:	6039      	str	r1, [r7, #0]
	int i,flag,id;

	i = 0;
    185e:	2300      	movs	r3, #0
    1860:	617b      	str	r3, [r7, #20]
	flag = 1;
    1862:	2301      	movs	r3, #1
    1864:	613b      	str	r3, [r7, #16]
	id = 0;
    1866:	2300      	movs	r3, #0
    1868:	60fb      	str	r3, [r7, #12]

	while( flag == 1 && i < 32 )
    186a:	e044      	b.n	18f6 <AnimetionAlloc+0xa2>
	{
		if( img->Entry[i].table == NULL )
    186c:	6879      	ldr	r1, [r7, #4]
    186e:	697a      	ldr	r2, [r7, #20]
    1870:	0013      	movs	r3, r2
    1872:	009b      	lsls	r3, r3, #2
    1874:	189b      	adds	r3, r3, r2
    1876:	009b      	lsls	r3, r3, #2
    1878:	18cb      	adds	r3, r1, r3
    187a:	3310      	adds	r3, #16
    187c:	681b      	ldr	r3, [r3, #0]
    187e:	2b00      	cmp	r3, #0
    1880:	d136      	bne.n	18f0 <AnimetionAlloc+0x9c>
		{
			img->Entry[i].CHARACTOR_SIZE_X = entry->CHARACTOR_SIZE_X;
    1882:	683b      	ldr	r3, [r7, #0]
    1884:	8818      	ldrh	r0, [r3, #0]
    1886:	6879      	ldr	r1, [r7, #4]
    1888:	697a      	ldr	r2, [r7, #20]
    188a:	0013      	movs	r3, r2
    188c:	009b      	lsls	r3, r3, #2
    188e:	189b      	adds	r3, r3, r2
    1890:	009b      	lsls	r3, r3, #2
    1892:	18cb      	adds	r3, r1, r3
    1894:	330c      	adds	r3, #12
    1896:	1c02      	adds	r2, r0, #0
    1898:	801a      	strh	r2, [r3, #0]
			img->Entry[i].CHARACTOR_SIZE_Y = entry->CHARACTOR_SIZE_Y;
    189a:	683b      	ldr	r3, [r7, #0]
    189c:	8858      	ldrh	r0, [r3, #2]
    189e:	6879      	ldr	r1, [r7, #4]
    18a0:	697a      	ldr	r2, [r7, #20]
    18a2:	0013      	movs	r3, r2
    18a4:	009b      	lsls	r3, r3, #2
    18a6:	189b      	adds	r3, r3, r2
    18a8:	009b      	lsls	r3, r3, #2
    18aa:	18cb      	adds	r3, r1, r3
    18ac:	330e      	adds	r3, #14
    18ae:	1c02      	adds	r2, r0, #0
    18b0:	801a      	strh	r2, [r3, #0]
			img->Entry[i].table = entry->table;
    18b2:	683b      	ldr	r3, [r7, #0]
    18b4:	6859      	ldr	r1, [r3, #4]
    18b6:	6878      	ldr	r0, [r7, #4]
    18b8:	697a      	ldr	r2, [r7, #20]
    18ba:	0013      	movs	r3, r2
    18bc:	009b      	lsls	r3, r3, #2
    18be:	189b      	adds	r3, r3, r2
    18c0:	009b      	lsls	r3, r3, #2
    18c2:	18c3      	adds	r3, r0, r3
    18c4:	3310      	adds	r3, #16
    18c6:	6019      	str	r1, [r3, #0]
			img->Entry[i].Now = *entry->table;
    18c8:	683b      	ldr	r3, [r7, #0]
    18ca:	685c      	ldr	r4, [r3, #4]
    18cc:	6879      	ldr	r1, [r7, #4]
    18ce:	697a      	ldr	r2, [r7, #20]
    18d0:	2010      	movs	r0, #16
    18d2:	0013      	movs	r3, r2
    18d4:	009b      	lsls	r3, r3, #2
    18d6:	189b      	adds	r3, r3, r2
    18d8:	009b      	lsls	r3, r3, #2
    18da:	18cb      	adds	r3, r1, r3
    18dc:	181b      	adds	r3, r3, r0
    18de:	3304      	adds	r3, #4
    18e0:	0022      	movs	r2, r4
    18e2:	ca13      	ldmia	r2!, {r0, r1, r4}
    18e4:	c313      	stmia	r3!, {r0, r1, r4}
			id = i;
    18e6:	697b      	ldr	r3, [r7, #20]
    18e8:	60fb      	str	r3, [r7, #12]
			flag = 0;
    18ea:	2300      	movs	r3, #0
    18ec:	613b      	str	r3, [r7, #16]
			continue;
    18ee:	e002      	b.n	18f6 <AnimetionAlloc+0xa2>
		}
		i++;
    18f0:	697b      	ldr	r3, [r7, #20]
    18f2:	3301      	adds	r3, #1
    18f4:	617b      	str	r3, [r7, #20]

	i = 0;
	flag = 1;
	id = 0;

	while( flag == 1 && i < 32 )
    18f6:	693b      	ldr	r3, [r7, #16]
    18f8:	2b01      	cmp	r3, #1
    18fa:	d102      	bne.n	1902 <AnimetionAlloc+0xae>
    18fc:	697b      	ldr	r3, [r7, #20]
    18fe:	2b1f      	cmp	r3, #31
    1900:	ddb4      	ble.n	186c <AnimetionAlloc+0x18>
			continue;
		}
		i++;
	};

	if( flag == 0 )
    1902:	693b      	ldr	r3, [r7, #16]
    1904:	2b00      	cmp	r3, #0
    1906:	d101      	bne.n	190c <AnimetionAlloc+0xb8>
	{
		return id;
    1908:	68fb      	ldr	r3, [r7, #12]
    190a:	e001      	b.n	1910 <AnimetionAlloc+0xbc>
	}
	return -1;
    190c:	2301      	movs	r3, #1
    190e:	425b      	negs	r3, r3
}
    1910:	0018      	movs	r0, r3
    1912:	46bd      	mov	sp, r7
    1914:	b007      	add	sp, #28
    1916:	bd90      	pop	{r4, r7, pc}

00001918 <AnimetionTaskDriver>:
	}
	return 0;
}

int AnimetionTaskDriver( struct AnimeImage *img )
{
    1918:	b590      	push	{r4, r7, lr}
    191a:	b085      	sub	sp, #20
    191c:	af00      	add	r7, sp, #0
    191e:	6078      	str	r0, [r7, #4]
	int i;

	for( i=0;i<32;i++ )
    1920:	2300      	movs	r3, #0
    1922:	60fb      	str	r3, [r7, #12]
    1924:	e059      	b.n	19da <AnimetionTaskDriver+0xc2>
	{
		if( img->Entry[i].table != NULL )
    1926:	6879      	ldr	r1, [r7, #4]
    1928:	68fa      	ldr	r2, [r7, #12]
    192a:	0013      	movs	r3, r2
    192c:	009b      	lsls	r3, r3, #2
    192e:	189b      	adds	r3, r3, r2
    1930:	009b      	lsls	r3, r3, #2
    1932:	18cb      	adds	r3, r1, r3
    1934:	3310      	adds	r3, #16
    1936:	681b      	ldr	r3, [r3, #0]
    1938:	2b00      	cmp	r3, #0
    193a:	d04b      	beq.n	19d4 <AnimetionTaskDriver+0xbc>
		{
			if( img->Entry[i].Now.Time == 0 )
    193c:	6879      	ldr	r1, [r7, #4]
    193e:	68fa      	ldr	r2, [r7, #12]
    1940:	0013      	movs	r3, r2
    1942:	009b      	lsls	r3, r3, #2
    1944:	189b      	adds	r3, r3, r2
    1946:	009b      	lsls	r3, r3, #2
    1948:	18cb      	adds	r3, r1, r3
    194a:	3318      	adds	r3, #24
    194c:	881b      	ldrh	r3, [r3, #0]
    194e:	2b00      	cmp	r3, #0
    1950:	d120      	bne.n	1994 <AnimetionTaskDriver+0x7c>
			{
				if( img->Entry[i].Now.next != NULL )
    1952:	6879      	ldr	r1, [r7, #4]
    1954:	68fa      	ldr	r2, [r7, #12]
    1956:	0013      	movs	r3, r2
    1958:	009b      	lsls	r3, r3, #2
    195a:	189b      	adds	r3, r3, r2
    195c:	009b      	lsls	r3, r3, #2
    195e:	18cb      	adds	r3, r1, r3
    1960:	331c      	adds	r3, #28
    1962:	681b      	ldr	r3, [r3, #0]
    1964:	2b00      	cmp	r3, #0
    1966:	d015      	beq.n	1994 <AnimetionTaskDriver+0x7c>
				{
					img->Entry[i].Now = *img->Entry[i].Now.next;
    1968:	6879      	ldr	r1, [r7, #4]
    196a:	68fa      	ldr	r2, [r7, #12]
    196c:	0013      	movs	r3, r2
    196e:	009b      	lsls	r3, r3, #2
    1970:	189b      	adds	r3, r3, r2
    1972:	009b      	lsls	r3, r3, #2
    1974:	18cb      	adds	r3, r1, r3
    1976:	331c      	adds	r3, #28
    1978:	681c      	ldr	r4, [r3, #0]
    197a:	6879      	ldr	r1, [r7, #4]
    197c:	68fa      	ldr	r2, [r7, #12]
    197e:	2010      	movs	r0, #16
    1980:	0013      	movs	r3, r2
    1982:	009b      	lsls	r3, r3, #2
    1984:	189b      	adds	r3, r3, r2
    1986:	009b      	lsls	r3, r3, #2
    1988:	18cb      	adds	r3, r1, r3
    198a:	181b      	adds	r3, r3, r0
    198c:	3304      	adds	r3, #4
    198e:	0022      	movs	r2, r4
    1990:	ca13      	ldmia	r2!, {r0, r1, r4}
    1992:	c313      	stmia	r3!, {r0, r1, r4}
				}
			}
			if( img->Entry[i].Now.Time )img->Entry[i].Now.Time--;
    1994:	6879      	ldr	r1, [r7, #4]
    1996:	68fa      	ldr	r2, [r7, #12]
    1998:	0013      	movs	r3, r2
    199a:	009b      	lsls	r3, r3, #2
    199c:	189b      	adds	r3, r3, r2
    199e:	009b      	lsls	r3, r3, #2
    19a0:	18cb      	adds	r3, r1, r3
    19a2:	3318      	adds	r3, #24
    19a4:	881b      	ldrh	r3, [r3, #0]
    19a6:	2b00      	cmp	r3, #0
    19a8:	d014      	beq.n	19d4 <AnimetionTaskDriver+0xbc>
    19aa:	6879      	ldr	r1, [r7, #4]
    19ac:	68fa      	ldr	r2, [r7, #12]
    19ae:	0013      	movs	r3, r2
    19b0:	009b      	lsls	r3, r3, #2
    19b2:	189b      	adds	r3, r3, r2
    19b4:	009b      	lsls	r3, r3, #2
    19b6:	18cb      	adds	r3, r1, r3
    19b8:	3318      	adds	r3, #24
    19ba:	881b      	ldrh	r3, [r3, #0]
    19bc:	3b01      	subs	r3, #1
    19be:	b298      	uxth	r0, r3
    19c0:	6879      	ldr	r1, [r7, #4]
    19c2:	68fa      	ldr	r2, [r7, #12]
    19c4:	0013      	movs	r3, r2
    19c6:	009b      	lsls	r3, r3, #2
    19c8:	189b      	adds	r3, r3, r2
    19ca:	009b      	lsls	r3, r3, #2
    19cc:	18cb      	adds	r3, r1, r3
    19ce:	3318      	adds	r3, #24
    19d0:	1c02      	adds	r2, r0, #0
    19d2:	801a      	strh	r2, [r3, #0]

int AnimetionTaskDriver( struct AnimeImage *img )
{
	int i;

	for( i=0;i<32;i++ )
    19d4:	68fb      	ldr	r3, [r7, #12]
    19d6:	3301      	adds	r3, #1
    19d8:	60fb      	str	r3, [r7, #12]
    19da:	68fb      	ldr	r3, [r7, #12]
    19dc:	2b1f      	cmp	r3, #31
    19de:	dda2      	ble.n	1926 <AnimetionTaskDriver+0xe>
				}
			}
			if( img->Entry[i].Now.Time )img->Entry[i].Now.Time--;
		}
	};
	return 0;
    19e0:	2300      	movs	r3, #0
}
    19e2:	0018      	movs	r0, r3
    19e4:	46bd      	mov	sp, r7
    19e6:	b005      	add	sp, #20
    19e8:	bd90      	pop	{r4, r7, pc}
    19ea:	46c0      	nop			; (mov r8, r8)

000019ec <AnimetionTrans>:



int AnimetionTrans( unsigned short cmd, unsigned short handle, struct AnimeImage *img, unsigned short x, unsigned short y, int id )
{
    19ec:	b590      	push	{r4, r7, lr}
    19ee:	b085      	sub	sp, #20
    19f0:	af00      	add	r7, sp, #0
    19f2:	0004      	movs	r4, r0
    19f4:	0008      	movs	r0, r1
    19f6:	60ba      	str	r2, [r7, #8]
    19f8:	0019      	movs	r1, r3
    19fa:	230e      	movs	r3, #14
    19fc:	18fb      	adds	r3, r7, r3
    19fe:	1c22      	adds	r2, r4, #0
    1a00:	801a      	strh	r2, [r3, #0]
    1a02:	230c      	movs	r3, #12
    1a04:	18fb      	adds	r3, r7, r3
    1a06:	1c02      	adds	r2, r0, #0
    1a08:	801a      	strh	r2, [r3, #0]
    1a0a:	1dbb      	adds	r3, r7, #6
    1a0c:	1c0a      	adds	r2, r1, #0
    1a0e:	801a      	strh	r2, [r3, #0]
	switch( cmd )
    1a10:	230e      	movs	r3, #14
    1a12:	18fb      	adds	r3, r7, r3
    1a14:	881b      	ldrh	r3, [r3, #0]
    1a16:	2b04      	cmp	r3, #4
    1a18:	d900      	bls.n	1a1c <AnimetionTrans+0x30>
    1a1a:	e0dc      	b.n	1bd6 <AnimetionTrans+0x1ea>
    1a1c:	009a      	lsls	r2, r3, #2
    1a1e:	4b70      	ldr	r3, [pc, #448]	; (1be0 <AnimetionTrans+0x1f4>)
    1a20:	18d3      	adds	r3, r2, r3
    1a22:	681b      	ldr	r3, [r3, #0]
    1a24:	469f      	mov	pc, r3
	{
		case ANIME_CMD_START:
			HostMemWriteDoubleWord( RAM_CMD + cmdOffset,BITMAP_HANDLE(handle) );
    1a26:	4b6f      	ldr	r3, [pc, #444]	; (1be4 <AnimetionTrans+0x1f8>)
    1a28:	681b      	ldr	r3, [r3, #0]
    1a2a:	22c2      	movs	r2, #194	; 0xc2
    1a2c:	0392      	lsls	r2, r2, #14
    1a2e:	1898      	adds	r0, r3, r2
    1a30:	230c      	movs	r3, #12
    1a32:	18fb      	adds	r3, r7, r3
    1a34:	881b      	ldrh	r3, [r3, #0]
    1a36:	221f      	movs	r2, #31
    1a38:	4013      	ands	r3, r2
    1a3a:	22a0      	movs	r2, #160	; 0xa0
    1a3c:	04d2      	lsls	r2, r2, #19
    1a3e:	4313      	orrs	r3, r2
    1a40:	0019      	movs	r1, r3
    1a42:	4b69      	ldr	r3, [pc, #420]	; (1be8 <AnimetionTrans+0x1fc>)
    1a44:	4798      	blx	r3
			cmdOffset = incCMDOffset(cmdOffset, 4);
    1a46:	4b67      	ldr	r3, [pc, #412]	; (1be4 <AnimetionTrans+0x1f8>)
    1a48:	681b      	ldr	r3, [r3, #0]
    1a4a:	2104      	movs	r1, #4
    1a4c:	0018      	movs	r0, r3
    1a4e:	4b67      	ldr	r3, [pc, #412]	; (1bec <AnimetionTrans+0x200>)
    1a50:	4798      	blx	r3
    1a52:	0002      	movs	r2, r0
    1a54:	4b63      	ldr	r3, [pc, #396]	; (1be4 <AnimetionTrans+0x1f8>)
    1a56:	601a      	str	r2, [r3, #0]
			HostMemWriteDoubleWord( RAM_CMD + cmdOffset,BITMAP_LAYOUT(ARGB1555, img->IMAGE_SIZE_X * img->COLOR_DPTH, img->IMAGE_SIZE_Y) );
    1a58:	4b62      	ldr	r3, [pc, #392]	; (1be4 <AnimetionTrans+0x1f8>)
    1a5a:	681b      	ldr	r3, [r3, #0]
    1a5c:	22c2      	movs	r2, #194	; 0xc2
    1a5e:	0392      	lsls	r2, r2, #14
    1a60:	1898      	adds	r0, r3, r2
    1a62:	68bb      	ldr	r3, [r7, #8]
    1a64:	889b      	ldrh	r3, [r3, #4]
    1a66:	001a      	movs	r2, r3
    1a68:	68bb      	ldr	r3, [r7, #8]
    1a6a:	891b      	ldrh	r3, [r3, #8]
    1a6c:	4353      	muls	r3, r2
    1a6e:	025b      	lsls	r3, r3, #9
    1a70:	4a5f      	ldr	r2, [pc, #380]	; (1bf0 <AnimetionTrans+0x204>)
    1a72:	401a      	ands	r2, r3
    1a74:	68bb      	ldr	r3, [r7, #8]
    1a76:	88db      	ldrh	r3, [r3, #6]
    1a78:	05db      	lsls	r3, r3, #23
    1a7a:	0ddb      	lsrs	r3, r3, #23
    1a7c:	4313      	orrs	r3, r2
    1a7e:	22e0      	movs	r2, #224	; 0xe0
    1a80:	04d2      	lsls	r2, r2, #19
    1a82:	4313      	orrs	r3, r2
    1a84:	0019      	movs	r1, r3
    1a86:	4b58      	ldr	r3, [pc, #352]	; (1be8 <AnimetionTrans+0x1fc>)
    1a88:	4798      	blx	r3
			cmdOffset = incCMDOffset(cmdOffset, 4);
    1a8a:	4b56      	ldr	r3, [pc, #344]	; (1be4 <AnimetionTrans+0x1f8>)
    1a8c:	681b      	ldr	r3, [r3, #0]
    1a8e:	2104      	movs	r1, #4
    1a90:	0018      	movs	r0, r3
    1a92:	4b56      	ldr	r3, [pc, #344]	; (1bec <AnimetionTrans+0x200>)
    1a94:	4798      	blx	r3
    1a96:	0002      	movs	r2, r0
    1a98:	4b52      	ldr	r3, [pc, #328]	; (1be4 <AnimetionTrans+0x1f8>)
    1a9a:	601a      	str	r2, [r3, #0]
			break;
    1a9c:	e09b      	b.n	1bd6 <AnimetionTrans+0x1ea>
		case ANIME_CMD_SET_SIZE:
			HostMemWriteDoubleWord( RAM_CMD + cmdOffset,BITMAP_SIZE(NEAREST, 0, 0, img->Entry[id].CHARACTOR_SIZE_X, img->Entry[id].CHARACTOR_SIZE_Y) );
    1a9e:	4b51      	ldr	r3, [pc, #324]	; (1be4 <AnimetionTrans+0x1f8>)
    1aa0:	681b      	ldr	r3, [r3, #0]
    1aa2:	22c2      	movs	r2, #194	; 0xc2
    1aa4:	0392      	lsls	r2, r2, #14
    1aa6:	189c      	adds	r4, r3, r2
    1aa8:	68b9      	ldr	r1, [r7, #8]
    1aaa:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    1aac:	0013      	movs	r3, r2
    1aae:	009b      	lsls	r3, r3, #2
    1ab0:	189b      	adds	r3, r3, r2
    1ab2:	009b      	lsls	r3, r3, #2
    1ab4:	18cb      	adds	r3, r1, r3
    1ab6:	330c      	adds	r3, #12
    1ab8:	881b      	ldrh	r3, [r3, #0]
    1aba:	025b      	lsls	r3, r3, #9
    1abc:	4a4d      	ldr	r2, [pc, #308]	; (1bf4 <AnimetionTrans+0x208>)
    1abe:	4013      	ands	r3, r2
    1ac0:	0019      	movs	r1, r3
    1ac2:	68b8      	ldr	r0, [r7, #8]
    1ac4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    1ac6:	0013      	movs	r3, r2
    1ac8:	009b      	lsls	r3, r3, #2
    1aca:	189b      	adds	r3, r3, r2
    1acc:	009b      	lsls	r3, r3, #2
    1ace:	18c3      	adds	r3, r0, r3
    1ad0:	330e      	adds	r3, #14
    1ad2:	881b      	ldrh	r3, [r3, #0]
    1ad4:	05db      	lsls	r3, r3, #23
    1ad6:	0ddb      	lsrs	r3, r3, #23
    1ad8:	430b      	orrs	r3, r1
    1ada:	2280      	movs	r2, #128	; 0x80
    1adc:	0512      	lsls	r2, r2, #20
    1ade:	4313      	orrs	r3, r2
    1ae0:	0019      	movs	r1, r3
    1ae2:	0020      	movs	r0, r4
    1ae4:	4b40      	ldr	r3, [pc, #256]	; (1be8 <AnimetionTrans+0x1fc>)
    1ae6:	4798      	blx	r3
			cmdOffset = incCMDOffset(cmdOffset, 4);
    1ae8:	4b3e      	ldr	r3, [pc, #248]	; (1be4 <AnimetionTrans+0x1f8>)
    1aea:	681b      	ldr	r3, [r3, #0]
    1aec:	2104      	movs	r1, #4
    1aee:	0018      	movs	r0, r3
    1af0:	4b3e      	ldr	r3, [pc, #248]	; (1bec <AnimetionTrans+0x200>)
    1af2:	4798      	blx	r3
    1af4:	0002      	movs	r2, r0
    1af6:	4b3b      	ldr	r3, [pc, #236]	; (1be4 <AnimetionTrans+0x1f8>)
    1af8:	601a      	str	r2, [r3, #0]
			break;
    1afa:	e06c      	b.n	1bd6 <AnimetionTrans+0x1ea>
		case ANIME_CMD_SET_IMAGE:
			HostMemWriteDoubleWord( RAM_CMD + cmdOffset,BEGIN_BITMAPS );
    1afc:	4b39      	ldr	r3, [pc, #228]	; (1be4 <AnimetionTrans+0x1f8>)
    1afe:	681b      	ldr	r3, [r3, #0]
    1b00:	22c2      	movs	r2, #194	; 0xc2
    1b02:	0392      	lsls	r2, r2, #14
    1b04:	4694      	mov	ip, r2
    1b06:	4463      	add	r3, ip
    1b08:	4a3b      	ldr	r2, [pc, #236]	; (1bf8 <AnimetionTrans+0x20c>)
    1b0a:	0011      	movs	r1, r2
    1b0c:	0018      	movs	r0, r3
    1b0e:	4b36      	ldr	r3, [pc, #216]	; (1be8 <AnimetionTrans+0x1fc>)
    1b10:	4798      	blx	r3
			cmdOffset = incCMDOffset(cmdOffset, 4);
    1b12:	4b34      	ldr	r3, [pc, #208]	; (1be4 <AnimetionTrans+0x1f8>)
    1b14:	681b      	ldr	r3, [r3, #0]
    1b16:	2104      	movs	r1, #4
    1b18:	0018      	movs	r0, r3
    1b1a:	4b34      	ldr	r3, [pc, #208]	; (1bec <AnimetionTrans+0x200>)
    1b1c:	4798      	blx	r3
    1b1e:	0002      	movs	r2, r0
    1b20:	4b30      	ldr	r3, [pc, #192]	; (1be4 <AnimetionTrans+0x1f8>)
    1b22:	601a      	str	r2, [r3, #0]
			HostMemWriteDoubleWord( RAM_CMD + cmdOffset,BITMAP_SOURCE( RAM_G + img->ImageBase + img->Entry[id].Now.ImageOffset ) );
    1b24:	4b2f      	ldr	r3, [pc, #188]	; (1be4 <AnimetionTrans+0x1f8>)
    1b26:	681b      	ldr	r3, [r3, #0]
    1b28:	22c2      	movs	r2, #194	; 0xc2
    1b2a:	0392      	lsls	r2, r2, #14
    1b2c:	189c      	adds	r4, r3, r2
    1b2e:	68bb      	ldr	r3, [r7, #8]
    1b30:	6819      	ldr	r1, [r3, #0]
    1b32:	68b8      	ldr	r0, [r7, #8]
    1b34:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    1b36:	0013      	movs	r3, r2
    1b38:	009b      	lsls	r3, r3, #2
    1b3a:	189b      	adds	r3, r3, r2
    1b3c:	009b      	lsls	r3, r3, #2
    1b3e:	18c3      	adds	r3, r0, r3
    1b40:	3314      	adds	r3, #20
    1b42:	681b      	ldr	r3, [r3, #0]
    1b44:	18cb      	adds	r3, r1, r3
    1b46:	029b      	lsls	r3, r3, #10
    1b48:	0a9b      	lsrs	r3, r3, #10
    1b4a:	2280      	movs	r2, #128	; 0x80
    1b4c:	0452      	lsls	r2, r2, #17
    1b4e:	4313      	orrs	r3, r2
    1b50:	0019      	movs	r1, r3
    1b52:	0020      	movs	r0, r4
    1b54:	4b24      	ldr	r3, [pc, #144]	; (1be8 <AnimetionTrans+0x1fc>)
    1b56:	4798      	blx	r3
			cmdOffset = incCMDOffset(cmdOffset, 4);
    1b58:	4b22      	ldr	r3, [pc, #136]	; (1be4 <AnimetionTrans+0x1f8>)
    1b5a:	681b      	ldr	r3, [r3, #0]
    1b5c:	2104      	movs	r1, #4
    1b5e:	0018      	movs	r0, r3
    1b60:	4b22      	ldr	r3, [pc, #136]	; (1bec <AnimetionTrans+0x200>)
    1b62:	4798      	blx	r3
    1b64:	0002      	movs	r2, r0
    1b66:	4b1f      	ldr	r3, [pc, #124]	; (1be4 <AnimetionTrans+0x1f8>)
    1b68:	601a      	str	r2, [r3, #0]
			break;
    1b6a:	e034      	b.n	1bd6 <AnimetionTrans+0x1ea>
		case ANIME_CMD_POSITION:
			HostMemWriteDoubleWord( RAM_CMD + cmdOffset,VERTEX2F( x ,y) );
    1b6c:	4b1d      	ldr	r3, [pc, #116]	; (1be4 <AnimetionTrans+0x1f8>)
    1b6e:	681b      	ldr	r3, [r3, #0]
    1b70:	22c2      	movs	r2, #194	; 0xc2
    1b72:	0392      	lsls	r2, r2, #14
    1b74:	1898      	adds	r0, r3, r2
    1b76:	1dbb      	adds	r3, r7, #6
    1b78:	881b      	ldrh	r3, [r3, #0]
    1b7a:	03db      	lsls	r3, r3, #15
    1b7c:	4a1f      	ldr	r2, [pc, #124]	; (1bfc <AnimetionTrans+0x210>)
    1b7e:	401a      	ands	r2, r3
    1b80:	2320      	movs	r3, #32
    1b82:	18fb      	adds	r3, r7, r3
    1b84:	881b      	ldrh	r3, [r3, #0]
    1b86:	045b      	lsls	r3, r3, #17
    1b88:	0c5b      	lsrs	r3, r3, #17
    1b8a:	4313      	orrs	r3, r2
    1b8c:	2280      	movs	r2, #128	; 0x80
    1b8e:	05d2      	lsls	r2, r2, #23
    1b90:	4313      	orrs	r3, r2
    1b92:	0019      	movs	r1, r3
    1b94:	4b14      	ldr	r3, [pc, #80]	; (1be8 <AnimetionTrans+0x1fc>)
    1b96:	4798      	blx	r3
			cmdOffset = incCMDOffset(cmdOffset, 4);
    1b98:	4b12      	ldr	r3, [pc, #72]	; (1be4 <AnimetionTrans+0x1f8>)
    1b9a:	681b      	ldr	r3, [r3, #0]
    1b9c:	2104      	movs	r1, #4
    1b9e:	0018      	movs	r0, r3
    1ba0:	4b12      	ldr	r3, [pc, #72]	; (1bec <AnimetionTrans+0x200>)
    1ba2:	4798      	blx	r3
    1ba4:	0002      	movs	r2, r0
    1ba6:	4b0f      	ldr	r3, [pc, #60]	; (1be4 <AnimetionTrans+0x1f8>)
    1ba8:	601a      	str	r2, [r3, #0]
			break;
    1baa:	e014      	b.n	1bd6 <AnimetionTrans+0x1ea>
		case ANIME_CMD_END:
			HostMemWriteDoubleWord( RAM_CMD + cmdOffset,DL_END );
    1bac:	4b0d      	ldr	r3, [pc, #52]	; (1be4 <AnimetionTrans+0x1f8>)
    1bae:	681b      	ldr	r3, [r3, #0]
    1bb0:	22c2      	movs	r2, #194	; 0xc2
    1bb2:	0392      	lsls	r2, r2, #14
    1bb4:	189a      	adds	r2, r3, r2
    1bb6:	2384      	movs	r3, #132	; 0x84
    1bb8:	059b      	lsls	r3, r3, #22
    1bba:	0019      	movs	r1, r3
    1bbc:	0010      	movs	r0, r2
    1bbe:	4b0a      	ldr	r3, [pc, #40]	; (1be8 <AnimetionTrans+0x1fc>)
    1bc0:	4798      	blx	r3
			cmdOffset = incCMDOffset(cmdOffset, 4);
    1bc2:	4b08      	ldr	r3, [pc, #32]	; (1be4 <AnimetionTrans+0x1f8>)
    1bc4:	681b      	ldr	r3, [r3, #0]
    1bc6:	2104      	movs	r1, #4
    1bc8:	0018      	movs	r0, r3
    1bca:	4b08      	ldr	r3, [pc, #32]	; (1bec <AnimetionTrans+0x200>)
    1bcc:	4798      	blx	r3
    1bce:	0002      	movs	r2, r0
    1bd0:	4b04      	ldr	r3, [pc, #16]	; (1be4 <AnimetionTrans+0x1f8>)
    1bd2:	601a      	str	r2, [r3, #0]
			break;
    1bd4:	46c0      	nop			; (mov r8, r8)
	}
	return 0;
    1bd6:	2300      	movs	r3, #0
}
    1bd8:	0018      	movs	r0, r3
    1bda:	46bd      	mov	sp, r7
    1bdc:	b005      	add	sp, #20
    1bde:	bd90      	pop	{r4, r7, pc}
    1be0:	000085c4 	.word	0x000085c4
    1be4:	20000488 	.word	0x20000488
    1be8:	00000295 	.word	0x00000295
    1bec:	000003dd 	.word	0x000003dd
    1bf0:	0007fe00 	.word	0x0007fe00
    1bf4:	0003fe00 	.word	0x0003fe00
    1bf8:	1f000001 	.word	0x1f000001
    1bfc:	3fff8000 	.word	0x3fff8000

00001c00 <sprite_move>:




void sprite_move( struct sprite *move )
{
    1c00:	b580      	push	{r7, lr}
    1c02:	b084      	sub	sp, #16
    1c04:	af00      	add	r7, sp, #0
    1c06:	6078      	str	r0, [r7, #4]
	unsigned short rnd_dir = 0;
    1c08:	230e      	movs	r3, #14
    1c0a:	18fb      	adds	r3, r7, r3
    1c0c:	2200      	movs	r2, #0
    1c0e:	801a      	strh	r2, [r3, #0]

	if( move->timer == 0 )
    1c10:	687b      	ldr	r3, [r7, #4]
    1c12:	691b      	ldr	r3, [r3, #16]
    1c14:	2b00      	cmp	r3, #0
    1c16:	d15a      	bne.n	1cce <sprite_move+0xce>
	{
		rnd_dir = rand();
    1c18:	4b67      	ldr	r3, [pc, #412]	; (1db8 <sprite_move+0x1b8>)
    1c1a:	4798      	blx	r3
    1c1c:	0002      	movs	r2, r0
    1c1e:	230e      	movs	r3, #14
    1c20:	18fb      	adds	r3, r7, r3
    1c22:	801a      	strh	r2, [r3, #0]
		rnd_dir = rand();
    1c24:	4b64      	ldr	r3, [pc, #400]	; (1db8 <sprite_move+0x1b8>)
    1c26:	4798      	blx	r3
    1c28:	0002      	movs	r2, r0
    1c2a:	230e      	movs	r3, #14
    1c2c:	18fb      	adds	r3, r7, r3
    1c2e:	801a      	strh	r2, [r3, #0]
		rnd_dir = rand();
    1c30:	4b61      	ldr	r3, [pc, #388]	; (1db8 <sprite_move+0x1b8>)
    1c32:	4798      	blx	r3
    1c34:	0002      	movs	r2, r0
    1c36:	230e      	movs	r3, #14
    1c38:	18fb      	adds	r3, r7, r3
    1c3a:	801a      	strh	r2, [r3, #0]

		switch( rnd_dir & 0x0003 )
    1c3c:	230e      	movs	r3, #14
    1c3e:	18fb      	adds	r3, r7, r3
    1c40:	881b      	ldrh	r3, [r3, #0]
    1c42:	2203      	movs	r2, #3
    1c44:	4013      	ands	r3, r2
    1c46:	2b01      	cmp	r3, #1
    1c48:	d00f      	beq.n	1c6a <sprite_move+0x6a>
    1c4a:	dc02      	bgt.n	1c52 <sprite_move+0x52>
    1c4c:	2b00      	cmp	r3, #0
    1c4e:	d005      	beq.n	1c5c <sprite_move+0x5c>
    1c50:	e022      	b.n	1c98 <sprite_move+0x98>
    1c52:	2b02      	cmp	r3, #2
    1c54:	d011      	beq.n	1c7a <sprite_move+0x7a>
    1c56:	2b03      	cmp	r3, #3
    1c58:	d017      	beq.n	1c8a <sprite_move+0x8a>
    1c5a:	e01d      	b.n	1c98 <sprite_move+0x98>
		{
			case DIR_S:
				move->delta_x = 0;
    1c5c:	687b      	ldr	r3, [r7, #4]
    1c5e:	2200      	movs	r2, #0
    1c60:	819a      	strh	r2, [r3, #12]
				move->delta_y = 1;
    1c62:	687b      	ldr	r3, [r7, #4]
    1c64:	2201      	movs	r2, #1
    1c66:	81da      	strh	r2, [r3, #14]
				break;
    1c68:	e016      	b.n	1c98 <sprite_move+0x98>
			case DIR_W:
				move->delta_x = -1;
    1c6a:	687b      	ldr	r3, [r7, #4]
    1c6c:	2201      	movs	r2, #1
    1c6e:	4252      	negs	r2, r2
    1c70:	819a      	strh	r2, [r3, #12]
				move->delta_y = 0;
    1c72:	687b      	ldr	r3, [r7, #4]
    1c74:	2200      	movs	r2, #0
    1c76:	81da      	strh	r2, [r3, #14]
				break;
    1c78:	e00e      	b.n	1c98 <sprite_move+0x98>
			case DIR_N:
				move->delta_x = 0;
    1c7a:	687b      	ldr	r3, [r7, #4]
    1c7c:	2200      	movs	r2, #0
    1c7e:	819a      	strh	r2, [r3, #12]
				move->delta_y = -1;
    1c80:	687b      	ldr	r3, [r7, #4]
    1c82:	2201      	movs	r2, #1
    1c84:	4252      	negs	r2, r2
    1c86:	81da      	strh	r2, [r3, #14]
				break;
    1c88:	e006      	b.n	1c98 <sprite_move+0x98>
			case DIR_E:
				move->delta_x = 1;
    1c8a:	687b      	ldr	r3, [r7, #4]
    1c8c:	2201      	movs	r2, #1
    1c8e:	819a      	strh	r2, [r3, #12]
				move->delta_y = 0;
    1c90:	687b      	ldr	r3, [r7, #4]
    1c92:	2200      	movs	r2, #0
    1c94:	81da      	strh	r2, [r3, #14]
				break;
    1c96:	46c0      	nop			; (mov r8, r8)
		}
		rnd_dir = rand();
    1c98:	4b47      	ldr	r3, [pc, #284]	; (1db8 <sprite_move+0x1b8>)
    1c9a:	4798      	blx	r3
    1c9c:	0002      	movs	r2, r0
    1c9e:	230e      	movs	r3, #14
    1ca0:	18fb      	adds	r3, r7, r3
    1ca2:	801a      	strh	r2, [r3, #0]
		move->timer = rnd_dir & 0x3f;
    1ca4:	230e      	movs	r3, #14
    1ca6:	18fb      	adds	r3, r7, r3
    1ca8:	881b      	ldrh	r3, [r3, #0]
    1caa:	223f      	movs	r2, #63	; 0x3f
    1cac:	401a      	ands	r2, r3
    1cae:	687b      	ldr	r3, [r7, #4]
    1cb0:	611a      	str	r2, [r3, #16]
		rnd_dir = rand();
    1cb2:	4b41      	ldr	r3, [pc, #260]	; (1db8 <sprite_move+0x1b8>)
    1cb4:	4798      	blx	r3
    1cb6:	0002      	movs	r2, r0
    1cb8:	230e      	movs	r3, #14
    1cba:	18fb      	adds	r3, r7, r3
    1cbc:	801a      	strh	r2, [r3, #0]
		move->speed = 1 * (rnd_dir & 0x0007)+1;
    1cbe:	230e      	movs	r3, #14
    1cc0:	18fb      	adds	r3, r7, r3
    1cc2:	881b      	ldrh	r3, [r3, #0]
    1cc4:	2207      	movs	r2, #7
    1cc6:	4013      	ands	r3, r2
    1cc8:	1c5a      	adds	r2, r3, #1
    1cca:	687b      	ldr	r3, [r7, #4]
    1ccc:	615a      	str	r2, [r3, #20]

	}
	move->timer--;
    1cce:	687b      	ldr	r3, [r7, #4]
    1cd0:	691b      	ldr	r3, [r3, #16]
    1cd2:	1e5a      	subs	r2, r3, #1
    1cd4:	687b      	ldr	r3, [r7, #4]
    1cd6:	611a      	str	r2, [r3, #16]
	move->x = move->x + move->delta_x * move->speed;
    1cd8:	687b      	ldr	r3, [r7, #4]
    1cda:	2200      	movs	r2, #0
    1cdc:	5e9b      	ldrsh	r3, [r3, r2]
    1cde:	b29a      	uxth	r2, r3
    1ce0:	687b      	ldr	r3, [r7, #4]
    1ce2:	210c      	movs	r1, #12
    1ce4:	5e5b      	ldrsh	r3, [r3, r1]
    1ce6:	b299      	uxth	r1, r3
    1ce8:	687b      	ldr	r3, [r7, #4]
    1cea:	695b      	ldr	r3, [r3, #20]
    1cec:	b29b      	uxth	r3, r3
    1cee:	434b      	muls	r3, r1
    1cf0:	b29b      	uxth	r3, r3
    1cf2:	18d3      	adds	r3, r2, r3
    1cf4:	b29b      	uxth	r3, r3
    1cf6:	b21a      	sxth	r2, r3
    1cf8:	687b      	ldr	r3, [r7, #4]
    1cfa:	801a      	strh	r2, [r3, #0]
	move->y = move->y + move->delta_y * move->speed;
    1cfc:	687b      	ldr	r3, [r7, #4]
    1cfe:	2202      	movs	r2, #2
    1d00:	5e9b      	ldrsh	r3, [r3, r2]
    1d02:	b29a      	uxth	r2, r3
    1d04:	687b      	ldr	r3, [r7, #4]
    1d06:	210e      	movs	r1, #14
    1d08:	5e5b      	ldrsh	r3, [r3, r1]
    1d0a:	b299      	uxth	r1, r3
    1d0c:	687b      	ldr	r3, [r7, #4]
    1d0e:	695b      	ldr	r3, [r3, #20]
    1d10:	b29b      	uxth	r3, r3
    1d12:	434b      	muls	r3, r1
    1d14:	b29b      	uxth	r3, r3
    1d16:	18d3      	adds	r3, r2, r3
    1d18:	b29b      	uxth	r3, r3
    1d1a:	b21a      	sxth	r2, r3
    1d1c:	687b      	ldr	r3, [r7, #4]
    1d1e:	805a      	strh	r2, [r3, #2]

	if( move->x > 512 )move->x = -16;
    1d20:	687b      	ldr	r3, [r7, #4]
    1d22:	2200      	movs	r2, #0
    1d24:	5e9a      	ldrsh	r2, [r3, r2]
    1d26:	2380      	movs	r3, #128	; 0x80
    1d28:	009b      	lsls	r3, r3, #2
    1d2a:	429a      	cmp	r2, r3
    1d2c:	dd03      	ble.n	1d36 <sprite_move+0x136>
    1d2e:	687b      	ldr	r3, [r7, #4]
    1d30:	2210      	movs	r2, #16
    1d32:	4252      	negs	r2, r2
    1d34:	801a      	strh	r2, [r3, #0]
	if( move->y > 304 )move->y = -16;
    1d36:	687b      	ldr	r3, [r7, #4]
    1d38:	2202      	movs	r2, #2
    1d3a:	5e9a      	ldrsh	r2, [r3, r2]
    1d3c:	2398      	movs	r3, #152	; 0x98
    1d3e:	005b      	lsls	r3, r3, #1
    1d40:	429a      	cmp	r2, r3
    1d42:	dd03      	ble.n	1d4c <sprite_move+0x14c>
    1d44:	687b      	ldr	r3, [r7, #4]
    1d46:	2210      	movs	r2, #16
    1d48:	4252      	negs	r2, r2
    1d4a:	805a      	strh	r2, [r3, #2]
	if( move->x < -32 )move->x = 496;
    1d4c:	687b      	ldr	r3, [r7, #4]
    1d4e:	2200      	movs	r2, #0
    1d50:	5e9b      	ldrsh	r3, [r3, r2]
    1d52:	3320      	adds	r3, #32
    1d54:	da03      	bge.n	1d5e <sprite_move+0x15e>
    1d56:	687b      	ldr	r3, [r7, #4]
    1d58:	22f8      	movs	r2, #248	; 0xf8
    1d5a:	0052      	lsls	r2, r2, #1
    1d5c:	801a      	strh	r2, [r3, #0]
	if( move->y < -32 )move->y = 288;
    1d5e:	687b      	ldr	r3, [r7, #4]
    1d60:	2202      	movs	r2, #2
    1d62:	5e9b      	ldrsh	r3, [r3, r2]
    1d64:	3320      	adds	r3, #32
    1d66:	da03      	bge.n	1d70 <sprite_move+0x170>
    1d68:	687b      	ldr	r3, [r7, #4]
    1d6a:	2290      	movs	r2, #144	; 0x90
    1d6c:	0052      	lsls	r2, r2, #1
    1d6e:	805a      	strh	r2, [r3, #2]

	if( move->delta_x > 0 )move->dir = DIR_E;
    1d70:	687b      	ldr	r3, [r7, #4]
    1d72:	220c      	movs	r2, #12
    1d74:	5e9b      	ldrsh	r3, [r3, r2]
    1d76:	2b00      	cmp	r3, #0
    1d78:	dd02      	ble.n	1d80 <sprite_move+0x180>
    1d7a:	687b      	ldr	r3, [r7, #4]
    1d7c:	2203      	movs	r2, #3
    1d7e:	609a      	str	r2, [r3, #8]
	if( move->delta_x < 0 )move->dir = DIR_W;
    1d80:	687b      	ldr	r3, [r7, #4]
    1d82:	220c      	movs	r2, #12
    1d84:	5e9b      	ldrsh	r3, [r3, r2]
    1d86:	2b00      	cmp	r3, #0
    1d88:	da02      	bge.n	1d90 <sprite_move+0x190>
    1d8a:	687b      	ldr	r3, [r7, #4]
    1d8c:	2201      	movs	r2, #1
    1d8e:	609a      	str	r2, [r3, #8]
	if( move->delta_y > 0 )move->dir = DIR_S;
    1d90:	687b      	ldr	r3, [r7, #4]
    1d92:	220e      	movs	r2, #14
    1d94:	5e9b      	ldrsh	r3, [r3, r2]
    1d96:	2b00      	cmp	r3, #0
    1d98:	dd02      	ble.n	1da0 <sprite_move+0x1a0>
    1d9a:	687b      	ldr	r3, [r7, #4]
    1d9c:	2200      	movs	r2, #0
    1d9e:	609a      	str	r2, [r3, #8]
	if( move->delta_y < 0 )move->dir = DIR_N;
    1da0:	687b      	ldr	r3, [r7, #4]
    1da2:	220e      	movs	r2, #14
    1da4:	5e9b      	ldrsh	r3, [r3, r2]
    1da6:	2b00      	cmp	r3, #0
    1da8:	da02      	bge.n	1db0 <sprite_move+0x1b0>
    1daa:	687b      	ldr	r3, [r7, #4]
    1dac:	2202      	movs	r2, #2
    1dae:	609a      	str	r2, [r3, #8]
}
    1db0:	46c0      	nop			; (mov r8, r8)
    1db2:	46bd      	mov	sp, r7
    1db4:	b004      	add	sp, #16
    1db6:	bd80      	pop	{r7, pc}
    1db8:	000027d1 	.word	0x000027d1

00001dbc <main>:




int main (void)
{
    1dbc:	b5b0      	push	{r4, r5, r7, lr}
    1dbe:	4cfd      	ldr	r4, [pc, #1012]	; (21b4 <STACK_SIZE+0x1b4>)
    1dc0:	44a5      	add	sp, r4
    1dc2:	af02      	add	r7, sp, #8
//	unsigned int cmdOffset = 0x0000;
	unsigned int cmdBufferRd = 0x0000;
    1dc4:	2300      	movs	r3, #0
    1dc6:	22ba      	movs	r2, #186	; 0xba
    1dc8:	0092      	lsls	r2, r2, #2
    1dca:	18ba      	adds	r2, r7, r2
    1dcc:	6013      	str	r3, [r2, #0]
	unsigned int cmdBufferWr = 0x0000;
    1dce:	2300      	movs	r3, #0
    1dd0:	22b9      	movs	r2, #185	; 0xb9
    1dd2:	0092      	lsls	r2, r2, #2
    1dd4:	18ba      	adds	r2, r7, r2
    1dd6:	6013      	str	r3, [r2, #0]





	system_clock_init();
    1dd8:	4bf7      	ldr	r3, [pc, #988]	; (21b8 <STACK_SIZE+0x1b8>)
    1dda:	4798      	blx	r3
	system_gclk_init();
    1ddc:	4bf7      	ldr	r3, [pc, #988]	; (21bc <STACK_SIZE+0x1bc>)
    1dde:	4798      	blx	r3

	ClockInitTest();
    1de0:	4bf7      	ldr	r3, [pc, #988]	; (21c0 <STACK_SIZE+0x1c0>)
    1de2:	4798      	blx	r3

	UserClockInit();
    1de4:	4bf7      	ldr	r3, [pc, #988]	; (21c4 <STACK_SIZE+0x1c4>)
    1de6:	4798      	blx	r3

	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 <<  (2 + PM_APBCMASK_SERCOM0_Pos));
    1de8:	2110      	movs	r1, #16
    1dea:	2002      	movs	r0, #2
    1dec:	4bf6      	ldr	r3, [pc, #984]	; (21c8 <STACK_SIZE+0x1c8>)
    1dee:	4798      	blx	r3
	system_apb_clock_set_mask(SYSTEM_CLOCK_APB_APBC, 1 <<  (3 + PM_APBCMASK_SERCOM0_Pos));
    1df0:	2120      	movs	r1, #32
    1df2:	2002      	movs	r0, #2
    1df4:	4bf4      	ldr	r3, [pc, #976]	; (21c8 <STACK_SIZE+0x1c8>)
    1df6:	4798      	blx	r3

	GpioPortInit( &test2[0] );
    1df8:	4bf4      	ldr	r3, [pc, #976]	; (21cc <STACK_SIZE+0x1cc>)
    1dfa:	0018      	movs	r0, r3
    1dfc:	4bf4      	ldr	r3, [pc, #976]	; (21d0 <STACK_SIZE+0x1d0>)
    1dfe:	4798      	blx	r3
	GpioPortInit( &test2[1] );
    1e00:	4bf4      	ldr	r3, [pc, #976]	; (21d4 <STACK_SIZE+0x1d4>)
    1e02:	0018      	movs	r0, r3
    1e04:	4bf2      	ldr	r3, [pc, #968]	; (21d0 <STACK_SIZE+0x1d0>)
    1e06:	4798      	blx	r3
	GpioPortInit( &test2[2] );
    1e08:	4bf3      	ldr	r3, [pc, #972]	; (21d8 <STACK_SIZE+0x1d8>)
    1e0a:	0018      	movs	r0, r3
    1e0c:	4bf0      	ldr	r3, [pc, #960]	; (21d0 <STACK_SIZE+0x1d0>)
    1e0e:	4798      	blx	r3
	GpioPortInit( &test2[3] );
    1e10:	4bf2      	ldr	r3, [pc, #968]	; (21dc <STACK_SIZE+0x1dc>)
    1e12:	0018      	movs	r0, r3
    1e14:	4bee      	ldr	r3, [pc, #952]	; (21d0 <STACK_SIZE+0x1d0>)
    1e16:	4798      	blx	r3

	SercomSPI_Init( SERCOM2, (SPI_CTRLA_MODE00|SPI_CTRLA_PINMODE00|SPI_CTRLA_MSB_FIRST|SPI_CTRLA_FORM_SPI), (SPI_CTRLB_CHSIZE8BIT|SPI_CTRLB_RXEN),0 );
    1e18:	2380      	movs	r3, #128	; 0x80
    1e1a:	029a      	lsls	r2, r3, #10
    1e1c:	23c0      	movs	r3, #192	; 0xc0
    1e1e:	0399      	lsls	r1, r3, #14
    1e20:	48ef      	ldr	r0, [pc, #956]	; (21e0 <STACK_SIZE+0x1e0>)
    1e22:	2300      	movs	r3, #0
    1e24:	4cef      	ldr	r4, [pc, #956]	; (21e4 <STACK_SIZE+0x1e4>)
    1e26:	47a0      	blx	r4
	SercomSPI_Enable( SERCOM2 );
    1e28:	4bed      	ldr	r3, [pc, #948]	; (21e0 <STACK_SIZE+0x1e0>)
    1e2a:	0018      	movs	r0, r3
    1e2c:	4bee      	ldr	r3, [pc, #952]	; (21e8 <STACK_SIZE+0x1e8>)
    1e2e:	4798      	blx	r3



	UserWait(100000);
    1e30:	4bee      	ldr	r3, [pc, #952]	; (21ec <STACK_SIZE+0x1ec>)
    1e32:	0018      	movs	r0, r3
    1e34:	4bee      	ldr	r3, [pc, #952]	; (21f0 <STACK_SIZE+0x1f0>)
    1e36:	4798      	blx	r3
	UserWait(100000);
    1e38:	4bec      	ldr	r3, [pc, #944]	; (21ec <STACK_SIZE+0x1ec>)
    1e3a:	0018      	movs	r0, r3
    1e3c:	4bec      	ldr	r3, [pc, #944]	; (21f0 <STACK_SIZE+0x1f0>)
    1e3e:	4798      	blx	r3
	UserWait(100000);
    1e40:	4bea      	ldr	r3, [pc, #936]	; (21ec <STACK_SIZE+0x1ec>)
    1e42:	0018      	movs	r0, r3
    1e44:	4bea      	ldr	r3, [pc, #936]	; (21f0 <STACK_SIZE+0x1f0>)
    1e46:	4798      	blx	r3
	UserWait(100000);
    1e48:	4be8      	ldr	r3, [pc, #928]	; (21ec <STACK_SIZE+0x1ec>)
    1e4a:	0018      	movs	r0, r3
    1e4c:	4be8      	ldr	r3, [pc, #928]	; (21f0 <STACK_SIZE+0x1f0>)
    1e4e:	4798      	blx	r3

	HostCommand(HOST_CLKINT,0,0);//send command to "CLKEXT" to FT81X 
    1e50:	2200      	movs	r2, #0
    1e52:	2100      	movs	r1, #0
    1e54:	2048      	movs	r0, #72	; 0x48
    1e56:	4be7      	ldr	r3, [pc, #924]	; (21f4 <STACK_SIZE+0x1f4>)
    1e58:	4798      	blx	r3
	HostCommand(HOST_ACTIVE,0,0);//send host command "ACTIVE" to FT81X 
    1e5a:	2200      	movs	r2, #0
    1e5c:	2100      	movs	r1, #0
    1e5e:	2000      	movs	r0, #0
    1e60:	4be4      	ldr	r3, [pc, #912]	; (21f4 <STACK_SIZE+0x1f4>)
    1e62:	4798      	blx	r3

	UserWait(100000);
    1e64:	4be1      	ldr	r3, [pc, #900]	; (21ec <STACK_SIZE+0x1ec>)
    1e66:	0018      	movs	r0, r3
    1e68:	4be1      	ldr	r3, [pc, #900]	; (21f0 <STACK_SIZE+0x1f0>)
    1e6a:	4798      	blx	r3
	UserWait(100000);
    1e6c:	4bdf      	ldr	r3, [pc, #892]	; (21ec <STACK_SIZE+0x1ec>)
    1e6e:	0018      	movs	r0, r3
    1e70:	4bdf      	ldr	r3, [pc, #892]	; (21f0 <STACK_SIZE+0x1f0>)
    1e72:	4798      	blx	r3
	UserWait(100000);
    1e74:	4bdd      	ldr	r3, [pc, #884]	; (21ec <STACK_SIZE+0x1ec>)
    1e76:	0018      	movs	r0, r3
    1e78:	4bdd      	ldr	r3, [pc, #884]	; (21f0 <STACK_SIZE+0x1f0>)
    1e7a:	4798      	blx	r3
	UserWait(100000);
    1e7c:	4bdb      	ldr	r3, [pc, #876]	; (21ec <STACK_SIZE+0x1ec>)
    1e7e:	0018      	movs	r0, r3
    1e80:	4bdb      	ldr	r3, [pc, #876]	; (21f0 <STACK_SIZE+0x1f0>)
    1e82:	4798      	blx	r3
	UserWait(100000);
    1e84:	4bd9      	ldr	r3, [pc, #868]	; (21ec <STACK_SIZE+0x1ec>)
    1e86:	0018      	movs	r0, r3
    1e88:	4bd9      	ldr	r3, [pc, #868]	; (21f0 <STACK_SIZE+0x1f0>)
    1e8a:	4798      	blx	r3
	UserWait(100000);
    1e8c:	4bd7      	ldr	r3, [pc, #860]	; (21ec <STACK_SIZE+0x1ec>)
    1e8e:	0018      	movs	r0, r3
    1e90:	4bd7      	ldr	r3, [pc, #860]	; (21f0 <STACK_SIZE+0x1f0>)
    1e92:	4798      	blx	r3
	UserWait(100000);
    1e94:	4bd5      	ldr	r3, [pc, #852]	; (21ec <STACK_SIZE+0x1ec>)
    1e96:	0018      	movs	r0, r3
    1e98:	4bd5      	ldr	r3, [pc, #852]	; (21f0 <STACK_SIZE+0x1f0>)
    1e9a:	4798      	blx	r3
	UserWait(100000);
    1e9c:	4bd3      	ldr	r3, [pc, #844]	; (21ec <STACK_SIZE+0x1ec>)
    1e9e:	0018      	movs	r0, r3
    1ea0:	4bd3      	ldr	r3, [pc, #844]	; (21f0 <STACK_SIZE+0x1f0>)
    1ea2:	4798      	blx	r3

	HostMemWriteByte(REG_CPURESET, 0x01);
    1ea4:	4bd4      	ldr	r3, [pc, #848]	; (21f8 <STACK_SIZE+0x1f8>)
    1ea6:	2101      	movs	r1, #1
    1ea8:	0018      	movs	r0, r3
    1eaa:	4bd4      	ldr	r3, [pc, #848]	; (21fc <STACK_SIZE+0x1fc>)
    1eac:	4798      	blx	r3
	HostMemWriteWord(REG_CMD_READ, 0x0000);
    1eae:	4bd4      	ldr	r3, [pc, #848]	; (2200 <STACK_SIZE+0x200>)
    1eb0:	2100      	movs	r1, #0
    1eb2:	0018      	movs	r0, r3
    1eb4:	4bd3      	ldr	r3, [pc, #844]	; (2204 <STACK_SIZE+0x204>)
    1eb6:	4798      	blx	r3
	HostMemWriteWord(REG_CMD_WRITE, 0x0000);
    1eb8:	4bd3      	ldr	r3, [pc, #844]	; (2208 <STACK_SIZE+0x208>)
    1eba:	2100      	movs	r1, #0
    1ebc:	0018      	movs	r0, r3
    1ebe:	4bd1      	ldr	r3, [pc, #836]	; (2204 <STACK_SIZE+0x204>)
    1ec0:	4798      	blx	r3
	HostMemWriteByte(REG_CPURESET, 0x00); 
    1ec2:	4bcd      	ldr	r3, [pc, #820]	; (21f8 <STACK_SIZE+0x1f8>)
    1ec4:	2100      	movs	r1, #0
    1ec6:	0018      	movs	r0, r3
    1ec8:	4bcc      	ldr	r3, [pc, #816]	; (21fc <STACK_SIZE+0x1fc>)
    1eca:	4798      	blx	r3

/* Configure display registers - demonstration for WQVGA resolution */ 
	HostMemWriteWord(REG_HSIZE, 480); 
    1ecc:	23f0      	movs	r3, #240	; 0xf0
    1ece:	005b      	lsls	r3, r3, #1
    1ed0:	4ace      	ldr	r2, [pc, #824]	; (220c <STACK_SIZE+0x20c>)
    1ed2:	0019      	movs	r1, r3
    1ed4:	0010      	movs	r0, r2
    1ed6:	4bcb      	ldr	r3, [pc, #812]	; (2204 <STACK_SIZE+0x204>)
    1ed8:	4798      	blx	r3
	HostMemWriteWord(REG_HCYCLE, 548); 
    1eda:	2389      	movs	r3, #137	; 0x89
    1edc:	009b      	lsls	r3, r3, #2
    1ede:	4acc      	ldr	r2, [pc, #816]	; (2210 <STACK_SIZE+0x210>)
    1ee0:	0019      	movs	r1, r3
    1ee2:	0010      	movs	r0, r2
    1ee4:	4bc7      	ldr	r3, [pc, #796]	; (2204 <STACK_SIZE+0x204>)
    1ee6:	4798      	blx	r3
	HostMemWriteWord(REG_HOFFSET, 43); 
    1ee8:	4bca      	ldr	r3, [pc, #808]	; (2214 <STACK_SIZE+0x214>)
    1eea:	212b      	movs	r1, #43	; 0x2b
    1eec:	0018      	movs	r0, r3
    1eee:	4bc5      	ldr	r3, [pc, #788]	; (2204 <STACK_SIZE+0x204>)
    1ef0:	4798      	blx	r3
	HostMemWriteWord(REG_HSYNC0, 0); 
    1ef2:	4bc9      	ldr	r3, [pc, #804]	; (2218 <STACK_SIZE+0x218>)
    1ef4:	2100      	movs	r1, #0
    1ef6:	0018      	movs	r0, r3
    1ef8:	4bc2      	ldr	r3, [pc, #776]	; (2204 <STACK_SIZE+0x204>)
    1efa:	4798      	blx	r3
	HostMemWriteWord(REG_HSYNC1, 41); 
    1efc:	4bc7      	ldr	r3, [pc, #796]	; (221c <STACK_SIZE+0x21c>)
    1efe:	2129      	movs	r1, #41	; 0x29
    1f00:	0018      	movs	r0, r3
    1f02:	4bc0      	ldr	r3, [pc, #768]	; (2204 <STACK_SIZE+0x204>)
    1f04:	4798      	blx	r3
	HostMemWriteWord(REG_VSIZE, 272); 
    1f06:	2388      	movs	r3, #136	; 0x88
    1f08:	005b      	lsls	r3, r3, #1
    1f0a:	4ac5      	ldr	r2, [pc, #788]	; (2220 <STACK_SIZE+0x220>)
    1f0c:	0019      	movs	r1, r3
    1f0e:	0010      	movs	r0, r2
    1f10:	4bbc      	ldr	r3, [pc, #752]	; (2204 <STACK_SIZE+0x204>)
    1f12:	4798      	blx	r3
	HostMemWriteWord(REG_VCYCLE, 292); 
    1f14:	2392      	movs	r3, #146	; 0x92
    1f16:	005b      	lsls	r3, r3, #1
    1f18:	4ac2      	ldr	r2, [pc, #776]	; (2224 <STACK_SIZE+0x224>)
    1f1a:	0019      	movs	r1, r3
    1f1c:	0010      	movs	r0, r2
    1f1e:	4bb9      	ldr	r3, [pc, #740]	; (2204 <STACK_SIZE+0x204>)
    1f20:	4798      	blx	r3
	HostMemWriteWord(REG_VOFFSET, 12); 
    1f22:	4bc1      	ldr	r3, [pc, #772]	; (2228 <STACK_SIZE+0x228>)
    1f24:	210c      	movs	r1, #12
    1f26:	0018      	movs	r0, r3
    1f28:	4bb6      	ldr	r3, [pc, #728]	; (2204 <STACK_SIZE+0x204>)
    1f2a:	4798      	blx	r3
	HostMemWriteWord(REG_VSYNC0, 0); 
    1f2c:	4bbf      	ldr	r3, [pc, #764]	; (222c <STACK_SIZE+0x22c>)
    1f2e:	2100      	movs	r1, #0
    1f30:	0018      	movs	r0, r3
    1f32:	4bb4      	ldr	r3, [pc, #720]	; (2204 <STACK_SIZE+0x204>)
    1f34:	4798      	blx	r3
	HostMemWriteWord(REG_VSYNC1, 10); 
    1f36:	4bbe      	ldr	r3, [pc, #760]	; (2230 <STACK_SIZE+0x230>)
    1f38:	210a      	movs	r1, #10
    1f3a:	0018      	movs	r0, r3
    1f3c:	4bb1      	ldr	r3, [pc, #708]	; (2204 <STACK_SIZE+0x204>)
    1f3e:	4798      	blx	r3
	HostMemWriteByte(REG_SWIZZLE, 0); 
    1f40:	4bbc      	ldr	r3, [pc, #752]	; (2234 <STACK_SIZE+0x234>)
    1f42:	2100      	movs	r1, #0
    1f44:	0018      	movs	r0, r3
    1f46:	4bad      	ldr	r3, [pc, #692]	; (21fc <STACK_SIZE+0x1fc>)
    1f48:	4798      	blx	r3
	HostMemWriteByte(REG_PCLK_POL, 1); 
    1f4a:	4bbb      	ldr	r3, [pc, #748]	; (2238 <STACK_SIZE+0x238>)
    1f4c:	2101      	movs	r1, #1
    1f4e:	0018      	movs	r0, r3
    1f50:	4baa      	ldr	r3, [pc, #680]	; (21fc <STACK_SIZE+0x1fc>)
    1f52:	4798      	blx	r3

	/* write first display list */ 
	HostMemWriteDoubleWord( RAM_DL+0,DL_CLEAR_RGB );
    1f54:	2380      	movs	r3, #128	; 0x80
    1f56:	049a      	lsls	r2, r3, #18
    1f58:	23c0      	movs	r3, #192	; 0xc0
    1f5a:	039b      	lsls	r3, r3, #14
    1f5c:	0011      	movs	r1, r2
    1f5e:	0018      	movs	r0, r3
    1f60:	4bb6      	ldr	r3, [pc, #728]	; (223c <STACK_SIZE+0x23c>)
    1f62:	4798      	blx	r3
	HostMemWriteDoubleWord( RAM_DL+4,DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG );
    1f64:	4ab6      	ldr	r2, [pc, #728]	; (2240 <STACK_SIZE+0x240>)
    1f66:	4bb7      	ldr	r3, [pc, #732]	; (2244 <STACK_SIZE+0x244>)
    1f68:	0011      	movs	r1, r2
    1f6a:	0018      	movs	r0, r3
    1f6c:	4bb3      	ldr	r3, [pc, #716]	; (223c <STACK_SIZE+0x23c>)
    1f6e:	4798      	blx	r3
	HostMemWriteDoubleWord( RAM_DL+8,DL_DISPLAY );
    1f70:	4bb5      	ldr	r3, [pc, #724]	; (2248 <STACK_SIZE+0x248>)
    1f72:	2100      	movs	r1, #0
    1f74:	0018      	movs	r0, r3
    1f76:	4bb1      	ldr	r3, [pc, #708]	; (223c <STACK_SIZE+0x23c>)
    1f78:	4798      	blx	r3

	HostMemWriteByte(REG_DLSWAP, DLSWAP_FRAME);
    1f7a:	4bb4      	ldr	r3, [pc, #720]	; (224c <STACK_SIZE+0x24c>)
    1f7c:	2102      	movs	r1, #2
    1f7e:	0018      	movs	r0, r3
    1f80:	4b9e      	ldr	r3, [pc, #632]	; (21fc <STACK_SIZE+0x1fc>)
    1f82:	4798      	blx	r3

	HostMemWriteByte(REG_GPIO_DIR, 0x80); 
    1f84:	4bb2      	ldr	r3, [pc, #712]	; (2250 <STACK_SIZE+0x250>)
    1f86:	2180      	movs	r1, #128	; 0x80
    1f88:	0018      	movs	r0, r3
    1f8a:	4b9c      	ldr	r3, [pc, #624]	; (21fc <STACK_SIZE+0x1fc>)
    1f8c:	4798      	blx	r3
	HostMemWriteByte(REG_GPIO, 0x80); 
    1f8e:	4bb1      	ldr	r3, [pc, #708]	; (2254 <STACK_SIZE+0x254>)
    1f90:	2180      	movs	r1, #128	; 0x80
    1f92:	0018      	movs	r0, r3
    1f94:	4b99      	ldr	r3, [pc, #612]	; (21fc <STACK_SIZE+0x1fc>)
    1f96:	4798      	blx	r3
	HostMemWriteByte(REG_PWM_DUTY, 128); 
    1f98:	4baf      	ldr	r3, [pc, #700]	; (2258 <STACK_SIZE+0x258>)
    1f9a:	2180      	movs	r1, #128	; 0x80
    1f9c:	0018      	movs	r0, r3
    1f9e:	4b97      	ldr	r3, [pc, #604]	; (21fc <STACK_SIZE+0x1fc>)
    1fa0:	4798      	blx	r3

	HostMemWriteByte(REG_PCLK, 7);
    1fa2:	4bae      	ldr	r3, [pc, #696]	; (225c <STACK_SIZE+0x25c>)
    1fa4:	2107      	movs	r1, #7
    1fa6:	0018      	movs	r0, r3
    1fa8:	4b94      	ldr	r3, [pc, #592]	; (21fc <STACK_SIZE+0x1fc>)
    1faa:	4798      	blx	r3
	HostMemWriteByte(REG_PWM_DUTY, 64);
    1fac:	4baa      	ldr	r3, [pc, #680]	; (2258 <STACK_SIZE+0x258>)
    1fae:	2140      	movs	r1, #64	; 0x40
    1fb0:	0018      	movs	r0, r3
    1fb2:	4b92      	ldr	r3, [pc, #584]	; (21fc <STACK_SIZE+0x1fc>)
    1fb4:	4798      	blx	r3

	do
	{
		cmdBufferRd = HostMemReadWord(REG_CMD_READ);
    1fb6:	4b92      	ldr	r3, [pc, #584]	; (2200 <STACK_SIZE+0x200>)
    1fb8:	0018      	movs	r0, r3
    1fba:	4ba9      	ldr	r3, [pc, #676]	; (2260 <STACK_SIZE+0x260>)
    1fbc:	4798      	blx	r3
    1fbe:	0003      	movs	r3, r0
    1fc0:	22ba      	movs	r2, #186	; 0xba
    1fc2:	0092      	lsls	r2, r2, #2
    1fc4:	18ba      	adds	r2, r7, r2
    1fc6:	6013      	str	r3, [r2, #0]
		cmdBufferWr = HostMemReadWord(REG_CMD_WRITE);
    1fc8:	4b8f      	ldr	r3, [pc, #572]	; (2208 <STACK_SIZE+0x208>)
    1fca:	0018      	movs	r0, r3
    1fcc:	4ba4      	ldr	r3, [pc, #656]	; (2260 <STACK_SIZE+0x260>)
    1fce:	4798      	blx	r3
    1fd0:	0003      	movs	r3, r0
    1fd2:	22b9      	movs	r2, #185	; 0xb9
    1fd4:	0092      	lsls	r2, r2, #2
    1fd6:	18ba      	adds	r2, r7, r2
    1fd8:	6013      	str	r3, [r2, #0]
	}while (cmdBufferWr != cmdBufferRd);
    1fda:	23b9      	movs	r3, #185	; 0xb9
    1fdc:	009b      	lsls	r3, r3, #2
    1fde:	18fb      	adds	r3, r7, r3
    1fe0:	681a      	ldr	r2, [r3, #0]
    1fe2:	23ba      	movs	r3, #186	; 0xba
    1fe4:	009b      	lsls	r3, r3, #2
    1fe6:	18fb      	adds	r3, r7, r3
    1fe8:	681b      	ldr	r3, [r3, #0]
    1fea:	429a      	cmp	r2, r3
    1fec:	d1e3      	bne.n	1fb6 <main+0x1fa>
	cmdOffset = cmdBufferWr;
    1fee:	4b9d      	ldr	r3, [pc, #628]	; (2264 <STACK_SIZE+0x264>)
    1ff0:	22b9      	movs	r2, #185	; 0xb9
    1ff2:	0092      	lsls	r2, r2, #2
    1ff4:	18ba      	adds	r2, r7, r2
    1ff6:	6812      	ldr	r2, [r2, #0]
    1ff8:	601a      	str	r2, [r3, #0]


	int x,y;
	struct AnimeImage SpriteImage;
	int id[20];
	unsigned short rnd_dir = 0;
    1ffa:	4b9b      	ldr	r3, [pc, #620]	; (2268 <STACK_SIZE+0x268>)
    1ffc:	18fb      	adds	r3, r7, r3
    1ffe:	2200      	movs	r2, #0
    2000:	801a      	strh	r2, [r3, #0]

	InflateLoad( &SampleSprite[0], RAM_G+0x00000000, (SIZE_OF_SPRITE+3)/4*4 );
    2002:	4a9a      	ldr	r2, [pc, #616]	; (226c <STACK_SIZE+0x26c>)
    2004:	4b9a      	ldr	r3, [pc, #616]	; (2270 <STACK_SIZE+0x270>)
    2006:	2100      	movs	r1, #0
    2008:	0018      	movs	r0, r3
    200a:	4b9a      	ldr	r3, [pc, #616]	; (2274 <STACK_SIZE+0x274>)
    200c:	4798      	blx	r3
//Entry
	AnimetionImageinit( &SpriteImage, 0x00000000, 256, 256, 2 );
    200e:	2380      	movs	r3, #128	; 0x80
    2010:	0059      	lsls	r1, r3, #1
    2012:	2380      	movs	r3, #128	; 0x80
    2014:	005a      	lsls	r2, r3, #1
    2016:	2354      	movs	r3, #84	; 0x54
    2018:	18f8      	adds	r0, r7, r3
    201a:	2302      	movs	r3, #2
    201c:	9300      	str	r3, [sp, #0]
    201e:	000b      	movs	r3, r1
    2020:	2100      	movs	r1, #0
    2022:	4c95      	ldr	r4, [pc, #596]	; (2278 <STACK_SIZE+0x278>)
    2024:	47a0      	blx	r4


	id[0] = AnimetionAlloc( &SpriteImage, &PL1S );
    2026:	4a95      	ldr	r2, [pc, #596]	; (227c <STACK_SIZE+0x27c>)
    2028:	2354      	movs	r3, #84	; 0x54
    202a:	18fb      	adds	r3, r7, r3
    202c:	0011      	movs	r1, r2
    202e:	0018      	movs	r0, r3
    2030:	4b93      	ldr	r3, [pc, #588]	; (2280 <STACK_SIZE+0x280>)
    2032:	4798      	blx	r3
    2034:	0002      	movs	r2, r0
    2036:	4b93      	ldr	r3, [pc, #588]	; (2284 <STACK_SIZE+0x284>)
    2038:	21bc      	movs	r1, #188	; 0xbc
    203a:	0089      	lsls	r1, r1, #2
    203c:	468c      	mov	ip, r1
    203e:	44bc      	add	ip, r7
    2040:	4463      	add	r3, ip
    2042:	601a      	str	r2, [r3, #0]
	id[1] = AnimetionAlloc( &SpriteImage, &PL1W );
    2044:	4a90      	ldr	r2, [pc, #576]	; (2288 <STACK_SIZE+0x288>)
    2046:	2354      	movs	r3, #84	; 0x54
    2048:	18fb      	adds	r3, r7, r3
    204a:	0011      	movs	r1, r2
    204c:	0018      	movs	r0, r3
    204e:	4b8c      	ldr	r3, [pc, #560]	; (2280 <STACK_SIZE+0x280>)
    2050:	4798      	blx	r3
    2052:	0002      	movs	r2, r0
    2054:	4b8b      	ldr	r3, [pc, #556]	; (2284 <STACK_SIZE+0x284>)
    2056:	21bc      	movs	r1, #188	; 0xbc
    2058:	0089      	lsls	r1, r1, #2
    205a:	468c      	mov	ip, r1
    205c:	44bc      	add	ip, r7
    205e:	4463      	add	r3, ip
    2060:	605a      	str	r2, [r3, #4]
	id[2] = AnimetionAlloc( &SpriteImage, &PL1N );
    2062:	4a8a      	ldr	r2, [pc, #552]	; (228c <STACK_SIZE+0x28c>)
    2064:	2354      	movs	r3, #84	; 0x54
    2066:	18fb      	adds	r3, r7, r3
    2068:	0011      	movs	r1, r2
    206a:	0018      	movs	r0, r3
    206c:	4b84      	ldr	r3, [pc, #528]	; (2280 <STACK_SIZE+0x280>)
    206e:	4798      	blx	r3
    2070:	0002      	movs	r2, r0
    2072:	4b84      	ldr	r3, [pc, #528]	; (2284 <STACK_SIZE+0x284>)
    2074:	21bc      	movs	r1, #188	; 0xbc
    2076:	0089      	lsls	r1, r1, #2
    2078:	468c      	mov	ip, r1
    207a:	44bc      	add	ip, r7
    207c:	4463      	add	r3, ip
    207e:	609a      	str	r2, [r3, #8]
	id[3] = AnimetionAlloc( &SpriteImage, &PL1E );
    2080:	4a83      	ldr	r2, [pc, #524]	; (2290 <STACK_SIZE+0x290>)
    2082:	2354      	movs	r3, #84	; 0x54
    2084:	18fb      	adds	r3, r7, r3
    2086:	0011      	movs	r1, r2
    2088:	0018      	movs	r0, r3
    208a:	4b7d      	ldr	r3, [pc, #500]	; (2280 <STACK_SIZE+0x280>)
    208c:	4798      	blx	r3
    208e:	0002      	movs	r2, r0
    2090:	4b7c      	ldr	r3, [pc, #496]	; (2284 <STACK_SIZE+0x284>)
    2092:	21bc      	movs	r1, #188	; 0xbc
    2094:	0089      	lsls	r1, r1, #2
    2096:	468c      	mov	ip, r1
    2098:	44bc      	add	ip, r7
    209a:	4463      	add	r3, ip
    209c:	60da      	str	r2, [r3, #12]

	id[4] = AnimetionAlloc( &SpriteImage, &PL2S );
    209e:	4a7d      	ldr	r2, [pc, #500]	; (2294 <STACK_SIZE+0x294>)
    20a0:	2354      	movs	r3, #84	; 0x54
    20a2:	18fb      	adds	r3, r7, r3
    20a4:	0011      	movs	r1, r2
    20a6:	0018      	movs	r0, r3
    20a8:	4b75      	ldr	r3, [pc, #468]	; (2280 <STACK_SIZE+0x280>)
    20aa:	4798      	blx	r3
    20ac:	0002      	movs	r2, r0
    20ae:	4b75      	ldr	r3, [pc, #468]	; (2284 <STACK_SIZE+0x284>)
    20b0:	21bc      	movs	r1, #188	; 0xbc
    20b2:	0089      	lsls	r1, r1, #2
    20b4:	468c      	mov	ip, r1
    20b6:	44bc      	add	ip, r7
    20b8:	4463      	add	r3, ip
    20ba:	611a      	str	r2, [r3, #16]
	id[5] = AnimetionAlloc( &SpriteImage, &PL2W );
    20bc:	4a76      	ldr	r2, [pc, #472]	; (2298 <STACK_SIZE+0x298>)
    20be:	2354      	movs	r3, #84	; 0x54
    20c0:	18fb      	adds	r3, r7, r3
    20c2:	0011      	movs	r1, r2
    20c4:	0018      	movs	r0, r3
    20c6:	4b6e      	ldr	r3, [pc, #440]	; (2280 <STACK_SIZE+0x280>)
    20c8:	4798      	blx	r3
    20ca:	0002      	movs	r2, r0
    20cc:	4b6d      	ldr	r3, [pc, #436]	; (2284 <STACK_SIZE+0x284>)
    20ce:	21bc      	movs	r1, #188	; 0xbc
    20d0:	0089      	lsls	r1, r1, #2
    20d2:	468c      	mov	ip, r1
    20d4:	44bc      	add	ip, r7
    20d6:	4463      	add	r3, ip
    20d8:	615a      	str	r2, [r3, #20]
	id[6] = AnimetionAlloc( &SpriteImage, &PL2N );
    20da:	4a70      	ldr	r2, [pc, #448]	; (229c <STACK_SIZE+0x29c>)
    20dc:	2354      	movs	r3, #84	; 0x54
    20de:	18fb      	adds	r3, r7, r3
    20e0:	0011      	movs	r1, r2
    20e2:	0018      	movs	r0, r3
    20e4:	4b66      	ldr	r3, [pc, #408]	; (2280 <STACK_SIZE+0x280>)
    20e6:	4798      	blx	r3
    20e8:	0002      	movs	r2, r0
    20ea:	4b66      	ldr	r3, [pc, #408]	; (2284 <STACK_SIZE+0x284>)
    20ec:	21bc      	movs	r1, #188	; 0xbc
    20ee:	0089      	lsls	r1, r1, #2
    20f0:	468c      	mov	ip, r1
    20f2:	44bc      	add	ip, r7
    20f4:	4463      	add	r3, ip
    20f6:	619a      	str	r2, [r3, #24]
	id[7] = AnimetionAlloc( &SpriteImage, &PL2E );
    20f8:	4a69      	ldr	r2, [pc, #420]	; (22a0 <STACK_SIZE+0x2a0>)
    20fa:	2354      	movs	r3, #84	; 0x54
    20fc:	18fb      	adds	r3, r7, r3
    20fe:	0011      	movs	r1, r2
    2100:	0018      	movs	r0, r3
    2102:	4b5f      	ldr	r3, [pc, #380]	; (2280 <STACK_SIZE+0x280>)
    2104:	4798      	blx	r3
    2106:	0002      	movs	r2, r0
    2108:	4b5e      	ldr	r3, [pc, #376]	; (2284 <STACK_SIZE+0x284>)
    210a:	21bc      	movs	r1, #188	; 0xbc
    210c:	0089      	lsls	r1, r1, #2
    210e:	468c      	mov	ip, r1
    2110:	44bc      	add	ip, r7
    2112:	4463      	add	r3, ip
    2114:	61da      	str	r2, [r3, #28]

	id[8] = AnimetionAlloc( &SpriteImage, &PL3S );
    2116:	4a63      	ldr	r2, [pc, #396]	; (22a4 <STACK_SIZE+0x2a4>)
    2118:	2354      	movs	r3, #84	; 0x54
    211a:	18fb      	adds	r3, r7, r3
    211c:	0011      	movs	r1, r2
    211e:	0018      	movs	r0, r3
    2120:	4b57      	ldr	r3, [pc, #348]	; (2280 <STACK_SIZE+0x280>)
    2122:	4798      	blx	r3
    2124:	0002      	movs	r2, r0
    2126:	4b57      	ldr	r3, [pc, #348]	; (2284 <STACK_SIZE+0x284>)
    2128:	21bc      	movs	r1, #188	; 0xbc
    212a:	0089      	lsls	r1, r1, #2
    212c:	468c      	mov	ip, r1
    212e:	44bc      	add	ip, r7
    2130:	4463      	add	r3, ip
    2132:	621a      	str	r2, [r3, #32]
	id[9] = AnimetionAlloc( &SpriteImage, &PL3W );
    2134:	4a5c      	ldr	r2, [pc, #368]	; (22a8 <STACK_SIZE+0x2a8>)
    2136:	2354      	movs	r3, #84	; 0x54
    2138:	18fb      	adds	r3, r7, r3
    213a:	0011      	movs	r1, r2
    213c:	0018      	movs	r0, r3
    213e:	4b50      	ldr	r3, [pc, #320]	; (2280 <STACK_SIZE+0x280>)
    2140:	4798      	blx	r3
    2142:	0002      	movs	r2, r0
    2144:	4b4f      	ldr	r3, [pc, #316]	; (2284 <STACK_SIZE+0x284>)
    2146:	21bc      	movs	r1, #188	; 0xbc
    2148:	0089      	lsls	r1, r1, #2
    214a:	468c      	mov	ip, r1
    214c:	44bc      	add	ip, r7
    214e:	4463      	add	r3, ip
    2150:	625a      	str	r2, [r3, #36]	; 0x24
	id[10] = AnimetionAlloc( &SpriteImage, &PL3N );
    2152:	4a56      	ldr	r2, [pc, #344]	; (22ac <STACK_SIZE+0x2ac>)
    2154:	2354      	movs	r3, #84	; 0x54
    2156:	18fb      	adds	r3, r7, r3
    2158:	0011      	movs	r1, r2
    215a:	0018      	movs	r0, r3
    215c:	4b48      	ldr	r3, [pc, #288]	; (2280 <STACK_SIZE+0x280>)
    215e:	4798      	blx	r3
    2160:	0002      	movs	r2, r0
    2162:	4b48      	ldr	r3, [pc, #288]	; (2284 <STACK_SIZE+0x284>)
    2164:	21bc      	movs	r1, #188	; 0xbc
    2166:	0089      	lsls	r1, r1, #2
    2168:	468c      	mov	ip, r1
    216a:	44bc      	add	ip, r7
    216c:	4463      	add	r3, ip
    216e:	629a      	str	r2, [r3, #40]	; 0x28
	id[11] = AnimetionAlloc( &SpriteImage, &PL3E );
    2170:	4a4f      	ldr	r2, [pc, #316]	; (22b0 <STACK_SIZE+0x2b0>)
    2172:	2354      	movs	r3, #84	; 0x54
    2174:	18fb      	adds	r3, r7, r3
    2176:	0011      	movs	r1, r2
    2178:	0018      	movs	r0, r3
    217a:	4b41      	ldr	r3, [pc, #260]	; (2280 <STACK_SIZE+0x280>)
    217c:	4798      	blx	r3
    217e:	0002      	movs	r2, r0
    2180:	4b40      	ldr	r3, [pc, #256]	; (2284 <STACK_SIZE+0x284>)
    2182:	21bc      	movs	r1, #188	; 0xbc
    2184:	0089      	lsls	r1, r1, #2
    2186:	468c      	mov	ip, r1
    2188:	44bc      	add	ip, r7
    218a:	4463      	add	r3, ip
    218c:	62da      	str	r2, [r3, #44]	; 0x2c

	id[12] = AnimetionAlloc( &SpriteImage, &PL4S );
    218e:	4a49      	ldr	r2, [pc, #292]	; (22b4 <STACK_SIZE+0x2b4>)
    2190:	2354      	movs	r3, #84	; 0x54
    2192:	18fb      	adds	r3, r7, r3
    2194:	0011      	movs	r1, r2
    2196:	0018      	movs	r0, r3
    2198:	4b39      	ldr	r3, [pc, #228]	; (2280 <STACK_SIZE+0x280>)
    219a:	4798      	blx	r3
    219c:	0002      	movs	r2, r0
    219e:	4b39      	ldr	r3, [pc, #228]	; (2284 <STACK_SIZE+0x284>)
    21a0:	21bc      	movs	r1, #188	; 0xbc
    21a2:	0089      	lsls	r1, r1, #2
    21a4:	468c      	mov	ip, r1
    21a6:	44bc      	add	ip, r7
    21a8:	4463      	add	r3, ip
    21aa:	631a      	str	r2, [r3, #48]	; 0x30
	id[13] = AnimetionAlloc( &SpriteImage, &PL4W );
    21ac:	4a42      	ldr	r2, [pc, #264]	; (22b8 <STACK_SIZE+0x2b8>)
    21ae:	2354      	movs	r3, #84	; 0x54
    21b0:	18fb      	adds	r3, r7, r3
    21b2:	e083      	b.n	22bc <STACK_SIZE+0x2bc>
    21b4:	fffffd08 	.word	0xfffffd08
    21b8:	00001081 	.word	0x00001081
    21bc:	000011f9 	.word	0x000011f9
    21c0:	0000171d 	.word	0x0000171d
    21c4:	00000931 	.word	0x00000931
    21c8:	00001645 	.word	0x00001645
    21cc:	200000d0 	.word	0x200000d0
    21d0:	00000a05 	.word	0x00000a05
    21d4:	200000d4 	.word	0x200000d4
    21d8:	200000d8 	.word	0x200000d8
    21dc:	200000dc 	.word	0x200000dc
    21e0:	42001000 	.word	0x42001000
    21e4:	00000bb9 	.word	0x00000bb9
    21e8:	00000b99 	.word	0x00000b99
    21ec:	000186a0 	.word	0x000186a0
    21f0:	000016d5 	.word	0x000016d5
    21f4:	00000155 	.word	0x00000155
    21f8:	00302020 	.word	0x00302020
    21fc:	000001b5 	.word	0x000001b5
    2200:	003020f8 	.word	0x003020f8
    2204:	0000021d 	.word	0x0000021d
    2208:	003020fc 	.word	0x003020fc
    220c:	00302034 	.word	0x00302034
    2210:	0030202c 	.word	0x0030202c
    2214:	00302030 	.word	0x00302030
    2218:	00302038 	.word	0x00302038
    221c:	0030203c 	.word	0x0030203c
    2220:	00302048 	.word	0x00302048
    2224:	00302040 	.word	0x00302040
    2228:	00302044 	.word	0x00302044
    222c:	0030204c 	.word	0x0030204c
    2230:	00302050 	.word	0x00302050
    2234:	00302064 	.word	0x00302064
    2238:	0030206c 	.word	0x0030206c
    223c:	00000295 	.word	0x00000295
    2240:	26000007 	.word	0x26000007
    2244:	00300004 	.word	0x00300004
    2248:	00300008 	.word	0x00300008
    224c:	00302054 	.word	0x00302054
    2250:	00302090 	.word	0x00302090
    2254:	00302094 	.word	0x00302094
    2258:	003020d4 	.word	0x003020d4
    225c:	00302070 	.word	0x00302070
    2260:	00000355 	.word	0x00000355
    2264:	20000488 	.word	0x20000488
    2268:	000002e2 	.word	0x000002e2
    226c:	00005ba0 	.word	0x00005ba0
    2270:	000029a8 	.word	0x000029a8
    2274:	000006c1 	.word	0x000006c1
    2278:	00001785 	.word	0x00001785
    227c:	00008544 	.word	0x00008544
    2280:	00001855 	.word	0x00001855
    2284:	fffffd14 	.word	0xfffffd14
    2288:	00008554 	.word	0x00008554
    228c:	0000854c 	.word	0x0000854c
    2290:	0000855c 	.word	0x0000855c
    2294:	00008564 	.word	0x00008564
    2298:	00008574 	.word	0x00008574
    229c:	0000856c 	.word	0x0000856c
    22a0:	0000857c 	.word	0x0000857c
    22a4:	00008584 	.word	0x00008584
    22a8:	00008594 	.word	0x00008594
    22ac:	0000858c 	.word	0x0000858c
    22b0:	0000859c 	.word	0x0000859c
    22b4:	000085a4 	.word	0x000085a4
    22b8:	000085b4 	.word	0x000085b4
    22bc:	0011      	movs	r1, r2
    22be:	0018      	movs	r0, r3
    22c0:	4b8d      	ldr	r3, [pc, #564]	; (24f8 <STACK_SIZE+0x4f8>)
    22c2:	4798      	blx	r3
    22c4:	0002      	movs	r2, r0
    22c6:	4b8d      	ldr	r3, [pc, #564]	; (24fc <STACK_SIZE+0x4fc>)
    22c8:	21bc      	movs	r1, #188	; 0xbc
    22ca:	0089      	lsls	r1, r1, #2
    22cc:	468c      	mov	ip, r1
    22ce:	44bc      	add	ip, r7
    22d0:	4463      	add	r3, ip
    22d2:	635a      	str	r2, [r3, #52]	; 0x34
	id[14] = AnimetionAlloc( &SpriteImage, &PL4N );
    22d4:	4a8a      	ldr	r2, [pc, #552]	; (2500 <STACK_SIZE+0x500>)
    22d6:	2354      	movs	r3, #84	; 0x54
    22d8:	18fb      	adds	r3, r7, r3
    22da:	0011      	movs	r1, r2
    22dc:	0018      	movs	r0, r3
    22de:	4b86      	ldr	r3, [pc, #536]	; (24f8 <STACK_SIZE+0x4f8>)
    22e0:	4798      	blx	r3
    22e2:	0002      	movs	r2, r0
    22e4:	4b85      	ldr	r3, [pc, #532]	; (24fc <STACK_SIZE+0x4fc>)
    22e6:	21bc      	movs	r1, #188	; 0xbc
    22e8:	0089      	lsls	r1, r1, #2
    22ea:	468c      	mov	ip, r1
    22ec:	44bc      	add	ip, r7
    22ee:	4463      	add	r3, ip
    22f0:	639a      	str	r2, [r3, #56]	; 0x38
	id[15] = AnimetionAlloc( &SpriteImage, &PL4E );
    22f2:	4a84      	ldr	r2, [pc, #528]	; (2504 <STACK_SIZE+0x504>)
    22f4:	2354      	movs	r3, #84	; 0x54
    22f6:	18fb      	adds	r3, r7, r3
    22f8:	0011      	movs	r1, r2
    22fa:	0018      	movs	r0, r3
    22fc:	4b7e      	ldr	r3, [pc, #504]	; (24f8 <STACK_SIZE+0x4f8>)
    22fe:	4798      	blx	r3
    2300:	0002      	movs	r2, r0
    2302:	4b7e      	ldr	r3, [pc, #504]	; (24fc <STACK_SIZE+0x4fc>)
    2304:	21bc      	movs	r1, #188	; 0xbc
    2306:	0089      	lsls	r1, r1, #2
    2308:	468c      	mov	ip, r1
    230a:	44bc      	add	ip, r7
    230c:	4463      	add	r3, ip
    230e:	63da      	str	r2, [r3, #60]	; 0x3c

	for( i=0;i<COUNT_OF_MAN;i++ )
    2310:	2300      	movs	r3, #0
    2312:	22bb      	movs	r2, #187	; 0xbb
    2314:	0092      	lsls	r2, r2, #2
    2316:	18ba      	adds	r2, r7, r2
    2318:	6013      	str	r3, [r2, #0]
    231a:	e07f      	b.n	241c <STACK_SIZE+0x41c>
	{
		man[i].x = 240;
    231c:	497a      	ldr	r1, [pc, #488]	; (2508 <STACK_SIZE+0x508>)
    231e:	23bb      	movs	r3, #187	; 0xbb
    2320:	009b      	lsls	r3, r3, #2
    2322:	18fb      	adds	r3, r7, r3
    2324:	681a      	ldr	r2, [r3, #0]
    2326:	0013      	movs	r3, r2
    2328:	005b      	lsls	r3, r3, #1
    232a:	189b      	adds	r3, r3, r2
    232c:	00db      	lsls	r3, r3, #3
    232e:	22f0      	movs	r2, #240	; 0xf0
    2330:	525a      	strh	r2, [r3, r1]
		man[i].y = 135;
    2332:	4975      	ldr	r1, [pc, #468]	; (2508 <STACK_SIZE+0x508>)
    2334:	23bb      	movs	r3, #187	; 0xbb
    2336:	009b      	lsls	r3, r3, #2
    2338:	18fb      	adds	r3, r7, r3
    233a:	681a      	ldr	r2, [r3, #0]
    233c:	0013      	movs	r3, r2
    233e:	005b      	lsls	r3, r3, #1
    2340:	189b      	adds	r3, r3, r2
    2342:	00db      	lsls	r3, r3, #3
    2344:	18cb      	adds	r3, r1, r3
    2346:	3302      	adds	r3, #2
    2348:	2287      	movs	r2, #135	; 0x87
    234a:	801a      	strh	r2, [r3, #0]

		rnd_dir = rand();
    234c:	4b6f      	ldr	r3, [pc, #444]	; (250c <STACK_SIZE+0x50c>)
    234e:	4798      	blx	r3
    2350:	0002      	movs	r2, r0
    2352:	4b6f      	ldr	r3, [pc, #444]	; (2510 <STACK_SIZE+0x510>)
    2354:	18fb      	adds	r3, r7, r3
    2356:	801a      	strh	r2, [r3, #0]
		man[i].id_set = (rnd_dir & 0x03)*4;
    2358:	4b6d      	ldr	r3, [pc, #436]	; (2510 <STACK_SIZE+0x510>)
    235a:	18fb      	adds	r3, r7, r3
    235c:	881b      	ldrh	r3, [r3, #0]
    235e:	2203      	movs	r2, #3
    2360:	4013      	ands	r3, r2
    2362:	0099      	lsls	r1, r3, #2
    2364:	4868      	ldr	r0, [pc, #416]	; (2508 <STACK_SIZE+0x508>)
    2366:	23bb      	movs	r3, #187	; 0xbb
    2368:	009b      	lsls	r3, r3, #2
    236a:	18fb      	adds	r3, r7, r3
    236c:	681a      	ldr	r2, [r3, #0]
    236e:	0013      	movs	r3, r2
    2370:	005b      	lsls	r3, r3, #1
    2372:	189b      	adds	r3, r3, r2
    2374:	00db      	lsls	r3, r3, #3
    2376:	18c3      	adds	r3, r0, r3
    2378:	3304      	adds	r3, #4
    237a:	6019      	str	r1, [r3, #0]

		man[i].dir = DIR_E;
    237c:	4962      	ldr	r1, [pc, #392]	; (2508 <STACK_SIZE+0x508>)
    237e:	23bb      	movs	r3, #187	; 0xbb
    2380:	009b      	lsls	r3, r3, #2
    2382:	18fb      	adds	r3, r7, r3
    2384:	681a      	ldr	r2, [r3, #0]
    2386:	0013      	movs	r3, r2
    2388:	005b      	lsls	r3, r3, #1
    238a:	189b      	adds	r3, r3, r2
    238c:	00db      	lsls	r3, r3, #3
    238e:	18cb      	adds	r3, r1, r3
    2390:	3308      	adds	r3, #8
    2392:	2203      	movs	r2, #3
    2394:	601a      	str	r2, [r3, #0]
		man[i].delta_x = 0;
    2396:	495c      	ldr	r1, [pc, #368]	; (2508 <STACK_SIZE+0x508>)
    2398:	23bb      	movs	r3, #187	; 0xbb
    239a:	009b      	lsls	r3, r3, #2
    239c:	18fb      	adds	r3, r7, r3
    239e:	681a      	ldr	r2, [r3, #0]
    23a0:	0013      	movs	r3, r2
    23a2:	005b      	lsls	r3, r3, #1
    23a4:	189b      	adds	r3, r3, r2
    23a6:	00db      	lsls	r3, r3, #3
    23a8:	18cb      	adds	r3, r1, r3
    23aa:	330c      	adds	r3, #12
    23ac:	2200      	movs	r2, #0
    23ae:	801a      	strh	r2, [r3, #0]
		man[i].delta_y = 0; 
    23b0:	4955      	ldr	r1, [pc, #340]	; (2508 <STACK_SIZE+0x508>)
    23b2:	23bb      	movs	r3, #187	; 0xbb
    23b4:	009b      	lsls	r3, r3, #2
    23b6:	18fb      	adds	r3, r7, r3
    23b8:	681a      	ldr	r2, [r3, #0]
    23ba:	0013      	movs	r3, r2
    23bc:	005b      	lsls	r3, r3, #1
    23be:	189b      	adds	r3, r3, r2
    23c0:	00db      	lsls	r3, r3, #3
    23c2:	18cb      	adds	r3, r1, r3
    23c4:	330e      	adds	r3, #14
    23c6:	2200      	movs	r2, #0
    23c8:	801a      	strh	r2, [r3, #0]
		man[i].timer = 16;
    23ca:	494f      	ldr	r1, [pc, #316]	; (2508 <STACK_SIZE+0x508>)
    23cc:	23bb      	movs	r3, #187	; 0xbb
    23ce:	009b      	lsls	r3, r3, #2
    23d0:	18fb      	adds	r3, r7, r3
    23d2:	681a      	ldr	r2, [r3, #0]
    23d4:	0013      	movs	r3, r2
    23d6:	005b      	lsls	r3, r3, #1
    23d8:	189b      	adds	r3, r3, r2
    23da:	00db      	lsls	r3, r3, #3
    23dc:	18cb      	adds	r3, r1, r3
    23de:	3310      	adds	r3, #16
    23e0:	2210      	movs	r2, #16
    23e2:	601a      	str	r2, [r3, #0]

		rnd_dir = rand();
    23e4:	4b49      	ldr	r3, [pc, #292]	; (250c <STACK_SIZE+0x50c>)
    23e6:	4798      	blx	r3
    23e8:	0002      	movs	r2, r0
    23ea:	4b49      	ldr	r3, [pc, #292]	; (2510 <STACK_SIZE+0x510>)
    23ec:	18fb      	adds	r3, r7, r3
    23ee:	801a      	strh	r2, [r3, #0]
		man[i].speed = 1;// * (rnd_dir & 0x0007)+1;
    23f0:	4945      	ldr	r1, [pc, #276]	; (2508 <STACK_SIZE+0x508>)
    23f2:	23bb      	movs	r3, #187	; 0xbb
    23f4:	009b      	lsls	r3, r3, #2
    23f6:	18fb      	adds	r3, r7, r3
    23f8:	681a      	ldr	r2, [r3, #0]
    23fa:	0013      	movs	r3, r2
    23fc:	005b      	lsls	r3, r3, #1
    23fe:	189b      	adds	r3, r3, r2
    2400:	00db      	lsls	r3, r3, #3
    2402:	18cb      	adds	r3, r1, r3
    2404:	3314      	adds	r3, #20
    2406:	2201      	movs	r2, #1
    2408:	601a      	str	r2, [r3, #0]
	id[12] = AnimetionAlloc( &SpriteImage, &PL4S );
	id[13] = AnimetionAlloc( &SpriteImage, &PL4W );
	id[14] = AnimetionAlloc( &SpriteImage, &PL4N );
	id[15] = AnimetionAlloc( &SpriteImage, &PL4E );

	for( i=0;i<COUNT_OF_MAN;i++ )
    240a:	23bb      	movs	r3, #187	; 0xbb
    240c:	009b      	lsls	r3, r3, #2
    240e:	18fb      	adds	r3, r7, r3
    2410:	681b      	ldr	r3, [r3, #0]
    2412:	3301      	adds	r3, #1
    2414:	22bb      	movs	r2, #187	; 0xbb
    2416:	0092      	lsls	r2, r2, #2
    2418:	18ba      	adds	r2, r7, r2
    241a:	6013      	str	r3, [r2, #0]
    241c:	23bb      	movs	r3, #187	; 0xbb
    241e:	009b      	lsls	r3, r3, #2
    2420:	18fb      	adds	r3, r7, r3
    2422:	681b      	ldr	r3, [r3, #0]
    2424:	2b31      	cmp	r3, #49	; 0x31
    2426:	dc00      	bgt.n	242a <STACK_SIZE+0x42a>
    2428:	e778      	b.n	231c <STACK_SIZE+0x31c>
	}


	do
	{
		HostMemWriteDoubleWord( RAM_CMD + cmdOffset,(CMD_DLSTART) );
    242a:	4b3a      	ldr	r3, [pc, #232]	; (2514 <STACK_SIZE+0x514>)
    242c:	681b      	ldr	r3, [r3, #0]
    242e:	22c2      	movs	r2, #194	; 0xc2
    2430:	0392      	lsls	r2, r2, #14
    2432:	4694      	mov	ip, r2
    2434:	4463      	add	r3, ip
    2436:	4a38      	ldr	r2, [pc, #224]	; (2518 <STACK_SIZE+0x518>)
    2438:	0011      	movs	r1, r2
    243a:	0018      	movs	r0, r3
    243c:	4b37      	ldr	r3, [pc, #220]	; (251c <STACK_SIZE+0x51c>)
    243e:	4798      	blx	r3
		cmdOffset = incCMDOffset(cmdOffset, 4);
    2440:	4b34      	ldr	r3, [pc, #208]	; (2514 <STACK_SIZE+0x514>)
    2442:	681b      	ldr	r3, [r3, #0]
    2444:	2104      	movs	r1, #4
    2446:	0018      	movs	r0, r3
    2448:	4b35      	ldr	r3, [pc, #212]	; (2520 <STACK_SIZE+0x520>)
    244a:	4798      	blx	r3
    244c:	0002      	movs	r2, r0
    244e:	4b31      	ldr	r3, [pc, #196]	; (2514 <STACK_SIZE+0x514>)
    2450:	601a      	str	r2, [r3, #0]
		HostMemWriteDoubleWord( RAM_CMD + cmdOffset,(DL_CLEAR_RGB | BLACK) );
    2452:	4b30      	ldr	r3, [pc, #192]	; (2514 <STACK_SIZE+0x514>)
    2454:	681b      	ldr	r3, [r3, #0]
    2456:	22c2      	movs	r2, #194	; 0xc2
    2458:	0392      	lsls	r2, r2, #14
    245a:	189a      	adds	r2, r3, r2
    245c:	2380      	movs	r3, #128	; 0x80
    245e:	049b      	lsls	r3, r3, #18
    2460:	0019      	movs	r1, r3
    2462:	0010      	movs	r0, r2
    2464:	4b2d      	ldr	r3, [pc, #180]	; (251c <STACK_SIZE+0x51c>)
    2466:	4798      	blx	r3
		cmdOffset = incCMDOffset(cmdOffset, 4);
    2468:	4b2a      	ldr	r3, [pc, #168]	; (2514 <STACK_SIZE+0x514>)
    246a:	681b      	ldr	r3, [r3, #0]
    246c:	2104      	movs	r1, #4
    246e:	0018      	movs	r0, r3
    2470:	4b2b      	ldr	r3, [pc, #172]	; (2520 <STACK_SIZE+0x520>)
    2472:	4798      	blx	r3
    2474:	0002      	movs	r2, r0
    2476:	4b27      	ldr	r3, [pc, #156]	; (2514 <STACK_SIZE+0x514>)
    2478:	601a      	str	r2, [r3, #0]
		HostMemWriteDoubleWord( RAM_CMD + cmdOffset,(DL_CLEAR | CLR_COL | CLR_STN | CLR_TAG));
    247a:	4b26      	ldr	r3, [pc, #152]	; (2514 <STACK_SIZE+0x514>)
    247c:	681b      	ldr	r3, [r3, #0]
    247e:	22c2      	movs	r2, #194	; 0xc2
    2480:	0392      	lsls	r2, r2, #14
    2482:	4694      	mov	ip, r2
    2484:	4463      	add	r3, ip
    2486:	4a27      	ldr	r2, [pc, #156]	; (2524 <STACK_SIZE+0x524>)
    2488:	0011      	movs	r1, r2
    248a:	0018      	movs	r0, r3
    248c:	4b23      	ldr	r3, [pc, #140]	; (251c <STACK_SIZE+0x51c>)
    248e:	4798      	blx	r3
		cmdOffset = incCMDOffset(cmdOffset, 4);
    2490:	4b20      	ldr	r3, [pc, #128]	; (2514 <STACK_SIZE+0x514>)
    2492:	681b      	ldr	r3, [r3, #0]
    2494:	2104      	movs	r1, #4
    2496:	0018      	movs	r0, r3
    2498:	4b21      	ldr	r3, [pc, #132]	; (2520 <STACK_SIZE+0x520>)
    249a:	4798      	blx	r3
    249c:	0002      	movs	r2, r0
    249e:	4b1d      	ldr	r3, [pc, #116]	; (2514 <STACK_SIZE+0x514>)
    24a0:	601a      	str	r2, [r3, #0]
		HostMemWriteDoubleWord( RAM_CMD + cmdOffset, VERTEX_FORMAT(0) );
    24a2:	4b1c      	ldr	r3, [pc, #112]	; (2514 <STACK_SIZE+0x514>)
    24a4:	681b      	ldr	r3, [r3, #0]
    24a6:	22c2      	movs	r2, #194	; 0xc2
    24a8:	0392      	lsls	r2, r2, #14
    24aa:	189a      	adds	r2, r3, r2
    24ac:	239c      	movs	r3, #156	; 0x9c
    24ae:	059b      	lsls	r3, r3, #22
    24b0:	0019      	movs	r1, r3
    24b2:	0010      	movs	r0, r2
    24b4:	4b19      	ldr	r3, [pc, #100]	; (251c <STACK_SIZE+0x51c>)
    24b6:	4798      	blx	r3
		cmdOffset = incCMDOffset(cmdOffset, 4);
    24b8:	4b16      	ldr	r3, [pc, #88]	; (2514 <STACK_SIZE+0x514>)
    24ba:	681b      	ldr	r3, [r3, #0]
    24bc:	2104      	movs	r1, #4
    24be:	0018      	movs	r0, r3
    24c0:	4b17      	ldr	r3, [pc, #92]	; (2520 <STACK_SIZE+0x520>)
    24c2:	4798      	blx	r3
    24c4:	0002      	movs	r2, r0
    24c6:	4b13      	ldr	r3, [pc, #76]	; (2514 <STACK_SIZE+0x514>)
    24c8:	601a      	str	r2, [r3, #0]

//-------------------------
		AnimetionTaskDriver( &SpriteImage );
    24ca:	2354      	movs	r3, #84	; 0x54
    24cc:	18fb      	adds	r3, r7, r3
    24ce:	0018      	movs	r0, r3
    24d0:	4b15      	ldr	r3, [pc, #84]	; (2528 <STACK_SIZE+0x528>)
    24d2:	4798      	blx	r3

		AnimetionTrans( ANIME_CMD_START, 7, &SpriteImage, 0, 0, 0 );
    24d4:	2354      	movs	r3, #84	; 0x54
    24d6:	18fa      	adds	r2, r7, r3
    24d8:	2300      	movs	r3, #0
    24da:	9301      	str	r3, [sp, #4]
    24dc:	2300      	movs	r3, #0
    24de:	9300      	str	r3, [sp, #0]
    24e0:	2300      	movs	r3, #0
    24e2:	2107      	movs	r1, #7
    24e4:	2000      	movs	r0, #0
    24e6:	4c11      	ldr	r4, [pc, #68]	; (252c <STACK_SIZE+0x52c>)
    24e8:	47a0      	blx	r4
		for( i=0;i<COUNT_OF_MAN;i++ )
    24ea:	2300      	movs	r3, #0
    24ec:	22bb      	movs	r2, #187	; 0xbb
    24ee:	0092      	lsls	r2, r2, #2
    24f0:	18ba      	adds	r2, r7, r2
    24f2:	6013      	str	r3, [r2, #0]
    24f4:	e0cb      	b.n	268e <STACK_SIZE+0x68e>
    24f6:	46c0      	nop			; (mov r8, r8)
    24f8:	00001855 	.word	0x00001855
    24fc:	fffffd14 	.word	0xfffffd14
    2500:	000085ac 	.word	0x000085ac
    2504:	000085bc 	.word	0x000085bc
    2508:	20000494 	.word	0x20000494
    250c:	000027d1 	.word	0x000027d1
    2510:	000002e2 	.word	0x000002e2
    2514:	20000488 	.word	0x20000488
    2518:	ffffff00 	.word	0xffffff00
    251c:	00000295 	.word	0x00000295
    2520:	000003dd 	.word	0x000003dd
    2524:	26000007 	.word	0x26000007
    2528:	00001919 	.word	0x00001919
    252c:	000019ed 	.word	0x000019ed
		{
			sprite_move( &man[i] );
    2530:	23bb      	movs	r3, #187	; 0xbb
    2532:	009b      	lsls	r3, r3, #2
    2534:	18fb      	adds	r3, r7, r3
    2536:	681a      	ldr	r2, [r3, #0]
    2538:	0013      	movs	r3, r2
    253a:	005b      	lsls	r3, r3, #1
    253c:	189b      	adds	r3, r3, r2
    253e:	00db      	lsls	r3, r3, #3
    2540:	4a85      	ldr	r2, [pc, #532]	; (2758 <STACK_SIZE+0x758>)
    2542:	189b      	adds	r3, r3, r2
    2544:	0018      	movs	r0, r3
    2546:	4b85      	ldr	r3, [pc, #532]	; (275c <STACK_SIZE+0x75c>)
    2548:	4798      	blx	r3
			AnimetionTrans( ANIME_CMD_SET_SIZE, 7, &SpriteImage, 0, 0, id[man[i].id_set + man[i].dir] );
    254a:	4983      	ldr	r1, [pc, #524]	; (2758 <STACK_SIZE+0x758>)
    254c:	23bb      	movs	r3, #187	; 0xbb
    254e:	009b      	lsls	r3, r3, #2
    2550:	18fb      	adds	r3, r7, r3
    2552:	681a      	ldr	r2, [r3, #0]
    2554:	0013      	movs	r3, r2
    2556:	005b      	lsls	r3, r3, #1
    2558:	189b      	adds	r3, r3, r2
    255a:	00db      	lsls	r3, r3, #3
    255c:	18cb      	adds	r3, r1, r3
    255e:	3304      	adds	r3, #4
    2560:	6819      	ldr	r1, [r3, #0]
    2562:	487d      	ldr	r0, [pc, #500]	; (2758 <STACK_SIZE+0x758>)
    2564:	23bb      	movs	r3, #187	; 0xbb
    2566:	009b      	lsls	r3, r3, #2
    2568:	18fb      	adds	r3, r7, r3
    256a:	681a      	ldr	r2, [r3, #0]
    256c:	0013      	movs	r3, r2
    256e:	005b      	lsls	r3, r3, #1
    2570:	189b      	adds	r3, r3, r2
    2572:	00db      	lsls	r3, r3, #3
    2574:	18c3      	adds	r3, r0, r3
    2576:	3308      	adds	r3, #8
    2578:	681b      	ldr	r3, [r3, #0]
    257a:	18ca      	adds	r2, r1, r3
    257c:	4b78      	ldr	r3, [pc, #480]	; (2760 <STACK_SIZE+0x760>)
    257e:	21bc      	movs	r1, #188	; 0xbc
    2580:	0089      	lsls	r1, r1, #2
    2582:	468c      	mov	ip, r1
    2584:	44bc      	add	ip, r7
    2586:	4463      	add	r3, ip
    2588:	0092      	lsls	r2, r2, #2
    258a:	58d3      	ldr	r3, [r2, r3]
    258c:	2254      	movs	r2, #84	; 0x54
    258e:	18ba      	adds	r2, r7, r2
    2590:	9301      	str	r3, [sp, #4]
    2592:	2300      	movs	r3, #0
    2594:	9300      	str	r3, [sp, #0]
    2596:	2300      	movs	r3, #0
    2598:	2107      	movs	r1, #7
    259a:	2001      	movs	r0, #1
    259c:	4c71      	ldr	r4, [pc, #452]	; (2764 <STACK_SIZE+0x764>)
    259e:	47a0      	blx	r4
			AnimetionTrans( ANIME_CMD_SET_IMAGE, 7, &SpriteImage, 0, 0, id[man[i].id_set + man[i].dir] );
    25a0:	496d      	ldr	r1, [pc, #436]	; (2758 <STACK_SIZE+0x758>)
    25a2:	23bb      	movs	r3, #187	; 0xbb
    25a4:	009b      	lsls	r3, r3, #2
    25a6:	18fb      	adds	r3, r7, r3
    25a8:	681a      	ldr	r2, [r3, #0]
    25aa:	0013      	movs	r3, r2
    25ac:	005b      	lsls	r3, r3, #1
    25ae:	189b      	adds	r3, r3, r2
    25b0:	00db      	lsls	r3, r3, #3
    25b2:	18cb      	adds	r3, r1, r3
    25b4:	3304      	adds	r3, #4
    25b6:	6819      	ldr	r1, [r3, #0]
    25b8:	4867      	ldr	r0, [pc, #412]	; (2758 <STACK_SIZE+0x758>)
    25ba:	23bb      	movs	r3, #187	; 0xbb
    25bc:	009b      	lsls	r3, r3, #2
    25be:	18fb      	adds	r3, r7, r3
    25c0:	681a      	ldr	r2, [r3, #0]
    25c2:	0013      	movs	r3, r2
    25c4:	005b      	lsls	r3, r3, #1
    25c6:	189b      	adds	r3, r3, r2
    25c8:	00db      	lsls	r3, r3, #3
    25ca:	18c3      	adds	r3, r0, r3
    25cc:	3308      	adds	r3, #8
    25ce:	681b      	ldr	r3, [r3, #0]
    25d0:	18ca      	adds	r2, r1, r3
    25d2:	4b63      	ldr	r3, [pc, #396]	; (2760 <STACK_SIZE+0x760>)
    25d4:	21bc      	movs	r1, #188	; 0xbc
    25d6:	0089      	lsls	r1, r1, #2
    25d8:	468c      	mov	ip, r1
    25da:	44bc      	add	ip, r7
    25dc:	4463      	add	r3, ip
    25de:	0092      	lsls	r2, r2, #2
    25e0:	58d3      	ldr	r3, [r2, r3]
    25e2:	2254      	movs	r2, #84	; 0x54
    25e4:	18ba      	adds	r2, r7, r2
    25e6:	9301      	str	r3, [sp, #4]
    25e8:	2300      	movs	r3, #0
    25ea:	9300      	str	r3, [sp, #0]
    25ec:	2300      	movs	r3, #0
    25ee:	2107      	movs	r1, #7
    25f0:	2002      	movs	r0, #2
    25f2:	4c5c      	ldr	r4, [pc, #368]	; (2764 <STACK_SIZE+0x764>)
    25f4:	47a0      	blx	r4
			AnimetionTrans( ANIME_CMD_POSITION, 7, &SpriteImage, man[i].x , man[i].y, id[man[i].id_set + man[i].dir] );
    25f6:	4958      	ldr	r1, [pc, #352]	; (2758 <STACK_SIZE+0x758>)
    25f8:	23bb      	movs	r3, #187	; 0xbb
    25fa:	009b      	lsls	r3, r3, #2
    25fc:	18fb      	adds	r3, r7, r3
    25fe:	681a      	ldr	r2, [r3, #0]
    2600:	0013      	movs	r3, r2
    2602:	005b      	lsls	r3, r3, #1
    2604:	189b      	adds	r3, r3, r2
    2606:	00db      	lsls	r3, r3, #3
    2608:	5e5b      	ldrsh	r3, [r3, r1]
    260a:	b29d      	uxth	r5, r3
    260c:	4952      	ldr	r1, [pc, #328]	; (2758 <STACK_SIZE+0x758>)
    260e:	23bb      	movs	r3, #187	; 0xbb
    2610:	009b      	lsls	r3, r3, #2
    2612:	18fb      	adds	r3, r7, r3
    2614:	681a      	ldr	r2, [r3, #0]
    2616:	0013      	movs	r3, r2
    2618:	005b      	lsls	r3, r3, #1
    261a:	189b      	adds	r3, r3, r2
    261c:	00db      	lsls	r3, r3, #3
    261e:	18cb      	adds	r3, r1, r3
    2620:	3302      	adds	r3, #2
    2622:	2200      	movs	r2, #0
    2624:	5e9b      	ldrsh	r3, [r3, r2]
    2626:	b299      	uxth	r1, r3
    2628:	484b      	ldr	r0, [pc, #300]	; (2758 <STACK_SIZE+0x758>)
    262a:	23bb      	movs	r3, #187	; 0xbb
    262c:	009b      	lsls	r3, r3, #2
    262e:	18fb      	adds	r3, r7, r3
    2630:	681a      	ldr	r2, [r3, #0]
    2632:	0013      	movs	r3, r2
    2634:	005b      	lsls	r3, r3, #1
    2636:	189b      	adds	r3, r3, r2
    2638:	00db      	lsls	r3, r3, #3
    263a:	18c3      	adds	r3, r0, r3
    263c:	3304      	adds	r3, #4
    263e:	6818      	ldr	r0, [r3, #0]
    2640:	4c45      	ldr	r4, [pc, #276]	; (2758 <STACK_SIZE+0x758>)
    2642:	23bb      	movs	r3, #187	; 0xbb
    2644:	009b      	lsls	r3, r3, #2
    2646:	18fb      	adds	r3, r7, r3
    2648:	681a      	ldr	r2, [r3, #0]
    264a:	0013      	movs	r3, r2
    264c:	005b      	lsls	r3, r3, #1
    264e:	189b      	adds	r3, r3, r2
    2650:	00db      	lsls	r3, r3, #3
    2652:	18e3      	adds	r3, r4, r3
    2654:	3308      	adds	r3, #8
    2656:	681b      	ldr	r3, [r3, #0]
    2658:	18c2      	adds	r2, r0, r3
    265a:	4b41      	ldr	r3, [pc, #260]	; (2760 <STACK_SIZE+0x760>)
    265c:	20bc      	movs	r0, #188	; 0xbc
    265e:	0080      	lsls	r0, r0, #2
    2660:	4684      	mov	ip, r0
    2662:	44bc      	add	ip, r7
    2664:	4463      	add	r3, ip
    2666:	0092      	lsls	r2, r2, #2
    2668:	58d3      	ldr	r3, [r2, r3]
    266a:	2254      	movs	r2, #84	; 0x54
    266c:	18ba      	adds	r2, r7, r2
    266e:	9301      	str	r3, [sp, #4]
    2670:	9100      	str	r1, [sp, #0]
    2672:	002b      	movs	r3, r5
    2674:	2107      	movs	r1, #7
    2676:	2003      	movs	r0, #3
    2678:	4c3a      	ldr	r4, [pc, #232]	; (2764 <STACK_SIZE+0x764>)
    267a:	47a0      	blx	r4

//-------------------------
		AnimetionTaskDriver( &SpriteImage );

		AnimetionTrans( ANIME_CMD_START, 7, &SpriteImage, 0, 0, 0 );
		for( i=0;i<COUNT_OF_MAN;i++ )
    267c:	23bb      	movs	r3, #187	; 0xbb
    267e:	009b      	lsls	r3, r3, #2
    2680:	18fb      	adds	r3, r7, r3
    2682:	681b      	ldr	r3, [r3, #0]
    2684:	3301      	adds	r3, #1
    2686:	22bb      	movs	r2, #187	; 0xbb
    2688:	0092      	lsls	r2, r2, #2
    268a:	18ba      	adds	r2, r7, r2
    268c:	6013      	str	r3, [r2, #0]
    268e:	23bb      	movs	r3, #187	; 0xbb
    2690:	009b      	lsls	r3, r3, #2
    2692:	18fb      	adds	r3, r7, r3
    2694:	681b      	ldr	r3, [r3, #0]
    2696:	2b31      	cmp	r3, #49	; 0x31
    2698:	dc00      	bgt.n	269c <STACK_SIZE+0x69c>
    269a:	e749      	b.n	2530 <STACK_SIZE+0x530>
			AnimetionTrans( ANIME_CMD_SET_SIZE, 7, &SpriteImage, 0, 0, id[man[i].id_set + man[i].dir] );
			AnimetionTrans( ANIME_CMD_SET_IMAGE, 7, &SpriteImage, 0, 0, id[man[i].id_set + man[i].dir] );
			AnimetionTrans( ANIME_CMD_POSITION, 7, &SpriteImage, man[i].x , man[i].y, id[man[i].id_set + man[i].dir] );
		}

		AnimetionTrans( ANIME_CMD_END, 7, &SpriteImage, 0, 0, 0 );
    269c:	2354      	movs	r3, #84	; 0x54
    269e:	18fa      	adds	r2, r7, r3
    26a0:	2300      	movs	r3, #0
    26a2:	9301      	str	r3, [sp, #4]
    26a4:	2300      	movs	r3, #0
    26a6:	9300      	str	r3, [sp, #0]
    26a8:	2300      	movs	r3, #0
    26aa:	2107      	movs	r1, #7
    26ac:	2004      	movs	r0, #4
    26ae:	4c2d      	ldr	r4, [pc, #180]	; (2764 <STACK_SIZE+0x764>)
    26b0:	47a0      	blx	r4
//-------------------------
		HostMemWriteDoubleWord( RAM_CMD + cmdOffset,(DL_DISPLAY) );
    26b2:	4b2d      	ldr	r3, [pc, #180]	; (2768 <STACK_SIZE+0x768>)
    26b4:	681b      	ldr	r3, [r3, #0]
    26b6:	22c2      	movs	r2, #194	; 0xc2
    26b8:	0392      	lsls	r2, r2, #14
    26ba:	4694      	mov	ip, r2
    26bc:	4463      	add	r3, ip
    26be:	2100      	movs	r1, #0
    26c0:	0018      	movs	r0, r3
    26c2:	4b2a      	ldr	r3, [pc, #168]	; (276c <STACK_SIZE+0x76c>)
    26c4:	4798      	blx	r3
		cmdOffset = incCMDOffset(cmdOffset, 4);
    26c6:	4b28      	ldr	r3, [pc, #160]	; (2768 <STACK_SIZE+0x768>)
    26c8:	681b      	ldr	r3, [r3, #0]
    26ca:	2104      	movs	r1, #4
    26cc:	0018      	movs	r0, r3
    26ce:	4b28      	ldr	r3, [pc, #160]	; (2770 <STACK_SIZE+0x770>)
    26d0:	4798      	blx	r3
    26d2:	0002      	movs	r2, r0
    26d4:	4b24      	ldr	r3, [pc, #144]	; (2768 <STACK_SIZE+0x768>)
    26d6:	601a      	str	r2, [r3, #0]
		HostMemWriteDoubleWord( RAM_CMD + cmdOffset,(CMD_SWAP) );
    26d8:	4b23      	ldr	r3, [pc, #140]	; (2768 <STACK_SIZE+0x768>)
    26da:	681b      	ldr	r3, [r3, #0]
    26dc:	22c2      	movs	r2, #194	; 0xc2
    26de:	0392      	lsls	r2, r2, #14
    26e0:	189a      	adds	r2, r3, r2
    26e2:	23ff      	movs	r3, #255	; 0xff
    26e4:	425b      	negs	r3, r3
    26e6:	0019      	movs	r1, r3
    26e8:	0010      	movs	r0, r2
    26ea:	4b20      	ldr	r3, [pc, #128]	; (276c <STACK_SIZE+0x76c>)
    26ec:	4798      	blx	r3
		cmdOffset = incCMDOffset(cmdOffset, 4);
    26ee:	4b1e      	ldr	r3, [pc, #120]	; (2768 <STACK_SIZE+0x768>)
    26f0:	681b      	ldr	r3, [r3, #0]
    26f2:	2104      	movs	r1, #4
    26f4:	0018      	movs	r0, r3
    26f6:	4b1e      	ldr	r3, [pc, #120]	; (2770 <STACK_SIZE+0x770>)
    26f8:	4798      	blx	r3
    26fa:	0002      	movs	r2, r0
    26fc:	4b1a      	ldr	r3, [pc, #104]	; (2768 <STACK_SIZE+0x768>)
    26fe:	601a      	str	r2, [r3, #0]

		HostMemWriteWord(REG_CMD_WRITE, cmdOffset);
    2700:	4b19      	ldr	r3, [pc, #100]	; (2768 <STACK_SIZE+0x768>)
    2702:	681b      	ldr	r3, [r3, #0]
    2704:	b29b      	uxth	r3, r3
    2706:	4a1b      	ldr	r2, [pc, #108]	; (2774 <STACK_SIZE+0x774>)
    2708:	0019      	movs	r1, r3
    270a:	0010      	movs	r0, r2
    270c:	4b1a      	ldr	r3, [pc, #104]	; (2778 <STACK_SIZE+0x778>)
    270e:	4798      	blx	r3

		do
		{
			cmdBufferRd = HostMemReadWord(REG_CMD_READ);
    2710:	4b1a      	ldr	r3, [pc, #104]	; (277c <STACK_SIZE+0x77c>)
    2712:	0018      	movs	r0, r3
    2714:	4b1a      	ldr	r3, [pc, #104]	; (2780 <STACK_SIZE+0x780>)
    2716:	4798      	blx	r3
    2718:	0003      	movs	r3, r0
    271a:	22ba      	movs	r2, #186	; 0xba
    271c:	0092      	lsls	r2, r2, #2
    271e:	18ba      	adds	r2, r7, r2
    2720:	6013      	str	r3, [r2, #0]
			cmdBufferWr = HostMemReadWord(REG_CMD_WRITE);
    2722:	4b14      	ldr	r3, [pc, #80]	; (2774 <STACK_SIZE+0x774>)
    2724:	0018      	movs	r0, r3
    2726:	4b16      	ldr	r3, [pc, #88]	; (2780 <STACK_SIZE+0x780>)
    2728:	4798      	blx	r3
    272a:	0003      	movs	r3, r0
    272c:	22b9      	movs	r2, #185	; 0xb9
    272e:	0092      	lsls	r2, r2, #2
    2730:	18ba      	adds	r2, r7, r2
    2732:	6013      	str	r3, [r2, #0]
		}while (cmdBufferWr != cmdBufferRd);
    2734:	23b9      	movs	r3, #185	; 0xb9
    2736:	009b      	lsls	r3, r3, #2
    2738:	18fb      	adds	r3, r7, r3
    273a:	681a      	ldr	r2, [r3, #0]
    273c:	23ba      	movs	r3, #186	; 0xba
    273e:	009b      	lsls	r3, r3, #2
    2740:	18fb      	adds	r3, r7, r3
    2742:	681b      	ldr	r3, [r3, #0]
    2744:	429a      	cmp	r2, r3
    2746:	d1e3      	bne.n	2710 <STACK_SIZE+0x710>
		cmdOffset = cmdBufferWr;
    2748:	4b07      	ldr	r3, [pc, #28]	; (2768 <STACK_SIZE+0x768>)
    274a:	22b9      	movs	r2, #185	; 0xb9
    274c:	0092      	lsls	r2, r2, #2
    274e:	18ba      	adds	r2, r7, r2
    2750:	6812      	ldr	r2, [r2, #0]
    2752:	601a      	str	r2, [r3, #0]

	}while(1);
    2754:	e669      	b.n	242a <STACK_SIZE+0x42a>
    2756:	46c0      	nop			; (mov r8, r8)
    2758:	20000494 	.word	0x20000494
    275c:	00001c01 	.word	0x00001c01
    2760:	fffffd14 	.word	0xfffffd14
    2764:	000019ed 	.word	0x000019ed
    2768:	20000488 	.word	0x20000488
    276c:	00000295 	.word	0x00000295
    2770:	000003dd 	.word	0x000003dd
    2774:	003020fc 	.word	0x003020fc
    2778:	0000021d 	.word	0x0000021d
    277c:	003020f8 	.word	0x003020f8
    2780:	00000355 	.word	0x00000355

00002784 <__libc_init_array>:
    2784:	4b0e      	ldr	r3, [pc, #56]	; (27c0 <__libc_init_array+0x3c>)
    2786:	b570      	push	{r4, r5, r6, lr}
    2788:	2500      	movs	r5, #0
    278a:	001e      	movs	r6, r3
    278c:	4c0d      	ldr	r4, [pc, #52]	; (27c4 <__libc_init_array+0x40>)
    278e:	1ae4      	subs	r4, r4, r3
    2790:	10a4      	asrs	r4, r4, #2
    2792:	42a5      	cmp	r5, r4
    2794:	d004      	beq.n	27a0 <__libc_init_array+0x1c>
    2796:	00ab      	lsls	r3, r5, #2
    2798:	58f3      	ldr	r3, [r6, r3]
    279a:	4798      	blx	r3
    279c:	3501      	adds	r5, #1
    279e:	e7f8      	b.n	2792 <__libc_init_array+0xe>
    27a0:	f005 ff1c 	bl	85dc <_init>
    27a4:	4b08      	ldr	r3, [pc, #32]	; (27c8 <__libc_init_array+0x44>)
    27a6:	2500      	movs	r5, #0
    27a8:	001e      	movs	r6, r3
    27aa:	4c08      	ldr	r4, [pc, #32]	; (27cc <__libc_init_array+0x48>)
    27ac:	1ae4      	subs	r4, r4, r3
    27ae:	10a4      	asrs	r4, r4, #2
    27b0:	42a5      	cmp	r5, r4
    27b2:	d004      	beq.n	27be <__libc_init_array+0x3a>
    27b4:	00ab      	lsls	r3, r5, #2
    27b6:	58f3      	ldr	r3, [r6, r3]
    27b8:	4798      	blx	r3
    27ba:	3501      	adds	r5, #1
    27bc:	e7f8      	b.n	27b0 <__libc_init_array+0x2c>
    27be:	bd70      	pop	{r4, r5, r6, pc}
    27c0:	000085e8 	.word	0x000085e8
    27c4:	000085e8 	.word	0x000085e8
    27c8:	000085e8 	.word	0x000085e8
    27cc:	000085ec 	.word	0x000085ec

000027d0 <rand>:
    27d0:	4b15      	ldr	r3, [pc, #84]	; (2828 <rand+0x58>)
    27d2:	b510      	push	{r4, lr}
    27d4:	681c      	ldr	r4, [r3, #0]
    27d6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
    27d8:	2b00      	cmp	r3, #0
    27da:	d115      	bne.n	2808 <rand+0x38>
    27dc:	2018      	movs	r0, #24
    27de:	f000 f833 	bl	2848 <malloc>
    27e2:	4b12      	ldr	r3, [pc, #72]	; (282c <rand+0x5c>)
    27e4:	63a0      	str	r0, [r4, #56]	; 0x38
    27e6:	8003      	strh	r3, [r0, #0]
    27e8:	4b11      	ldr	r3, [pc, #68]	; (2830 <rand+0x60>)
    27ea:	2201      	movs	r2, #1
    27ec:	8043      	strh	r3, [r0, #2]
    27ee:	4b11      	ldr	r3, [pc, #68]	; (2834 <rand+0x64>)
    27f0:	8083      	strh	r3, [r0, #4]
    27f2:	4b11      	ldr	r3, [pc, #68]	; (2838 <rand+0x68>)
    27f4:	80c3      	strh	r3, [r0, #6]
    27f6:	4b11      	ldr	r3, [pc, #68]	; (283c <rand+0x6c>)
    27f8:	8103      	strh	r3, [r0, #8]
    27fa:	2305      	movs	r3, #5
    27fc:	8143      	strh	r3, [r0, #10]
    27fe:	3306      	adds	r3, #6
    2800:	8183      	strh	r3, [r0, #12]
    2802:	2300      	movs	r3, #0
    2804:	6102      	str	r2, [r0, #16]
    2806:	6143      	str	r3, [r0, #20]
    2808:	6ba4      	ldr	r4, [r4, #56]	; 0x38
    280a:	4a0d      	ldr	r2, [pc, #52]	; (2840 <rand+0x70>)
    280c:	6920      	ldr	r0, [r4, #16]
    280e:	6961      	ldr	r1, [r4, #20]
    2810:	4b0c      	ldr	r3, [pc, #48]	; (2844 <rand+0x74>)
    2812:	f000 f88b 	bl	292c <__aeabi_lmul>
    2816:	2201      	movs	r2, #1
    2818:	2300      	movs	r3, #0
    281a:	1880      	adds	r0, r0, r2
    281c:	4159      	adcs	r1, r3
    281e:	6120      	str	r0, [r4, #16]
    2820:	6161      	str	r1, [r4, #20]
    2822:	0048      	lsls	r0, r1, #1
    2824:	0840      	lsrs	r0, r0, #1
    2826:	bd10      	pop	{r4, pc}
    2828:	20000444 	.word	0x20000444
    282c:	0000330e 	.word	0x0000330e
    2830:	ffffabcd 	.word	0xffffabcd
    2834:	00001234 	.word	0x00001234
    2838:	ffffe66d 	.word	0xffffe66d
    283c:	ffffdeec 	.word	0xffffdeec
    2840:	4c957f2d 	.word	0x4c957f2d
    2844:	5851f42d 	.word	0x5851f42d

00002848 <malloc>:
    2848:	b510      	push	{r4, lr}
    284a:	4b03      	ldr	r3, [pc, #12]	; (2858 <malloc+0x10>)
    284c:	0001      	movs	r1, r0
    284e:	6818      	ldr	r0, [r3, #0]
    2850:	f000 f804 	bl	285c <_malloc_r>
    2854:	bd10      	pop	{r4, pc}
    2856:	46c0      	nop			; (mov r8, r8)
    2858:	20000444 	.word	0x20000444

0000285c <_malloc_r>:
    285c:	2303      	movs	r3, #3
    285e:	b570      	push	{r4, r5, r6, lr}
    2860:	1ccd      	adds	r5, r1, #3
    2862:	439d      	bics	r5, r3
    2864:	3508      	adds	r5, #8
    2866:	0006      	movs	r6, r0
    2868:	2d0c      	cmp	r5, #12
    286a:	d201      	bcs.n	2870 <_malloc_r+0x14>
    286c:	250c      	movs	r5, #12
    286e:	e005      	b.n	287c <_malloc_r+0x20>
    2870:	2d00      	cmp	r5, #0
    2872:	da03      	bge.n	287c <_malloc_r+0x20>
    2874:	230c      	movs	r3, #12
    2876:	2000      	movs	r0, #0
    2878:	6033      	str	r3, [r6, #0]
    287a:	e040      	b.n	28fe <_malloc_r+0xa2>
    287c:	42a9      	cmp	r1, r5
    287e:	d8f9      	bhi.n	2874 <_malloc_r+0x18>
    2880:	4b1f      	ldr	r3, [pc, #124]	; (2900 <_malloc_r+0xa4>)
    2882:	681c      	ldr	r4, [r3, #0]
    2884:	001a      	movs	r2, r3
    2886:	0021      	movs	r1, r4
    2888:	2900      	cmp	r1, #0
    288a:	d013      	beq.n	28b4 <_malloc_r+0x58>
    288c:	680b      	ldr	r3, [r1, #0]
    288e:	1b5b      	subs	r3, r3, r5
    2890:	d40d      	bmi.n	28ae <_malloc_r+0x52>
    2892:	2b0b      	cmp	r3, #11
    2894:	d902      	bls.n	289c <_malloc_r+0x40>
    2896:	600b      	str	r3, [r1, #0]
    2898:	18cc      	adds	r4, r1, r3
    289a:	e01e      	b.n	28da <_malloc_r+0x7e>
    289c:	428c      	cmp	r4, r1
    289e:	d102      	bne.n	28a6 <_malloc_r+0x4a>
    28a0:	6863      	ldr	r3, [r4, #4]
    28a2:	6013      	str	r3, [r2, #0]
    28a4:	e01a      	b.n	28dc <_malloc_r+0x80>
    28a6:	684b      	ldr	r3, [r1, #4]
    28a8:	6063      	str	r3, [r4, #4]
    28aa:	000c      	movs	r4, r1
    28ac:	e016      	b.n	28dc <_malloc_r+0x80>
    28ae:	000c      	movs	r4, r1
    28b0:	6849      	ldr	r1, [r1, #4]
    28b2:	e7e9      	b.n	2888 <_malloc_r+0x2c>
    28b4:	4c13      	ldr	r4, [pc, #76]	; (2904 <_malloc_r+0xa8>)
    28b6:	6823      	ldr	r3, [r4, #0]
    28b8:	2b00      	cmp	r3, #0
    28ba:	d103      	bne.n	28c4 <_malloc_r+0x68>
    28bc:	0030      	movs	r0, r6
    28be:	f000 f823 	bl	2908 <_sbrk_r>
    28c2:	6020      	str	r0, [r4, #0]
    28c4:	0029      	movs	r1, r5
    28c6:	0030      	movs	r0, r6
    28c8:	f000 f81e 	bl	2908 <_sbrk_r>
    28cc:	1c43      	adds	r3, r0, #1
    28ce:	d0d1      	beq.n	2874 <_malloc_r+0x18>
    28d0:	2303      	movs	r3, #3
    28d2:	1cc4      	adds	r4, r0, #3
    28d4:	439c      	bics	r4, r3
    28d6:	42a0      	cmp	r0, r4
    28d8:	d10a      	bne.n	28f0 <_malloc_r+0x94>
    28da:	6025      	str	r5, [r4, #0]
    28dc:	0020      	movs	r0, r4
    28de:	2207      	movs	r2, #7
    28e0:	300b      	adds	r0, #11
    28e2:	1d23      	adds	r3, r4, #4
    28e4:	4390      	bics	r0, r2
    28e6:	1ac3      	subs	r3, r0, r3
    28e8:	d009      	beq.n	28fe <_malloc_r+0xa2>
    28ea:	425a      	negs	r2, r3
    28ec:	50e2      	str	r2, [r4, r3]
    28ee:	e006      	b.n	28fe <_malloc_r+0xa2>
    28f0:	1a21      	subs	r1, r4, r0
    28f2:	0030      	movs	r0, r6
    28f4:	f000 f808 	bl	2908 <_sbrk_r>
    28f8:	1c43      	adds	r3, r0, #1
    28fa:	d1ee      	bne.n	28da <_malloc_r+0x7e>
    28fc:	e7ba      	b.n	2874 <_malloc_r+0x18>
    28fe:	bd70      	pop	{r4, r5, r6, pc}
    2900:	20000490 	.word	0x20000490
    2904:	2000048c 	.word	0x2000048c

00002908 <_sbrk_r>:
    2908:	2300      	movs	r3, #0
    290a:	b570      	push	{r4, r5, r6, lr}
    290c:	4c06      	ldr	r4, [pc, #24]	; (2928 <_sbrk_r+0x20>)
    290e:	0005      	movs	r5, r0
    2910:	0008      	movs	r0, r1
    2912:	6023      	str	r3, [r4, #0]
    2914:	f7fe fe36 	bl	1584 <_sbrk>
    2918:	1c43      	adds	r3, r0, #1
    291a:	d103      	bne.n	2924 <_sbrk_r+0x1c>
    291c:	6823      	ldr	r3, [r4, #0]
    291e:	2b00      	cmp	r3, #0
    2920:	d000      	beq.n	2924 <_sbrk_r+0x1c>
    2922:	602b      	str	r3, [r5, #0]
    2924:	bd70      	pop	{r4, r5, r6, pc}
    2926:	46c0      	nop			; (mov r8, r8)
    2928:	20000944 	.word	0x20000944

0000292c <__aeabi_lmul>:
    292c:	b5f0      	push	{r4, r5, r6, r7, lr}
    292e:	464f      	mov	r7, r9
    2930:	4646      	mov	r6, r8
    2932:	b4c0      	push	{r6, r7}
    2934:	0416      	lsls	r6, r2, #16
    2936:	0c36      	lsrs	r6, r6, #16
    2938:	4699      	mov	r9, r3
    293a:	0033      	movs	r3, r6
    293c:	0405      	lsls	r5, r0, #16
    293e:	0c2c      	lsrs	r4, r5, #16
    2940:	0c07      	lsrs	r7, r0, #16
    2942:	0c15      	lsrs	r5, r2, #16
    2944:	4363      	muls	r3, r4
    2946:	437e      	muls	r6, r7
    2948:	436f      	muls	r7, r5
    294a:	4365      	muls	r5, r4
    294c:	0c1c      	lsrs	r4, r3, #16
    294e:	19ad      	adds	r5, r5, r6
    2950:	1964      	adds	r4, r4, r5
    2952:	469c      	mov	ip, r3
    2954:	42a6      	cmp	r6, r4
    2956:	d903      	bls.n	2960 <__aeabi_lmul+0x34>
    2958:	2380      	movs	r3, #128	; 0x80
    295a:	025b      	lsls	r3, r3, #9
    295c:	4698      	mov	r8, r3
    295e:	4447      	add	r7, r8
    2960:	4663      	mov	r3, ip
    2962:	0c25      	lsrs	r5, r4, #16
    2964:	19ef      	adds	r7, r5, r7
    2966:	041d      	lsls	r5, r3, #16
    2968:	464b      	mov	r3, r9
    296a:	434a      	muls	r2, r1
    296c:	4343      	muls	r3, r0
    296e:	0c2d      	lsrs	r5, r5, #16
    2970:	0424      	lsls	r4, r4, #16
    2972:	1964      	adds	r4, r4, r5
    2974:	1899      	adds	r1, r3, r2
    2976:	19c9      	adds	r1, r1, r7
    2978:	0020      	movs	r0, r4
    297a:	bc0c      	pop	{r2, r3}
    297c:	4690      	mov	r8, r2
    297e:	4699      	mov	r9, r3
    2980:	bdf0      	pop	{r4, r5, r6, r7, pc}
    2982:	46c0      	nop			; (mov r8, r8)
    2984:	00000fd8 	.word	0x00000fd8
    2988:	00001028 	.word	0x00001028
    298c:	00001028 	.word	0x00001028
    2990:	00001024 	.word	0x00001024
    2994:	00000fca 	.word	0x00000fca
    2998:	00000fea 	.word	0x00000fea
    299c:	00000fba 	.word	0x00000fba
    29a0:	00000ffc 	.word	0x00000ffc
    29a4:	0000100e 	.word	0x0000100e

000029a8 <SampleSprite>:
    29a8:	bded9c78 591b6c4d e89826b6 0110044d     x...Ml.Y.&..M...
    29b8:	10130028 d3a6af17 94057eb3 c0c7adfb     (........~......
    29c8:	029dbd7b 63d7a6ba 902657a0 14e8da02     {......c.W&.....
    29d8:	1326ae60 0a0061b9 04c402c0 192870b9     `.&..a.......p(.
    29e8:	4f99adcc b93edca1 24fb794c 5785e924     ...O..>.Ly.$$..W
    29f8:	42f4db29 94b1c404 a6d481a2 73be7318     )..B.........s.s
    2a08:	cca925ee 74b9c72a d1feabcd 64a2480d     .%..*..t.....H.d
    2a18:	dc4f7b9f fbffdcef 27c9f39d dd26e937     .{O........'7.&.
    2a28:	d7f49ba4 984e934e 16413a4d d6b7f3d2     ....N.N.M:A.....
    2a38:	27b926e5 93a616e0 ba98610e 458756cb     .&.'.....a...V.E
    2a48:	4eb51ed1 d14527da 93fb37ec d3e54ace     ...N.'E..7...J..
    2a58:	ec8dfc13 f1e5cfc7 447febe8 c0fff61b     ...........D....
    2a68:	e9f91dcf eb661b26 d47d5f84 3bf187a6     ....&.f.._}....;
    2a78:	49ff7970 ee07d047 a8723ecd 55fd9b0e     py.IG....>r....U
    2a88:	f94ba872 68ed2407 9ebd0683 937a12bf     r.K..$.h......z.
    2a98:	19df700e 5e930cee bc73b873 d9b9b9c5     .p.....^s.s.....
    2aa8:	1eb737b0 fc0d056f be393f01 93707f8f     .7..o....?9...p.
    2ab8:	ffa7f605 7a073969 5efde0fe a9d67d2b     ....i9.z...^+}..
    2ac8:	6fc75f1e 82d2e87d 0ed87d9b 607246ac     ._.o}....}...Fr`
    2ad8:	0f364f2c f58a18b4 1c7ec2fd 50cc302c     ,O6.......~.,0.P
    2ae8:	7361cdf3 fc9be498 a56bbf1d 21cbde45     ..as......k.E..!
    2af8:	abe4f497 4dbeac39 39b492d8 cec1ac78     ....9..M...9x...
    2b08:	f47a2271 5e00345c 467f1bf1 8d9fc0cf     q"z.\4.^...F....
    2b18:	437b54ff 7aaff036 703fbdfd 87223f0e     .T{C6..z..?p.?".
    2b28:	f47abff1 1b63729d bf03c9d0 b7a089d6     ..z..rc.........
    2b38:	03575f49 6ca9b1a0 ad264183 1f5a3db6     I_W....l.A&..=Z.
    2b48:	757c90ee f0dfa2d8 50f6b6bb 73b47b7e     ..|u.......P~{.s
    2b58:	3a4073b0 f298ec1c 68169477 e8e427d1     .s@:....w..h.'..
    2b68:	7a0dc8d9 a9fb373d 5b0e45be bbbe079c     ...z=7...E.[....
    2b78:	d181038c ab13a440 3fabae41 6b308a46     ....@...A..?F.0k
    2b88:	69f989bc 89ff19bc d5a0612d 7b50e6df     ...i....-a....P{
    2b98:	b630f363 cc21caa4 a1f84bda f09db6f5     c.0...!..K......
    2ba8:	04fd7c83 728b483d ea93e920 b3606c50     .|..=H.r ...Pl`.
    2bb8:	97d1d67f 87551adf 560d939f f7cb5d8f     ......U....V.]..
    2bc8:	8ed1abf3 fe33ffc1 7bc73c0e da9f797a     ......3..<.{zy..
    2bd8:	6603dfbc d8f3795b 5bea2837 64d8343f     ...f[y..7(.[?4.d
    2be8:	1b7a360d 0691eb2c 60072a9e a5de1517     .6z.,....*.`....
    2bf8:	8c7f8b37 41517e0d 4ae91df8 307f11a7     7....~QA...J...0
    2c08:	c45453fe 8c8ffe82 9c5465fe f81bc9fe     .ST......eT.....
    2c18:	a3da3477 adfc65fe 1606af0e 0203cc45     w4...e......E...
    2c28:	d661fe85 ffdea03c dfa03900 947a3abf     ..a.<....9...:z.
    2c38:	d1e88757 f79ac7ab 68ffa90f 11f5f971     W..........hq...
    2c48:	90b4472c 07edcbf2 bd5a2f3d 711abbdf     ,G......=/Z....q
    2c58:	689213cd 7ebb68cb ccdfd3ae b5e87afb     ...h.h.~.....z..
    2c68:	b7f5c39b 87bc7fc0 30999aef cd8cf7c9     ...........0....
    2c78:	e8e942bd ec01a005 03ed2fcf 66f1bcfc     .B......./.....f
    2c88:	fb3ea0ad ff1cbfd2 dff3b049 37e222c1     ..>.....I....".7
    2c98:	f1046a9e f50bd873 7a039419 341ce591     .j..s......z...4
    2ca8:	d7e11063 f06bd8c7 cedfdaa3 61460381     c.....k.......Fa
    2cb8:	7d3b7e1d 3c1c2f9a 0f7609e8 cedf907a     .~;}./.<..v.z...
    2cc8:	fe4ea791 fb5be597 e3961f59 fc17da87     ..N...[.Y.......
    2cd8:	0afda8b6 3f7fe8f2 335bdee3 27ee6082     .......?..[3.`.'
    2ce8:	9f8e608f b326e51e 9037f282 005a03fe     .`....&...7...Z.
    2cf8:	33e0d177 3a488f1e 2a037b2d afe927ed     w..3..H:-{.*.'..
    2d08:	b9e5fbe9 79bfc6a0 0419ba97 78d97e95     .......y.....~.x
    2d18:	547ea323 7971cf50 9a10479f dd3bbc45     #.~TP.qy.G..E.;.
    2d28:	da3fbcd3 9dbfb36e e3bf03af e93e3907     ..?.n........9>.
    2d38:	b6749bf1 3dee9273 9cb11fca 23d6747d     ..t.s..=....}t.#
    2d48:	8ff29bf8 fb20fac5 e62be500 34a30180     ...... ...+....4
    2d58:	d1ef1bde 91b7bd9c f73e0e0b 17f1ba09     ..........>.....
    2d68:	ed1e4e2b c78f5e7b 5fb1a581 3b140333     +N..{^....._3..;
    2d78:	b9440b61 b91b8d6c 80411caf 2d06fc5e     a.D.l.....A.^..-
    2d88:	51a7705f 27a13f80 de3fe1d7 1909586b     _p.Q.?.'..?.kX..
    2d98:	77f667f7 0f41695f 0647bf08 da1e8333     .g.w_iA...G.3...
    2da8:	fe76b1f0 6cc3fc0e 24607f3b 1e8dd1e5     ..v....l;.`$....
    2db8:	3d47bfa8 afa40fd8 01f6448e f47692d9     ..G=.....D....v.
    2dc8:	bcde4600 4fdfa5e6 a759fb72 c5fdb481     .F.....Or.Y.....
    2dd8:	61efd20a 2fa0242f 8632fe1d ef1d4a2c     ...a/$./..2.,J..
    2de8:	3dd3bd25 8f265ae4 001fdbde e67cdab1     %..=.Z&.......|.
    2df8:	8ff86346 b9ab0df8 8ca9d2b2 b7d4641f     Fc...........d..
    2e08:	337dc6fd 8535e48b c0b47f0a 3ffd4330     ..}3..5.....0C.?
    2e18:	ddb7a398 03e0afd3 fecc3ec2 330c91ab     .........>.....3
    2e28:	8693a5fb 7ec26cfd 9b3ddb7a 6c5c83c7     .....l.~z.=...\l
    2e38:	62fa574a 9f33c6e7 f5490fb0 48035caf     JW.b..3...I..\.H
    2e48:	a071a74b ff76a617 f899bb00 62fc8d17     K.q...v........b
    2e58:	413c5904 8e513626 a8feacbf 05b01f07     .Y<A&6Q.........
    2e68:	bccde8fc 48ee4223 578f7f89 e9c3947e     ....#B.H...W~...
    2e78:	6077d20f c0b3c8f5 5c68ff23 b257ffda     ..w`....#.h\..W.
    2e88:	9311664a 52684836 b7503c3d bef64a9d     Jf..6HhR=<P..J..
    2e98:	1e4ce933 03f90e73 d5f23d83 f3bb7fb5     3.L.s....=......
    2ea8:	23d03d27 a4394f23 2dff6515 61ada1e8     '=.##O9..e.-...a
    2eb8:	83b0081c bb1e4e98 068a23ec 979172d2     .....N...#...r..
    2ec8:	a5aa85ec 343f6353 803e40e2 6aa1a4f5     ....Sc?4.@>....j
    2ed8:	8defdc27 261b407f abe68fac 1bd34237     '....@.&....7B..
    2ee8:	bfa07f8c 4fe4caf6 e9c1bcf7 ff18900f     .......O........
    2ef8:	7a51fb50 27945811 f625413b faaec953     P.Qz.X.';A%.S...
    2f08:	d98af30f 3bbe9579 b4bf1948 ab7deaa2     ....y..;H.....}.
    2f18:	4d87eb87 439300b2 95b83b2e 9f5599ac     ...M...C.;....U.
    2f28:	08350f56 40a605b0 e63eda4d 769fb013     V.5....@M.>....v
    2f38:	d1a87aaf c83fea41 adcdbe64 8fd8bb17     .z..A.?.d.......
    2f48:	6fcb9235 18cf3682 57685d9a d0428c69     5..o.6...]hWi.B.
    2f58:	c64f74e0 91f59d0d e09e47c6 3d8f739f     .tO......G...s.=
    2f68:	76000b60 23e8e547 fbc73f51 c69ec07e     `..vG..#Q?..~...
    2f78:	f20d1f82 e295ed24 f49b641f 5f811934     ....$....d..4.._
    2f88:	153697e0 eb64106f 337ced87 ed320b13     ..6.o.d...|3..2.
    2f98:	f2976d06 fc1ae76c 73ff2a43 d99b4796     .m..l...C*.s.G..
    2fa8:	d0f217ce d2875b4b d101055e abf72344     ....K[..^...D#..
    2fb8:	7d36b21c 99da759d 1c9768b4 f79f7b6c     ..6}.u...h..l{..
    2fc8:	99796a1e 8c2b0079 902f66e4 072eaedb     .jy.y.+..f/.....
    2fd8:	87d15ccc cd1fd918 3466301e 9813f6a5     .\.......0f4....
    2fe8:	7b1aa6da 28612c1c 5a59b7ad 5a0e938f     ...{.,a(..YZ...Z
    2ff8:	b4c7fbef f1bc6086 2666f3b4 14a57ffd     .....`....f&....
    3008:	b0e92e3f a7c9b4fa ed66413e f299d267     ?.......>Af.g...
    3018:	3fdaa288 555f45e9 d9e8b7bf 8b72e5ef     ...?.E_U......r.
    3028:	7eabde34 b7c2cadf c0bb74c9 b7c34c93     4..~.....t...L..
    3038:	bdfaaced cda0058b d62dc94b f47dfabf     ........K.-...}.
    3048:	c5f67695 c860586b 0ac29fc8 64104e9c     .v..kX`......N.d
    3058:	c7fc0305 97e7667b b9aa9ed7 d5e31f6b     ....{f......k...
    3068:	d577a126 f55e1eaf f00ef9db bcbdef4f     &.w...^.....O...
    3078:	314af2f7 cebc1303 6ee4f63a af9407d1     ..J1....:..n....
    3088:	b8fc657d 4beee2fb 58740c58 b220b25f     }e.....KX.tX_. .
    3098:	b40ec562 5d5f479f 595f47ed c8bb04f4     b....G_].G_Y....
    30a8:	5926f5a1 95a139fb 9baef589 7ead28af     ..&Y.9.......(.~
    30b8:	a263fedf 00b480c4 c03a4bfa 34afa326     ..c......K:.&..4
    30c8:	188c6feb e018ef3c d082b16b 9dfe3fea     .o..<...k....?..
    30d8:	40aec77f 2fa3e5a4 ec97bf31 b5daf1ff     ...@.../1.......
    30e8:	c5cf7b6f 71e4ec09 a6fffa85 28c40e62     o{.....q....b..(
    30f8:	ec95f231 e3d5bcd6 ef2b3f19 31fed07f     1........?+....1
    3108:	cd592cfa 7c0ff1fc 925bfec5 bbb55f45     .,Y....|..[.E_..
    3118:	1db23d16 3c5c359a fd5f7eae 16dd875e     .=...5\<.~_.^...
    3128:	79f0ffa1 ff721bbb 395bced5 a6da7cfd     ...y..r...[9.|..
    3138:	dbab4395 ae7ade7e 6cb3e5c9 d0587bfd     .C..~.z....l.{X.
    3148:	5b9d61fa 23289e11 ca4abead 6b27afeb     .a.[..(#..J...'k
    3158:	256a7b16 0f5e57bb 5fd1a0d6 8fff47d0     .{j%.W^...._.G..
    3168:	0e4587f3 bca592b2 7961fb7f 420373e9     ..E.......ay.s.B
    3178:	f2fa3dff 9ede8e74 079af66a b31f3f99     .=..t...j....?..
    3188:	c8b5b9e5 c058d521 b1e6d462 df9953a4     ....!.X.b....S..
    3198:	1e9dd122 30f5b06c b0c13d7a b7ed5d9e     "...l..0z=...]..
    31a8:	2bed539e a92e8bb0 f533fff5 c867d41f     .S.+......3...g.
    31b8:	77c1d173 705a9dfa 597479fb 205b0396     s..w..Zp.ytY..[ 
    31c8:	ee6d20f5 1e874943 f1a33874 c1ad292b     . m.CI..t8..+)..
    31d8:	936315e5 028b3ff7 60fe0fe7 f0460deb     ..c..?.....`..F.
    31e8:	3bfdb2b2 e3bc17c5 f1bf3345 a1873cde     ...;....E3...<..
    31f8:	14f0cbdd 3f9d807d b1e0efbf 40f6377d     ....}..?....}7.@
    3208:	6e0bf835 8241643b 3f9999da f0691d88     5..n;dA....?..i.
    3218:	fc2dbb37 30ae0db0 8b520eff 0f40a11d     7.-....0..R...@.
    3228:	4fe0d110 164176fd 6d7b15d0 675dd8d3     ...O.vA...{m..]g
    3238:	a041d979 15197c16 46c92365 53b5a52a     y.A..|..e#.F*..S
    3248:	549e592e 749d0337 d3e3d312 f6e72c38     .Y.T7..t....8,..
    3258:	cfa3eeb4 9eb45b47 effeac57 e69efc6c     ....G[..W...l...
    3268:	fe0947ff 08331f77 300c495e 304f73aa     .G..w.3.^I.0.sO0
    3278:	8a5836a0 cd31e4ff 53f2d1b6 81e387e9     .6X...1....S....
    3288:	dd9a068c 661fd427 f148158b 551f1ff8     ....'..f..H....U
    3298:	b909ac32 b7f14aee e0f12dbb 61baaccc     2....J...-.....a
    32a8:	bf99da4d 7fcc4d4d 635d8206 32b6f7e0     M...MM....]c...2
    32b8:	e5e008dd 422a22cd 07407d9e fe17e47f     ....."*B.}@.....
    32c8:	64d26f08 ed98bc2b 709fe294 01ac5b59     .o.d+......pY[..
    32d8:	4d53afca 294598f8 eeedcf4f 55e7d791     ..SM..E)O......U
    32e8:	5ff8d1fb 8b71f2d0 8ffdbca0 82fcd77f     ..._..q.........
    32f8:	c5a21aca 03933d7b 3bde3fa3 f9bc1ee5     ....{=...?.;....
    3308:	1f77f8c5 aead03ce 5c35887a b3bd903c     ..w.....z.5\<...
    3318:	aae091c6 9f8e7f59 edc5cf50 19241e3d     ....Y...P...=.$.
    3328:	e150789e 7eb75d51 a1de92a1 a903c58d     .xP.Q].~........
    3338:	8b707887 6be504d7 4837a587 d3a1b623     .xp....k..7H#...
    3348:	8de17e37 efac89f0 45cb795d 24a25d92     7~......]y.E.].$
    3358:	fff79cdd 8748d678 49d19324 06dc06f1     ....x.H.$..I....
    3368:	fb632478 ad48a7c1 86e67cff 9c9edc75     x$c...H..|..u...
    3378:	ae4f4943 1dbeffda 07cfb664 daff7616     CIO.....d....v..
    3388:	dfc32463 e535b784 7f801ecb 34c2fc02     c$....5........4
    3398:	4779341e 637fa75d 656f4950 12af1a63     .4yG]..cPIoec...
    33a8:	bc138b1a f6c2a8cd c68793a0 6d41b4cd     ..............Am
    33b8:	df8fa50e aa43def0 da47bd3d 3d4fffa0     ......C.=.G...O=
    33c8:	97eb0f7f 97de8e56 2a9a2ff0 6f5125fc     ....V..../.*.%Qo
    33d8:	e3cdaaff 8fe31ac7 7cb6bcb9 d62cd7bf     ...........|..,.
    33e8:	e5c8a68a fd180757 289a53e9 3c925fd6     ....W....S.(._.<
    33f8:	6f27fbd3 6ad305a8 d7a05600 a705ac9f     ..'o...j.V......
    3408:	723e8c7e bfc0b9a2 2ba01f4a 4b16e03d     ~.>r....J..+=..K
    3418:	e72166bd 73f3dc15 a793a81f 59027dff     .f!....s.....}.Y
    3428:	597d3691 77a89fe1 bbf4537f dd937bd8     .6}Y...w.S...{..
    3438:	8f88bf77 e228d3de 6b4b7bb4 993ce4be     w.....(..{Kk..<.
    3448:	6e7ad326 41bb73d1 8deaf218 7c25ce1e     &.zn.s.A......%|
    3458:	e0ff32eb c80d233a 03c97306 fbc71033     .2..:#...s..3...
    3468:	47e4836b 9d9fc51a a14e2dee fa72f2b4     k..G.....-N...r.
    3478:	0fa14e6c ef093792 5f953804 887445f8     lN...7...8._.Et.
    3488:	c82cee47 9e5e87e9 0f7c52e4 dfe329f0     G.,...^..R|..)..
    3498:	df65e41d 0e8ae500 fc6dc6d0 eede1ca7     ..e.......m.....
    34a8:	9b0f361c c1ff514f 1f6e55db 79253cef     .6..OQ...Un..<%y
    34b8:	71f39bd2 27e45fd2 b3fce4a3 974b26f3     ...q._.'.....&K.
    34c8:	27affccf ed28767b e86f7747 9d9be597     ...'{v(.Gwo.....
    34d8:	449ed483 f5db48ba 2063d9f7 7bff7ee9     ...D.H....c .~.{
    34e8:	db0f69d2 9007d943 4039ae4f dab3f616     .i..C...O.9@....
    34f8:	24ef2dfe 7e7fbd50 cbdd3f28 8fd41bc7     .-.$P..~(?......
    3508:	58fb79a1 fe52ae7e c9f3d6aa 3dbf7127     .y.X~.R.....'q.=
    3518:	fb8dbead fdc30ce6 232a7e06 1abfdc7e     .........~*#~...
    3528:	3f71a7b5 794747fe b7206f7a 697bedda     ..q?.GGyzo ...{i
    3538:	f6f568b7 181e7b93 d501a001 93dbf3bd     .h...{..........
    3548:	1e49dd06 ae1e6fee bf243d66 3e6dcb0b     ..I..o..f=$...m>
    3558:	3f408e05 20e6baea 1ba897ab eefb87ec     ..@?... ........
    3568:	0f7a34d2 97bb23bc 958d2ae2 ecd9aca0     .4z..#...*......
    3578:	eff8d069 43dbe4dd b6956dc1 d88877cb     i......C.m...w..
    3588:	b493b1ea b3fd92b3 ea1d1a05 84e97743     ............Cw..
    3598:	5dd45fdb fe4476c5 c8f49b22 bb6b3a8a     ._.].vD."....:k.
    35a8:	e77cafc0 aa25cfee 63d67d81 3fd255d7     ..|...%..}.c.U.?
    35b8:	55dbdd92 1dfe2779 1ffe0fef f018f7a8     ...Uy'..........
    35c8:	f375405c 9dd93973 5fcb55df f66aed58     \@u.s9...U._X.j.
    35d8:	3e27248b 2b5607e8 b992f57f 4de731f7     .$'>..V+.....1.M
    35e8:	ec93971f fe32ada5 95a37df0 876f0ff5     ......2..}....o.
    35f8:	477f27b7 3e38cddf 9cd574f9 ba4dd26e     .'.G..8>.t..n.M.
    3608:	26e93749 749ba4dd e969f493 59c57ef4     I7.&...t..i..~.Y
    3618:	9932dff8 a0694fdb eff8b93c c677f92d     ..2..Oi.<...-.w.
    3628:	dbf303bf fb2bbdfb b3bd925b 57dcdab3     ......+.[......W
    3638:	8708003c ed0e6c1c 796bffed 6f6a41a4     <....l....ky.Ajo
    3648:	206bb981 81b96873 9c9f8ae4 493e9f55     ..k sh......U.>I
    3658:	cf507b0c 879eb81d b556a1ac 677f731e     .{P.......V..s.g
    3668:	94fdc2e0 bc40b724 a7bfe71c ae47783f     ....$.@.....?xG.
    3678:	74c2001e a089de8e 60f6f6e7 dc19cc10     ...t.......`....
    3688:	d581e007 cdc3eb47 49873ebe f05fac07     ....G....>.I.._.
    3698:	6a41c107 359c77f6 610c1cb0 4f6e6a5f     ..Aj.w.5...a_jnO
    36a8:	1997642c 9b8538c4 8f4e163c 3329e943     ,d...8..<.N.C.)3
    36b8:	c7ec9708 05397b45 f66a8ff3 ff1ba7fe     ....E{9...j.....
    36c8:	f3df0ef7 3fddc818 073d0030 7eea37f6     .......?0.=..7.~
    36d8:	bfc160e7 6d12f707 303d05d8 1eccaaf8     .`.....m..=0....
    36e8:	03d5c796 7dce9844 b2061808 9e5a8158     ....D..}....X.Z.
    36f8:	8734916f 0ffaf31b f29827d5 b76fab3f     o.4......'..?.o.
    3708:	dcdecb72 387dd9ea b7a87f35 ef8f1fb0     r.....}85.......
    3718:	0059b8b3 6de01c58 f086fe5a 801675b9     ..Y.X..mZ....u..
    3728:	3c0fef96 89bc6e96 80de647f fcd5bff0     ...<.n...d......
    3738:	6ae8f6ff 8f465cd0 0a7f5eea c3eb6410     ...j.\F..^...d..
    3748:	abbeb316 351cc2c7 387da879 dfa5f66c     .......5y.}8l...
    3758:	1d81f781 fa91fb67 313b7b07 ddf1600c     ....g....{;1.`..
    3768:	32c53ba0 ece08ea7 08f782bf edf3a49c     .;.2............
    3778:	7dba278b 56bd20a8 d2806b3a dc39bbf5     .'.}. .V:k....9.
    3788:	cbbccfeb 5e0c02b5 0cefc56a 53d2e40f     .......^j......S
    3798:	83488058 dae90df1 3283608f c752e7ff     X.H......`.2..R.
    37a8:	8dc8c720 e84ebbd6 7cfd1d5d 361bd064      .....N.]..|d..6
    37b8:	3823b40f f66dbaf8 702c231d 8bc5f730     ..#8..m..#,p0...
    37c8:	78072e88 f733697f 06b99e5b 37300b4a     ...x.i3.[...J.07
    37d8:	5ffda868 0dbf048d ae8a707a 5e9cbfb8     h.._....zp.....^
    37e8:	6b316de7 08ff853f 0cb4f830 6f3f6344     .m1k?...0...Dc?o
    37f8:	d24ed6e5 10669c4b c60f67bc 0ef8a0af     ..N.K.f..g......
    3808:	3fd3e01c 07b233f9 f37c8205 ff59667b     ...?.3....|.{fY.
    3818:	69163d22 9db1ff55 f40f8f53 f17d9a4e     "=.iU...S...N.}.
    3828:	e2641402 ff8b4583 3e83be76 5ded04fb     ..d..E..v..>...]
    3838:	f4e611c6 f12a6f1e 89cfdb9b 1ba91ef8     .....o*.........
    3848:	8831d1fb b48f77c5 7e27af41 a18fe01f     ..1..w..A.'~....
    3858:	6f66ac79 602eefcf 203737dc bf86a7e8     y.fo...`.77 ....
    3868:	5b13981b 7bc7ffb0 dd9c2357 040f7379     ...[...{W#..ys..
    3878:	ef47b79a 7fc208cf 44bbc0cb c00fee3f     ..G........D?...
    3888:	d3fd3ee4 165cacc5 7f61bdbd b8c7a80e     .>....\...a.....
    3898:	a4801ea4 84f80ad7 a60e94d0 331fea25     ............%..3
    38a8:	00ef4676 f53bade8 8c728fbf 09eee01b     vF....;...r.....
    38b8:	118151fa 138b7b5d 0d65d35c 7d9b3760     .Q..]{..\.e.`7.}
    38c8:	da5d1fcc e16de61f f37236fc 3e511618     ..]...m..6r...Q>
    38d8:	1fd1e407 f51eaf73 83dcb9e3 4ef6064f     ....s.......O..N
    38e8:	f3e97972 f9cc7bdb ed5937b4 dbcd5c0d     ry...{...7Y..\..
    38f8:	433e0f73 0feb078b 7830bf7d fff8d9bc     s.>C....}.0x....
    3908:	9ff1cbf5 6ffbfeb7 76d812c8 8f609b30     .......o...v0.`.
    3918:	48d2a512 35fe0a61 da61f7f8 e8ce7d1e     ...Ha..5..a..}..
    3928:	81e6d905 6416157e bb187a0f b7987751     ....~..d.z..Qw..
    3938:	730acf9f 0f2752ab 01e6dfc6 fa09906b     ...s.R'.....k...
    3948:	f8b47ed6 e2f2b6e3 7adf311e ca217735     .~.......1.z5w!.
    3958:	2f569775 b16130f7 62b3471b 42aed0a7     u.V/.0a..G.b...B
    3968:	e7f61ac1 b520c77e 88796471 3d0dff4a     ....~. .qdy.J..=
    3978:	07b9fde9 962b7018 33e5071c 2019ac40     .....p+....3@.. 
    3988:	583e33cb c2fe660d db485682 b00f401a     .3>X.f...VH..@..
    3998:	9809c7d9 37a05db4 853fac79 0c614d43     .....].7y.?.CMa.
    39a8:	a3cc6358 bdf852a2 2f22e16a 872dc816     Xc...R..j."/..-.
    39b8:	2e15afbe 003d63f6 0c9fb6d8 a159cba2     .....c=.......Y.
    39c8:	bdb7493d 97479fbd efb24a41 337b649a     =I....G.AJ...d{3
    39d8:	1d67f6b5 3d35fcc3 e2e0c6c6 ef6159a7     ..g...5=.....Ya.
    39e8:	587269d1 c8fe7de2 064f39ad ee33e2b3     .irX.}...9O...3.
    39f8:	c0b23403 7ec35859 93a466af 24b48d23     .4..YX.~.f..#..$
    3a08:	100f09e8 bcbd02d1 8aff7eea e7079165     .........~..e...
    3a18:	8916afd0 f6cafd7a a41a33d3 527d3f90     ....z....3...?}R
    3a28:	e3d85c2d fc5f0a32 082c7934 047a3a4e     -\..2._.4y,.N:z.
    3a38:	8d01deed 75b89799 d92a2b39 ecbdad4c     .......u9+*.L...
    3a48:	5de6e19a 5b661974 3f647b64 bfafaf24     ...]t.f[d{d?$...
    3a58:	fec2fe05 ccd01ada 6f299f2d 11ff5a7f     ........-.)o.Z..
    3a68:	4c007f7c 20e44190 8c0ef4bd 5bd0605e     |..L.A. ....^`.[
    3a78:	cbd20b27 0ea60523 e516e2a3 0e687ec0     '...#........~h.
    3a88:	9b5835dc 4cd5cfdb 040b3f6f 641015a3     .5X....Lo?.....d
    3a98:	80fa54f9 e3c69235 918a7da8 76b662e6     .T..5....}...b.v
    3aa8:	a5b33179 6f77e86f ecced778 51c9e5fc     y1..o.wox......Q
    3ab8:	d4783944 72a96d83 48ef72f0 ffd10c76     D9x..m.r.r.Hv...
    3ac8:	fec27d00 dbdbdb9d 2e2b5bfa fdaa1566     .}.......[+.f...
    3ad8:	1c1dac0b dc925fde 0f388c21 dd873faa     ....._..!.8..?..
    3ae8:	a300d123 f4015af0 1cb70745 5e8dbf8c     #....Z..E......^
    3af8:	73d04734 31dec792 f7a8dcad 5ed2568e     4G.s...1.....V.^
    3b08:	bfc01c66 e63a6c59 7fe36610 f1dfbd95     f...Yl:..f......
    3b18:	71dff41e 9e469fd2 21746b39 641bc2bd     ...q..F.9kt!...d
    3b28:	6e237918 27756ebd 39ea405e 3257dfee     .y#n.nu'^@.9..W2
    3b38:	46cbbbb7 bd3ece7e ae068998 de1b5bfa     ...F~.>......[..
    3b48:	8d7ffea0 795711fa cfc3796a 8f45b8a6     ......Wyjy....E.
    3b58:	d96b80f5 bdc17672 c0de25ef bf99f6bd     ..k.rv...%......
    3b68:	ae0e4b93 177d2816 bf16cfda 27b56afd     .K...(}......j.'
    3b78:	c749d5bc 217bdf65 f3d699bd 8c953d36     ..I.e.{!....6=..
    3b88:	de3951ef 1fb0afbd e07e7011 d96c40b5     .Q9......p~..@l.
    3b98:	d402066d a992afa2 5c6f5b97 4f7ed22e     m........[o\..~O
    3ba8:	10c97bb8 ce55ee0c 903f606f ab8f0616     .{....U.o`?.....
    3bb8:	ddb6de34 8737776d fb5dcf5e 8d22a7c9     4...mw7.^.]...".
    3bc8:	69772bbd b592bf29 ea6b8f0d 125ff774     .+wi).....k.t._.
    3bd8:	f30f5f18 eff18f7a ebc99934 5dcc2d22     ._..z...4..."-.]
    3be8:	0271c7f0 f401fe08 31439971 582bf757     ..q.....q.C1W.+X
    3bf8:	1c02a3c0 05f7ad0a be064949 187d4470     ........II..pD}.
    3c08:	85db43f8 96c8ecfe 5ec14adf 3d05b36a     .C.......J.^j..=
    3c18:	2cbbed52 fc3ff092 3cdbbd7e bc1819c6     R..,..?.~..<....
    3c28:	dfcd3a08 cc5d9b6e f555f541 2fab4155     .:..n.].A.U.UA./
    3c38:	e7f6f9cf 562dbb82 561f82e0 f7399541     ......-V...VA.9.
    3c48:	9f5692bf 4bd01c62 22c23b4f f0243f16     ..V.b..KO;.".?$.
    3c58:	ef4f803c 6940f7d5 fb3df0b5 0c0af870     <.O...@i..=.p...
    3c68:	368e7aac efd05b0c c3d7c0bf 666df7fa     .z.6.[........mf
    3c78:	28f3b570 2088e07d ed819fe1 76f962df     p..(}.. .....b.v
    3c88:	211bf5a6 1fbd7a89 d36a714e be81756f     ...!.z..Nqj.ou..
    3c98:	baef683f 5f7c0058 938c4181 e0e4b69f     ?h..X.|_.A......
    3ca8:	ea46bbe6 1495953e 9f8497d8 780e0de3     ..F.>..........x
    3cb8:	78f2f112 7ec09fe0 723fa99a ab994d90     ...x...~..?r.M..
    3cc8:	0d81e298 a8aa1c62 a892ffd8 da68fff6     ....b.........h.
    3cd8:	b596b66f 176f0da8 c5f443cd 7830793a     o.....o..C..:y0x
    3ce8:	a5afe1d7 67ee62d7 7aa64d3d e10345ed     .....b.g=M.z.E..
    3cf8:	27b9d780 a1c471a3 b0b778f6 3fcf4fcf     ...'.q...x...O.?
    3d08:	0c8eec20 f3a7bb83 f3f6caff ef21ce64      ...........d.!.
    3d18:	bbe15f57 5d40f68b fcf0d056 b96349b4     W_....@]V....Ic.
    3d28:	af3b127f 704304ff f1b3c6f9 610c65cc     ..;...Cp.....e.a
    3d38:	cc3f5ade 7b0a836a 1b0b027e 74a5645c     .Z?.j..{~...\d.t
    3d48:	cff5fe0e e5e649fb 51afe0e0 6c507c1b     .....I.....Q.|Pl
    3d58:	6ae7261e f4a93c0f 03075c16 69bf146f     .&.j.<...\..o..i
    3d68:	97bf5a3a 78080f8b 70528901 c0b2f53f     :Z.....x..Rp?...
    3d78:	4367c97f 9bf7f2df 0f254dc3 fc99cec2     ..gC.....M%.....
    3d88:	ff62723e abbe8e01 0973bc2a fdffb039     >rb.....*.s.9...
    3d98:	5bfbd713 619b63bc 77f7b014 19041af4     ...[.c.a...w....
    3da8:	35227ad6 03ec037e d9d012b3 5c5cef3f     .z"5~.......?.\\
    3db8:	835d9926 14686ad1 730608ff 2a7ff4a4     &.]..jh....s...*
    3dc8:	9d8f3039 ba64c0fb a27d1ae9 3b1fd187     90....d...}....;
    3dd8:	c97ad448 0c185c7e 862b4a61 76da8c4b     H.z.~\..aJ+.K..v
    3de8:	4b7d5ae6 fc5dee28 c83ed3a4 7629ce64     .Z}K(.]...>.d.)v
    3df8:	721ad094 c0e9b8e7 d1a339a0 b88f16e3     ...r.....9......
    3e08:	b87fef1e 21de67a1 7857aac3 83f260ff     .....g.!..Wx.`..
    3e18:	8d97a407 decba94c 58b3f4a3 a93618ec     ....L......X..6.
    3e28:	1d9d26f6 5fda9f2e 61379c9e 9c75ca0b     .&....._..7a..u.
    3e38:	c50c9068 f09d4877 7edeba6f 8bd788c2     h...wH..o..~....
    3e48:	d9da0ea8 90585367 64da7483 0f730b5f     ....gSX..t.d_.s.
    3e58:	67af03b4 eb4adcb8 a8c6f7b5 2cd4fccd     ...g..J........,
    3e68:	011f6f5c 61b1e377 1764c954 838195d8     \o..w..aT.d.....
    3e78:	f6f02f93 f2314fab 45d46acb 0f1ee003     ./...O1..j.E....
    3e88:	107c07a0 a71127b1 76be141e 45723c9a     ..|..'.....v.<rE
    3e98:	1cb7023c 0e483fa2 5b87eedc 6629adc3     <....?H....[..)f
    3ea8:	b38e3b8f f5a18ddf b74ed178 7127498b     .;......x.N..I'q
    3eb8:	fce1b062 e63e8e60 9ee54701 e775971b     b...`.>..G....u.
    3ec8:	c66493f1 a207c44f efecfe23 d43eb301     ..d.O...#.....>.
    3ed8:	e3fc6afb a3f5e170 8b7f6570 1e79b4bc     .j..p...pe....y.
    3ee8:	0cf1d3ff f947642c bdac33f4 00c3f086     ....,dG..3......
    3ef8:	2fcf5d04 9f369f36 a9bdef0a 5cb0dbf6     .]./6.6........\
    3f08:	b28c727e 2a03d9db 37522c19 54fec169     ~r.....*.,R7i..T
    3f18:	3cfb314e 41ef5403 b2d6fdcd 9fb64fcf     N1.<.T.A.....O..
    3f28:	44733b5c 7f9fb9c2 c20e1f02 058d5fdc     \;sD........._..
    3f38:	11f1a41a 5b8b00f2 4b9f733f 36cbfe33     .......[?s.K3..6
    3f48:	417fe6e4 41eca7b8 a6f0da84 ea61fdf3     ...A...A......a.
    3f58:	0f370f83 2bdb0e1f fd85bf30 0f361eda     ..7....+0.....6.
    3f68:	fbc21b3f 1bffd800 e4b4364e b14f8601     ?.......N6....O.
    3f78:	d557fe31 bd2047fe 37cebc73 046dec4e     1.W..G .s..7N.m.
    3f88:	63afed17 561c1e2e 5c86de8d f83f5bdc     ...c...V...\.[?.
    3f98:	5ef772e3 1721303c 9cd419a7 569f2ff3     .r.^<0!....../.V
    3fa8:	641040f1 3cd72c3b 53dde15c 4f9b85f0     .@.d;,.<\..S...O
    3fb8:	6305ec9b c3f70b23 801d977d 6c86efb9     ...c#...}......l
    3fc8:	883417be 8fe038df f8f63ff3 e526f731     ..4..8...?..1.&.
    3fd8:	8cb67674 f706b59a ff32dc1e 06ef6157     tv........2.Wa..
    3fe8:	7b699499 e9258920 6dbdba52 16113949     ..i{ .%.R..mI9..
    3ff8:	8ff015ad 6ed45bba d27ed157 54a97689     .....[.nW.~..v.T
    4008:	e6816733 661c4e67 320ebccb 9cf20b39     3g..gN.f...29...
    4018:	eb0b07d8 77f8eff1 db9306e4 b0a419e8     .......w........
    4028:	a9bf9d00 f705acbf 95adc721 96dc59f2     ........!....Y..
    4038:	570cf930 406307d5 740b45d4 e0c83243     0..W..c@.E.tC2..
    4048:	ce5dc001 ede84a96 511fb953 be273683     ..]..J..S..Q.6'.
    4058:	bea3f00f 800f4bfd 8234201b bff897fe     .....K... 4.....
    4068:	a559bf84 6dcf80d4 c91725dc 7b569078     ..Y....m.%..x.V{
    4078:	694bff3e d5d845e1 a3d1bb87 15c9ed23     >.Ki.E......#...
    4088:	d0773947 f3fe2d78 b715afe9 61fb9c34     G9w.x-......4..a
    4098:	35e19174 9f90edf7 371686bf a4dd26e9     t..5.......7.&..
    40a8:	6e93749b 49ba4dd2 eef8c9e5 2771354b     .t.n.M.I....K5q'
    40b8:	ec4bfbfe e0f79281 f57fecc7 7b8fad6f     ..K.........o..{
    40c8:	eff898fa bdd66648 bc1dfcd2 4af0610f     ....Hf.......a.J
    40d8:	ec6d5f2c ae945fc7 e7f5998c 716c83e5     ,_m.._........lq
    40e8:	03bae682 48ec73e6 cb3ef7b0 cae84185     .....s.H..>..A..
    40f8:	5667b7ff 4dcf0f76 6ce1897b b3393722     ..gVv..M{..l"79.
    4108:	03f60dff f7cc03b3 f83fbc07 c2eff8ea     ..........?.....
    4118:	bf0617df 743eb7e0 e4d9bf3b 8e2dade8     ......>t;.....-.
    4128:	4739ff01 f072bf70 fd2f3764 f5a2b5a4     ..9Gp.r.d7/.....
    4138:	333fc6a0 bf19e011 49bf1e9e 833133c7     ..?3.......I.31.
    4148:	8e68f46d 0164e1c0 901e7b3e 63cdf3d8     m.h...d.>{.....c
    4158:	dfa1be89 e0620183 e13378ff c80f337d     ......b..x3.}3..
    4168:	6105fee1 2088b47f 3960912f 17b2800e     ...a... /.`9....
    4178:	ef0bfd40 6ed81852 2fa04fec bf208812     @...R..n.O./.. .
    4188:	36ee0cc3 f2d6ff47 0a778477 11a417e6     ...6G...w.w.....
    4198:	7ac5d9f9 e316c390 5efe0cc7 d977d1c2     ...z.......^..w.
    41a8:	9bd15402 da06dfc1 912c1888 cb98b7df     .T........,.....
    41b8:	cc3fc7ab c7981e92 c739f60b 73ca50f0     ..?.......9..P.s
    41c8:	0e199fbb 9ce3ef27 077fc63a fb899ed6     ....'...:.......
    41d8:	681709ea 3e93fe36 1c45bbfe 016177ad     ...h6..>..E..wa.
    41e8:	076ebecd 235acc25 7ad9b91b 449e906f     ..n.%.Z#...zo..D
    41f8:	5cdbdec7 a6cfce94 fce5dd29 224afaa3     ...\....).....J"
    4208:	b91c27b8 0dd12d1b 0dfb893f 7c1bfbbf     .'...-..?......|
    4218:	0044c2ff 73229d57 fcbd6ff9 1d449eb3     ..D.W."s.o....D.
    4228:	fa3bf896 c1e6d1f2 c01897fc 6cf81673     ..;.........s..l
    4238:	fb4e83fc c390eff1 0e5aecc5 03c42eef     ..N.......Z.....
    4248:	bbfe3284 203e27e0 b453f096 3d07499f     .2...'> ..S..I.=
    4258:	07fd8b77 f54767c0 1eafda58 2fc9d6ff     w....gG.X....../
    4268:	bc44e7ac 0f6ae8c0 7ac43bfc 35787cfd     ..D...j..;.z.|x5
    4278:	9f09f202 0edc799f 12d8e775 37ad182f     .....y..u.../..7
    4288:	048bd0cc c71f3259 b171fc75 c81ab11f     ....Y2..u.q.....
    4298:	c1be0582 ef2e5416 c376f471 1efa5fdf     .....T..q.v.._..
    42a8:	f4653515 71af3f5e f56e350e 4bfee635     .5e.^?.q.5n.5..K
    42b8:	bff89a0e c7231f82 370621f8 7f16a35a     ......#..!.7Z...
    42c8:	fc63b3aa d270eaff d9d71ea9 fc69d692     ..c...p.......i.
    42d8:	87a2abae 16a0df8b 1b687efb ae979a1b     .........~h.....
    42e8:	f1963d1c 6c15b26b 513c1731 f4b017e1     .=..k..l1.<Q....
    42f8:	d2d643a4 fec0749b be1893e0 34f7e43d     .C...t......=..4
    4308:	7598ec11 a0e7a392 02b1b059 ca680f99     ...u....Y.....h.
    4318:	37fe39f7 6b07f2d0 4fc7f9cc 34dde897     .9.7...k...O...4
    4328:	803935e7 11dccc05 34690070 f4a11ea0     .59.....p.i4....
    4338:	7ec06c06 9806aebb 0f875573 9cfa3f19     .l.~....sU...?..
    4348:	9fbfa36a 435fd075 7eb0ad76 0a9f703c     j...u._Cv..~<p..
    4358:	a3f835df 4f8fa074 c07a5375 fced702c     .5..t..OuSz.,p..
    4368:	a836c823 de216fa5 292c52fb 6ea1b020     #.6..o!..R,) ..n
    4378:	2cef12bf 1f7e3239 d75fff0c a476c07f     ...,92~..._...v.
    4388:	290563e5 2fad1771 f1f972aa e147e35e     .c.)q../.r..^.G.
    4398:	e0f78e7e 166d0201 7fc4b863 cb004456     ~.....m.c...VD..
    43a8:	b067fc6d 0be21b07 7f449100 4d57fd3c     m.g.......D.<.WM
    43b8:	fd1e7904 3908ce4f fc12fcdc f18d6c82     .y..O..9.....l..
    43c8:	176fc6d3 45662fac da88a611 e136f60e     ..o../fE......6.
    43d8:	42df9697 7207b996 43ebe940 09c30d78     ...B...r@..Cx...
    43e8:	907ace8c c93df770 685b3acf d4bfb8f1     ..z.p.=..:[h....
    43f8:	f5180703 ca1cfe2f e7759035 71ac0759     ..../...5.u.Y..q
    4408:	fe600e78 dae240f4 9c67ca69 0e379e53     x.`..@..i.g.S.7.
    4418:	06b67ec4 f0df1d67 79e4cbd1 7fae07c5     .~..g......y....
    4428:	80c0910f ccf03258 5747a8df 858acfc4     ....X2....GW....
    4438:	f7847bfb f6346fc7 37123ac9 083d1509     .{...o4..:.7..=.
    4448:	fcac707a 84388e23 3c40bc7e 03ee3e9b     zp..#.8.~.@<.>..
    4458:	86334b97 f5dac207 fb7fe172 adc0a579     .K3.....r...y...
    4468:	4a3c8d4c 5b73edc4 8ecf58ba 2d96e943     L.<J..s[.X..C..-
    4478:	04cbf066 abe4e13f 81994872 208a8fd0     f...?...rH..... 
    4488:	fb8198bd 7599b72a 311787b7 af97afa7     ....*..u...1....
    4498:	5f6e5f43 3811d7d2 d20dc0db 81ce5ec0     C_n_...8.....^..
    44a8:	6c0fe335 f1d01c05 2c0e52de 1520d4ab     5..l.....R.,.. .
    44b8:	daf00b9f 4e1f5110 0fc24733 04596888     .....Q.N3G...hY.
    44c8:	5fac15d0 66e60fbf 2ade7e95 a4b7d174     ..._...f.~.*t...
    44d8:	39ee1007 1ab0dbf8 2ea3d60f ee37ab1d     ...9..........7.
    44e8:	7b62fb6f 6f4ec596 665f8aa4 81ad40b5     o.b{..No.._f.@..
    44f8:	92a78db7 491a820a f60f3b8e 7ca2c1f8     .......I.;.....|
    4508:	fde1fb27 dfbcd452 3d6c29db 5a451c78     '...R....)l=x.EZ
    4518:	b848bfeb f20dc0cf e241ce4d f07a6b50     ..H.....M.A.Pkz.
    4528:	8bcee18a afc106d7 1a0fc6a2 ea236a20     ............ j#.
    4538:	d5b242bf bbf99d62 f89a67e3 9c6048cf     .B..b....g...H`.
    4548:	65512c46 623a5b79 3fca6a81 fc2bfc7b     F,Qey[:b.j.?{.+.
    4558:	76ef7f98 9afc0f8e f1bbc885 dcd6e5b7     ...v............
    4568:	3beff972 b891fb7a 2f66dc27 9fe4db21     r..;z...'.f/!...
    4578:	aa8d83d6 fcc2e7fd 9fe3159f 87380de4     ..............8.
    4588:	95079e23 64a805de fbf5dac2 32affdc2     #......d.......2
    4598:	afef1efb e6642f43 c207a22e efb9a202     ....C/d.........
    45a8:	c0f8b007 b058d2e3 2d9fbec8 90f5874a     ......X....-J...
    45b8:	8b2d3d5e 25cc4690 073876fc d424a49d     ^=-..F.%.v8...$.
    45c8:	12d9f8f5 f5c0ff7b b06f000c fe17ca63     ....{.....o.c...
    45d8:	80bf9ebd f1516da8 896935f9 1792ab9f     .....mQ..5i.....
    45e8:	c5b3cce6 75f2dbfb 7af99fad febcd6d4     .......u...z....
    45f8:	bebf02da e0bb7e2e cc9bcadf 6c4f151c     .....~........Ol
    4608:	2c263cde 3965bd38 18f1ef50 59af6771     .<&,8.e9P...qg.Y
    4618:	b7c2bf4f 1eca9bf9 c8bed840 a3bdee61     O.......@...a...
    4628:	cf07b2ef 7c2cbdec 41114cdb 49b0f36c     ......,|.L.Al..I
    4638:	74e7c19f ff96c088 3d03fca2 24c83903     ...t.......=.9.$
    4648:	9f589f6e 1ce5ded5 db1e3c44 f38b37f2     n.X.....D<...7..
    4658:	d5004499 b9895fb5 19e4562c b641663f     .D..._..,V..?fA.
    4668:	7deb5299 85aa53ba eb0afe65 70a9725b     .R.}.S..e...[r.p
    4678:	a95bd4f4 a5c3fdfc 7f5897a3 366b34da     ..[.......X..4k6
    4688:	3cd9bd9c e6b51624 f5bcfdfd 57c2ca3c     ...<$.......<..W
    4698:	3bb094cd 1510fc14 44ffc75c 0e6677fc     ...;....\..D.wf.
    46a8:	b20bb6f7 edf0c381 4e1c0283 ff1941ca     ...........N.A..
    46b8:	eb11cfdd f6f9649b 0ee1cef1 b55ca7ca     .....d........\.
    46c8:	bdd3f7eb b7d5bb87 f8b0aeed 57f5ddda     ...............W
    46d8:	7b6f59f4 847ffc77 6b6df554 1ead7657     .Yo{w...T.mkWv..
    46e8:	7c373976 dbfd8f2e 8ce3f191 58ff7bf0     v97|.........{.X
    46f8:	8208efa2 389abd68 827eb2bc b99934b5     ....h..8..~..4..
    4708:	78125c2d ef4a0892 55b382a1 03cf0a7d     -\.x..J....U}...
    4718:	d3f0188b e506b18e bbd80e19 6e60fb57     ............W.`n
    4728:	c34f7e33 1f84dbb7 456ddd18 c20dae14     3~O.......mE....
    4738:	dff1cda9 7dcff9eb 0bb786f0 8f64f044     .......}....D.d.
    4748:	cf5bcf0a e01a14b7 b979527f 1f941fb5     ..[......Ry.....
    4758:	c408baa5 44a37636 1b7b057c 3d8f505c     ....6v.D|.{.\P.=
    4768:	fc979502 bfe327c9 47bfff67 e726d1de     .....'..g..G..&.
    4778:	63ceead0 0b3ae788 c40fbd90 7fde17ad     ...c..:.........
    4788:	34b029f5 59c57e7c 7071953e a80da9d6     .).4|~.Y>.qp....
    4798:	59bf81f5 016123f8 f6554d62 3af1a10e     ...Y.#a.bMU....:
    47a8:	01fb6150 7fd11beb 425d267f ca5dead5     Pa.......&]B..].
    47b8:	f089f8bf 55ff114b d7eabbf0 607dabf3     ....K..U......}`
    47c8:	039a51b2 9eff7fc7 10472f5a 873ba64f     .Q......Z/G.O.;.
    47d8:	fe2974c9 e3cb1ffb 74d623bf 1e548ffb     .t)......#.t..T.
    47e8:	d74797b5 057ca7ec 795b9c20 64f53e80     ..G...|. .[y.>.d
    47f8:	6f561f84 b3f19bc9 10f00b72 be639dff     ..Vo....r.....c.
    4808:	940ab47a 839cda1c 79896af1 3fe307c4     z........j.y...?
    4818:	dc1d7acb fb5de11b 26eec423 fe748efc     .z....].#..&..t.
    4828:	2a47b173 8830b67d b90047e0 9ca49ac8     s.G*}.0..G......
    4838:	67eb2a49 88d1a066 326c1a23 90be1003     I*.gf...#.l2....
    4848:	43d01694 efc655b4 afc739bc f3f6c7f5     ...C.U...9......
    4858:	1cb7f6b2 0e6a9dff 88a78073 a3decc04     ......j.s.......
    4868:	bfe2eb1f 9883dc27 9cfd8df2 19aa2f53     ....'.......S/..
    4878:	017751ff 3de3ba8d b0dff7eb 3f1b07bf     .Qw....=.......?
    4888:	f8316e6a 782fa277 488df3a7 e7c1bf71     jn1.w./x...Hq...
    4898:	b09e82ff 9074ca02 7ba809a8 1898499e     ......t....{.I..
    48a8:	65fc3ae8 c992a7cf ed476fe8 503666f7     .:.e.....oG..f6P
    48b8:	7f167b5e 433c64ff 3b30e014 b8f5899d     ^{...d<C..0;....
    48c8:	b996ffdc 1df81d67 1f82464e d6597761     ....g...NF..awY.
    48d8:	ff1cfb7b 27af603d e5df3301 6d8f27dd     {...=`.'.3...'.m
    48e8:	28f2f7fc 7a4a09cc 7168f787 02445a14     ...(..Jz..hq.ZD.
    48f8:	1ae3ef16 2ddccdcd 843f37b7 9fe7efbd     .......-.7?.....
    4908:	1a87370f c05f9bfc 9f0ef5ef f3acd377     .7...._.....w...
    4918:	e8e23fc8 1eacb9cf 735dff11 77495806     .?........]s.XIw
    4928:	1fef7e0c 731e8f0b 1b870d71 ef3435bb     .~.....sq....54.
    4938:	e3ed88e4 e21bc637 49e342a8 925f1533     ....7....B.I3._.
    4948:	cf883965 e0afd92f 0e0a6899 99ff9ba8     e9../....h......
    4958:	afe70330 f1b1ecc6 670fe61b 0c3daa3b     0..........g;.=.
    4968:	81b6adb9 ad660ef9 b3377e3c 95b7e516     ......f.<~7.....
    4978:	e5955d89 85bab120 5fe32cc1 9a66106d     .].. ....,._m.f.
    4988:	0722d399 207e1679 88a709f0 6de1b2e5     ..".y.~ .......m
    4998:	33b017f1 9eb4db97 3e4ff224 d001b1d1     ...3....$.O>....
    49a8:	d10fd77a 02730afb 68d637be 41dbae3d     z.....s..7.h=..A
    49b8:	3d9972e1 b0117b2e 4d9bf1bb bc5687c3     .r.=.{.....M..V.
    49c8:	3a0b0641 01bf13dd 43107fe8 93f6bb5d     A..:.......C]...
    49d8:	f04bcf04 1531b1fb 76dc9afc 13f1cba3     ..K...1....v....
    49e8:	4c953c9d ecf3f6ad 29f369b3 ff84218d     .<.L.....i.).!..
    49f8:	88fe7944 877b5ff7 ec69b03e fc729927     Dy..._{.>.i.'.r.
    4a08:	401f0777 e1eefb1e 0c2fbf11 d311d960     w..@....../.`...
    4a18:	37c7b3ca f7e7b1e4 9bd6c790 53f40ff1     ...7...........S
    4a28:	fe05febd c0cf7b34 2c13e4bc 0dfd00b6     ....4{.....,....
    4a38:	b6fd98a6 3e3fd8f8 5f40d6a4 5d39817e     ......?>..@_~.9]
    4a48:	827fbcac f1195753 f43fcc69 ceba668b     ....SW..i.?..f..
    4a58:	fead5173 fb1bff12 07f7e258 d1c4afeb     sQ......X.......
    4a68:	f1c0458b 9bb7c3df fa2be187 7fc9caf9     .E........+.....
    4a78:	b2dff60d f30eec80 5e02ed8f 7f3542c4     ...........^.B5.
    4a88:	c0fc1857 3b55e3df edc4f8e1 fef1a10e     W.....U;........
    4a98:	31c8cb92 01b3c67e 236bdb97 046cdcac     ...1~.....k#..l.
    4aa8:	01cd9978 0f0fad53 b3803399 9d0fb1e7     x...S....3......
    4ab8:	0bf27d3a 9f827b4f 078c52c2 5dff1357     :}..O{...R..W..]
    4ac8:	fead13fa 03f00b92 dbdd84fe 320ef9c4     ...............2
    4ad8:	ff60e018 3f4248d2 bfe05737 0abdc592     ..`..HB?7W......
    4ae8:	e4ff015e b8eb7c3c ff5b9cfb 277bdae5     ^...<|....[...{'
    4af8:	b19f2ebf f43933df bd2f76dc 96d678d1     .....39..v/..x..
    4b08:	16e22815 b5c3df38 bbc19bb1 3d5d0fae     .(..8.........]=
    4b18:	be7c2c08 318e1d18 2fe8ba8a 041a6cb9     .,|....1.../.l..
    4b28:	d8302b9b fb7d6e25 c391d698 ece3f855     .+0.%n}.....U...
    4b38:	5850e239 bfc4abe4 4fadbeae dc6cafab     9.PX.......O..l.
    4b48:	bfe215a2 b95107b3 bd39468b 9ba3fdad     ......Q..F9.....
    4b58:	dbc0b0b4 d5c387c3 fea1afe2 3eb646ea     .............F.>
    4b68:	cb5fe774 5eea43cc 1aaee098 932dcad0     t._..C.^......-.
    4b78:	348abb96 1a49dbcd 114f9bdf 1ce9be81     ...4..I...O.....
    4b88:	85ca5ec1 8ee9860d e3d7b4b3 191fdbdb     .^..............
    4b98:	3078ddff 7df6681b c7da997e 7acafbd2     ..x0.h.}~......z
    4ba8:	6c5a5dd0 9750be48 3cc2f26e 5c289eb0     .]ZlH.P.n..<..(\
    4bb8:	eb02474b caaeea3b 3f7f06c1 5a48d6c9     KG..;......?..HZ
    4bc8:	bd8a453e 10a75fc3 ae16b039 a240de92     >E..._..9.....@.
    4bd8:	9dcaac36 ec2f7ff1 e28f787f edc3a4b5     6...../..x......
    4be8:	bd88497f 0abb7682 1ffd1dff deb10ec6     .I...v..........
    4bf8:	abfbb9d5 923af2cb e7b4d59e 5da3f7b2     ......:........]
    4c08:	2602c348 92c0f42b d9ab3ace ee229860     H..&+....:..`.".
    4c18:	da6bde9b c76fe4af fff8f7ff f1f7fc44     ..k...o.....D...
    4c28:	b004f00f e3fc0b0a dce1fb98 e4c7c677     ............w...
    4c38:	21fdaab3 7f031c7d d647f5a1 6fd18ac3     ...!}.....G....o
    4c48:	826fd63f ceebeb5d 4dd26ffd e93749ba     ?.o.]....o.M.I7.
    4c58:	9ba4dd26 363e9374 d673d661 daf65609     &...t.>6a.s..V..
    4c68:	b24eb7f4 27c676eb f71d6710 3edff3d5     ..N..v.'.g.....>
    4c78:	dcd3ff8d da0ac003 13cbef5b 9275cf27     ........[...'.u.
    4c88:	f732cc82 e0c227da a007cd59 dab783f5     ..2..'..Y.......
    4c98:	9decd83c a9861590 cdc80d5b 9e3b1b33     <.......[...3.;.
    4ca8:	5c7717bd 78f0d0e7 26bb7e2c fccf5a2b     ..w\...x,~.&+Z..
    4cb8:	ef157ff4 27bb8401 ece4041e 8406c9d7     .......'........
    4cc8:	24757f7f fe577fdc d78da6fd e161fcce     ..u$..W.......a.
    4cd8:	7f23eb7e ecd8342f 35946b0b f7937638     ~.#./4...k.58v..
    4ce8:	0c0ee30d e502c470 0d656853 b8c78f58     ....p...She.X...
    4cf8:	d861b185 fe93b2ff 8b339be1 1347d124     ..a.......3.$.G.
    4d08:	d96d3a8e c0366e28 b5867f7b 0e3cf86f     .:m.(n6.{...o.<.
    4d18:	3f7c6036 660398cc 1dfa64b8 2defb040     6`|?...f.d..@..-
    4d28:	bdfb967e 61afd7d3 e75d20c1 81f6dd98     ~......a. ].....
    4d38:	efaa6c3d 300343cf 4ec1a10f 0f78c77f     =l...C.0...N..x.
    4d48:	81bff3d0 30f73da0 a58e1bde e0a26b0d     .....=.0.....k..
    4d58:	8ff3bf18 603cacad 8a8e3271 def8c03e     ......<`q2..>...
    4d68:	f0b01634 56ffe11d 6f473fab 8df6099d     4......V.?Go....
    4d78:	4a6de037 b49d5734 1af17bff fb021b01     7.mJ4W...{......
    4d88:	e3f2c6bb 5406c81f bab1c016 c31dbf19     .......T........
    4d98:	cc5897bf 1ec1d2ba 7d3bfa02 046d7ef0     ..X.......;}.~m.
    4da8:	7c7836f7 ad97f70e 4581f606 47d9a8ee     .6x|.......E...G
    4db8:	13dc0386 f95b0bff 0f5f8267 f235111e     ......[.g._...5.
    4dc8:	368341b8 121b888f d04e5dc5 2da7f774     .A.6.....]N.t..-
    4dd8:	9f7a5903 9eb59ead 9e540b20 bbb51138     .Yz..... .T.8...
    4de8:	ff7dbcc1 ef6e1c12 b63c2a32 6f179d00     ..}...n.2*<....o
    4df8:	ec9a43c8 028d9de6 6b49fe3f 49ef6041     .C......?.IkA`.I
    4e08:	07dfa3dd 70dd780f 1fdeb5b1 788777c4     .....x.p.....w.x
    4e18:	f0d44011 b990fb16 f3503c1a 73fa2c1f     .@.......<P..,.s
    4e28:	1eae3a0b 1f5a46b7 0b7a3220 56081ff3     .:...FZ. 2z....V
    4e38:	2a58d95f 7ede5a61 1faf0d21 008c2357     _.X*aZ.~!...W#..
    4e48:	ad223762 9c2300f3 d91dd863 dff831cf     b7"...#.c....1..
    4e58:	8f1b433b 00833743 fb385b5b 13bfe151     ;C..C7..[[8.Q...
    4e68:	b7a625ec c2b5ff16 03f7c19b 4b8f2964     .%..........d).K
    4e78:	fee71244 ce0f2144 e60bf036 2d47b5f8     D...D!..6.....G-
    4e88:	95b78bee 87a005ec 0e465ade bf81e7f1     .........ZF.....
    4e98:	e0c1e4e8 39c00d13 75203f17 7523c1a3     .......9.? u..#u
    4ea8:	6feb0bfc 5fd7cfc3 69fda6f9 6f3037fd     ...o..._...i.70o
    4eb8:	85a8973b e4f48e3c ff77552c a8e57711     ;...<...,Uw..w..
    4ec8:	f31e57f4 6487e18d e68dadfd 0003bba0     .W.....d........
    4ed8:	80df3eae ffe7301b b403461d a2e0f667     .>...0...F..g...
    4ee8:	0bc801a8 91fe3feb 868111e4 7f50417d     .....?......}AP.
    4ef8:	0dfdbaa0 dded10fc 67e297e0 894778f5     ...........g.xG.
    4f08:	783f7a1f ed88918a a39093f5 2c70ef89     .z?x..........p,
    4f18:	d5bc8d77 18416160 a6fe800d f7be0352     w...`aA.....R...
    4f28:	9cc764f0 d89f8d3d c7681808 4e187de5     .d..=.....h..}.N
    4f38:	0943844c 09905ec6 e06e52eb c877fce8     L.C..^...Rn...w.
    4f48:	39593bbd 7094cee2 c3d67468 77bccffa     .;Y9...pht.....w
    4f58:	2c3b7a26 72789de0 c57e4c32 3e3d102c     &z;,..xr2L~.,.=>
    4f68:	3a1669e4 9ea1bc68 07bd207f 3e57adfd     .i.:h.... ....W>
    4f78:	6b33e583 bfea8fc1 c0b12275 f80e079b     ..3k....u"......
    4f88:	bc6636a5 3acf7970 f05dc118 03c8e207     .6f.py.:..].....
    4f98:	c9a3eb3f 83a0b263 e00e754d 036b49c9     ?...c...Mu...Ik.
    4fa8:	959bc282 d3de3fd6 45f88fe2 661cb888     .....?.....E...f
    4fb8:	9e841fd6 83a52fbf 2bb1c981 f49f4433     ...../.....+3D..
    4fc8:	15147d72 090ee089 56a23c92 a737b39f     r}.......<.V..7.
    4fd8:	68f8fc01 bc88c0e2 cf92b0f8 00f41db0     ...h............
    4fe8:	d03ffe5a ff547e07 5d9ed207 efe783f0     Z.?..~T....]....
    4ff8:	b7e7e16a 9e411b0a e93c1da5 37c1548b     j.....A...<..T.7
    5008:	a20961b1 19e523c1 c0ddd62c fc5c566a     .a...#..,...jV\.
    5018:	c1045894 fc55491e 6fe1dbe9 d8880360     .X...IU....o`...
    5028:	77a22cde 9980835b ba27e3db b6f1089d     .,.w[.....'.....
    5038:	747dee0f 933d2f39 35da3c7b fb586794     ..}t9/=.{<.5.gX.
    5048:	c7837fd6 ab8300eb 1ef14102 03d4f221     .........A..!...
    5058:	0fc6c5ec 9a91d618 500e69f2 d3def78c     .........i.P....
    5068:	bcee6428 fc7afa33 8c154193 e77cc35d     (d..3.z..A..].|.
    5078:	93b7525c b2ab30ec 00e408d7 fa04dc6b     \R...0......k...
    5088:	e7d80d4a 43b7e339 c60301f8 97bf4f6f     J...9..C....oO..
    5098:	30dede15 01b06dec ee579b70 03646bce     ...0.m..p.W..kd.
    50a8:	d62a4fd8 86d3f173 1ef5dd29 7717ac0f     .O*.s...)......w
    50b8:	83fbe1ae e2470ee7 031f4e0b 7facc671     ......G..N..q...
    50c8:	fe21fcf6 28163063 4fc06439 fba8f758     ..!.c0.(9d.OX...
    50d8:	517a42b5 3ee0eead bdf8730b 3f9843cc     .BzQ...>.s...C.?
    50e8:	6b9e97aa 88162070 2deb90b9 583f5828     ...kp .....-(X?X
    50f8:	3da49bf7 9a9e3b38 b849217f bec29bdf     ...=8;...!I.....
    5108:	4fa35dcd 13d64b27 ee15ae5d ff2dabd1     .].O'K..].....-.
    5118:	439e323f e6a20798 2fe42e00 fcd1c966     ?2.C......./f...
    5128:	bb40d806 f0e60087 8fbcc32d 725ed056     ..@.....-...V.^r
    5138:	39b46910 5e2c5bf7 a546fd1f f52218c0     .i.9.[,^..F...".
    5148:	767f78e7 1786bdce fb47c30c b8735c3f     .x.v......G.?\s.
    5158:	6e5dad98 b89f4e0c 770123de b772c77b     ..]n.N...#.w{.r.
    5168:	c40fe373 32e5fee9 07c17c77 b781d7d2     s......2w|......
    5178:	88b34f24 7630fb01 f8264bb8 794bcb71     $O....0v.K&.q.Ky
    5188:	016ee425 de7bcc3d b48f063f b732d3d5     %.n.=.{.?.....2.
    5198:	5441a97f 85fdb7b8 1d01c73c 907a0ee0     ..AT....<.....z.
    51a8:	0ff54e7a f9aca526 26993cbd 9ffeaec7     zN..&....<.&....
    51b8:	e8c407a5 8e8f6663 11ff8ba5 f031bfe8     ....cf........1.
    51c8:	c853eb72 f7e3de45 d7f7a35f 0a6c5daf     r.S.E..._....]l.
    51d8:	9e28d46d aecadf45 ef4a57fa 0879cb1f     m.(.E....WJ...y.
    51e8:	b79dbf6b 57b9f072 0c473040 cfe1eacf     k...r..W@0G.....
    51f8:	19fbba54 c1a0b322 0a229c84 57fdeba0     T..."....."....W
    5208:	b6fb4eff 84176f9f 28e230fd 30676ea0     .N...o...0.(.ng0
    5218:	f13de754 6535bd3e f82b145f eece170f     T.=.>.5e_.+.....
    5228:	fddc0f78 fd7baef6 3f72ef89 7c9219df     x.....{...r?...|
    5238:	2686df57 617ff81d 30167eb6 2faafb1f     W..&...a.~.0.../
    5248:	65f4613e 07cfac57 ef9e7f89 fd5727d0     >a.eW........'W.
    5258:	bfec14c3 701e7b26 4eff3eb5 8bb61ff5     ....&{.p.>.N....
    5268:	70c473ad 0c07a0dd bfeecd4c 7e8c5b4d     .s.p....L...M[.~
    5278:	38762294 f1507e7b e7a5e7fe f9a857d1     ."v8{~P......W..
    5288:	883f6407 b9460d24 9b46044b 21fea20b     .d?.$.F.K.F....!
    5298:	f78bbbfa 7bc69b6a 03c16feb bdb08304     ....j..{.o......
    52a8:	952431cb fbd90479 62f0658e ffac2b05     .1$.y....e.b.+..
    52b8:	50417530 cadc06bc 01858f26 b4df8aec     0uAP....&.......
    52c8:	c9b3bef3 73bef416 dec5bb2b 40d2f464     .......s+...d..@
    52d8:	7ab7981f 02697b64 f9fd10fc 004fa9df     ...zd{i.......O.
    52e8:	d8d67ad9 ed3a2f76 40cffaac 1186db50     .z..v/:....@P...
    52f8:	0afa3bfb be7a077d 0dfb0ef3 3a379070     .;..}.z.....p.7:
    5308:	ddb38b30 980e29c5 101c6eff fd764348     0....)...n..HCv.
    5318:	f7d1e715 783fc68e f019da47 d6fc03a4     ......?xG.......
    5328:	4437050f ed320baf 7f29a5ee 841134d4     ..7D..2...)..4..
    5338:	3af1031b aa4597a0 9621ff18 71fef409     ...:..E...!....q
    5348:	e80661c5 1ffdb6ff b67fe613 bd6e6d7b     .a..........{mn.
    5358:	ff9383e8 b93fc5aa 921ff57d b1c676f3     ......?.}....v..
    5368:	fb42c1db bbe55d6a 239e94c3 7e7c27e6     ..B.j].....#.'|~
    5378:	e707ebc0 79fd55f2 65fde94b 1fdf4b9e     .....U.yK..e.K..
    5388:	4befdb50 bf3977ec f732cb54 eb0c564f     P..K.w9.T.2.OV..
    5398:	cff7d96f 6d81c433 c6e0cf2a fc40f17b     o...3..m*...{.@.
    53a8:	e1325476 699f8de2 0a4b4fa3 cc34fec1     vT2....i.OK...4.
    53b8:	a9c1f667 e2125dd6 aa17b27e 239a72c7     g....]..~....r.#
    53c8:	b2744137 ffab6ffe 3007fd50 a2f4a380     7At..o..P..0....
    53d8:	2d2baf03 3e4bdfe0 9300f6d7 d77fa34f     ..+-..K>....O...
    53e8:	6337e2cc 0f33315e 96b45a91 657d1cfd     ..7c^13..Z....}e
    53f8:	3ab28ff1 b6493c8f c3d0cffe f73f0ce9     ...:.<I.......?.
    5408:	5141fc0e ef8b1cec 04399726 e4401c47     ..AQ....&.9.G.@.
    5418:	201ef65f 4b844bf1 efdfc1ae 373999ad     _.. .K.K......97
    5428:	be227821 07f60217 e87eb0e7 ceeee605     !x".......~.....
    5438:	ad69ce2d 0001dd70 af06b487 1ef43d9d     -.i.p........=..
    5448:	1208c381 7ff8bede 985bfed6 47f47e35     ..........[.5~.G
    5458:	7fab00fe 7ec877f0 37fd1b7f edf809e5     .....w.~...7....
    5468:	ba668be8 12b94531 68b91bc7 bf60cfbd     ..f.1E.....h..`.
    5478:	d283d607 8175e33d f138427d 446a2458     ....=.u.}B8.X$jD
    5488:	30d41032 1fefd49b 783d0eb2 7bec600c     2..0......=x.`.{
    5498:	1a064de2 a1fc19e8 a262fc89 12b264f8     .M........b..d..
    54a8:	d22f6ad5 678760f1 ba875811 a6eb2fe2     .j/..`.g.X.../..
    54b8:	ba3fd9a6 ed08b345 5ede1408 45f9a2fb     ..?.E......^...E
    54c8:	c9641e72 0ec99db4 78a39340 c67ffb6b     r.d.....@..xk...
    54d8:	b698db3f 86b67933 fd6f42cd 9526efa8     ?...3y...Bo...&.
    54e8:	bff6a75d c0eb7ec9 81c97764 1b35e173     ]....~..dw..s.5.
    54f8:	ef4910f6 a605b923 bd6040f7 21cdf148     ..I.#....@`.H..!
    5508:	9b9744f3 6bb1046a 5bfe2c23 1b0b9f99     .D..j..k#,.[....
    5518:	cbff8ddb 32768e65 39e522f1 07241ecd     ....e.v2.".9..$.
    5528:	15ad1c9c 9368fb84 ffeb48ad 93f0f650     ......h..H..P...
    5538:	1f529861 3d8a5f0c dd389060 d37f0b61     a.R.._.=`.8.a...
    5548:	77f578cc 18dc31be c240c6ba 1ee633fe     .x.w.1....@..3..
    5558:	6402c90f 1ce5b41e 637e7783 80be3321     ...d.....w~c!3..
    5568:	e25c1ac8 befd9ba8 949fdcfe cc021ad3     ..\.............
    5578:	a5eeb04b 0312addd 699c110a 49e028d4     K..........i.(.I
    5588:	3e277de0 b53fc672 a38df627 f64ee1ea     .}'>r.?.'.....N.
    5598:	d870d679 4f6f0abf b29f371e 593b6405     y.p...oO.7...d;Y
    55a8:	3e86ec72 a7ff3fe4 8f2e5b80 97948701     r..>.?...[......
    55b8:	23c7eee3 7908fdac 564f9fc4 a9f2d060     ...#...y..OV`...
    55c8:	fe679f71 eb99c7b8 124b57fd b667d3b9     q.g......WK...g.
    55d8:	fd0e7bf5 f13eb487 8b2b70ba 05bb568f     .{....>..p+..V..
    55e8:	fe60a61c 8a37857a f2ef7d1d c6d0c41e     ..`.z.7..}......
    55f8:	c879e71d 9fd13fc8 6dfda041 7c195b64     ..y..?..A..md[.|
    5608:	934d6c7f 9bdc1821 d0bb2e87 fcdfe101     .lM.!...........
    5618:	f6e3c9a7 e031c5b0 93fc18dd 53fe6bbf     ......1......k.S
    5628:	63d3d8c8 71ee30d6 9bfeede4 3649f7c7     ...c.0.q......I6
    5638:	783b2e87 a3d58641 93d2f7b9 f9ed2433     ..;xA.......3$..
    5648:	5ff51233 3c01e8c7 7f478333 f4bda6e0     3.._...<3.G.....
    5658:	f5c5c821 3348c8f4 b3761bfb d94a0b6c     !.....H3..v.l.J.
    5668:	f8595bdb 752fb85d 79b873bf 1dc031c8     .[Y.]./u.s.y.1..
    5678:	f0c6007b efe321f0 ff7377d6 39f3964f     {....!...ws.O..9
    5688:	9bf24ddb 20b57330 e735c33e 201d884e     .M..0s. >.5.N.. 
    5698:	5af580b7 f8899984 bfaf5b85 2222f577     ...Z.....[..w.""
    56a8:	5c6a3dfd 27cb867c 16aded17 b91e9b82     .=j\|..'........
    56b8:	9c8a4a5f c970a2f8 601beec5 80be872d     _J....p....`-...
    56c8:	188ed839 903bff46 63bfee13 f0dbf8ec     9...F.;....c....
    56d8:	2e6d621a 078abdbc 9cf51b05 b7b4c975     .bm.........u...
    56e8:	60c91657 3bc3d38e d6aa93d6 fb980eff     W..`...;........
    56f8:	fdf163f5 c2ad7920 06e446a4 8ee1def1     .c.. y...F......
    5708:	380a72ff 30f3559f 0e677dec 0dd3e4f4     .r.8.U.0.}g.....
    5718:	0fda04dc c9e02ff7 63ecf5c7 6fc3927f     ...../.....c...o
    5728:	b831c7c4 39f76e6d fd8b9c12 4de9acd2     ..1.mn.9.......M
    5738:	813ebc6c eef2e401 ba412962 67fdaf4a     l.>.....b)A.J..g
    5748:	bf9959f2 d59f3d73 ecf000bd eadc53e5     .Y..s=.......S..
    5758:	cf439371 5c317761 c898fc4b 3f367fa5     q.C.aw1\K.....6?
    5768:	696ff3c7 107a01f1 6e690b5a 9ba4dfbd     ..oi..z.Z.in....
    5778:	d26e9374 3749ba4d a4dd26e9 e613f1ff     t.n.M.I7.&......
    5788:	ea9f67bc 35ff3e7c ecaa3c53 eab2f972     .g..|>.5S<..r...
    5798:	52e5654c ff27c6e9 6c7c7ab6 95d8eb3a     Le.R..'..z|l:...
    57a8:	7ca6dff3 fdc4be44 53ddd74b 996dbd96     ...|D...K..S..m.
    57b8:	02aca12c c8206c1c ef9bf096 3b5457fd     ,....l ......WT;
    57c8:	9e28f168 5dabd3c6 2d3b38dc 88b8d31a     h.(....].8;-....
    57d8:	d102e3a7 d2dfaa2f e558d36f 2acc35c7     ..../...o.X..5.*
    57e8:	771131ec 3fab164f b94b069d caba41a4     .1.wO..?..K..A..
    57f8:	e21205d9 36df573e f3fc938f 445beae3     ....>W.6......[D
    5808:	63cf7612 ecab8351 f138879e e5f2c618     .v.cQ.....8.....
    5818:	1b7103ba 36b64265 7b118e08 11ffbb45     ..q.eB.6...{E...
    5828:	31b4f166 fc0b7ead ad5d84c6 7e2dcf88     f..1.~....]...-~
    5838:	f93297f8 1a2e3478 6d6eede7 2c909f14     ..2.x4....nm...,
    5848:	ac828d3f d6ead462 f1ca12c8 d69ef7a7     ?...b...........
    5858:	a4a7068c 069ae341 135754f1 7a250f5f     ....A....TW._.%z
    5868:	0f5ec4b7 f09dafb3 c3199afb e1ef20cc     ..^.......... ..
    5878:	4b9f4e11 a320b00e 4c1a0f41 e3c8bb1e     .N.K.. .A..L....
    5888:	147b7cec 3db3ed0e 9cb91c6a c9f9597e     .|{....=j...~Y..
    5898:	79103260 b0afa6f6 9b5ea000 6eafa8b6     `2.y......^....n
    58a8:	c19d808c 776bf090 1fc9681b 478a85dc     ......kw.h.....G
    58b8:	7df4f18c 98c51246 1e3dfb1e fcc6eadd     ...}F.....=.....
    58c8:	1016656f ab7a808f 8f147f7b 7cb0f58c     oe....z.{......|
    58d8:	4b10348d af8b7f28 6a7af087 e613cbf0     .4.K(.....zj....
    58e8:	602de9df f91f6713 b57d5e56 561816fe     ..-`.g..V^}....V
    58f8:	8c0bc2df f88809db 001f600c 3dc1b0b9     .........`.....=
    5908:	f47105b5 147c699d c7fb4b1e 7d5dfa77     ..q..i|..K..w.]}
    5918:	59e469fe 0f7d3ef2 f3418d86 1058563c     .i.Y.>}...A.<VX.
    5928:	6073bdb5 17fab184 ba549df8 1fe76ffc     ..s`......T..o..
    5938:	7a148792 80bac209 405f50b5 6a07185f     ...z.....P_@_..j
    5948:	86acfbc5 07b4bffe 0d212b10 dd7e4946     .........+!.FI~.
    5958:	c0bb2a82 07a2beff bbf07e00 b3aeed40     .*.......~..@...
    5968:	735f8cee dfa21d18 360479f8 0de2b4b8     .._s.....y.6....
    5978:	6871df92 ca01a2c1 2f505b9e 6b1e6c3a     ..qh.....[P/:l.k
    5988:	602cc364 6b82d1c4 d1f0e147 a861ad88     d.,`...kG.....a.
    5998:	3b78ff8c 564726c8 3db0561e 286b11da     ..x;.&GV.V.=..k(
    59a8:	14c2031d 73ed71f8 7daf3baf b756edc2     .....q.s.;.}..V.
    59b8:	7f1f7541 a3c5fdb0 5ed427fb 489aa109     Au.......'.^...H
    59c8:	9f1ff8f1 682e8b53 4f4a9a3c 6777e1f2     ....S..h<.JO..wg
    59d8:	add2a289 bae1ccf1 51b1c806 fc5803da     ...........Q..X.
    59e8:	36006670 c9b8747f 1bca25f8 f6433b74     pf.6.t...%..t;C.
    59f8:	482af2f9 4dc843a3 973f031e a5c24039     ..*H.C.M..?.9@..
    5a08:	afab0ced 46ae82c4 fd16e1cd 6203934d     .......F....M..b
    5a18:	bf438580 4cec1b5f 8f6f6fd1 23b5e79a     ..C._..L.oo....#
    5a28:	03ca9bf9 37ff2a49 a307f926 04fb60da     ....I*.7&....`..
    5a38:	2793a3d6 6a3547fc 750140ad 43f05f7e     ...'.G5j.@.u~_.C
    5a48:	6ff02c8b ee11f865 11b00164 1f708d41     .,.oe...d...A.p.
    5a58:	8d53f98d 0fe906ff af4b10eb 0585fa3f     ..S.......K.?...
    5a68:	07254f4d 1a56bf42 f8c9a247 744783c1     MO%.B.V.G.....Gt
    5a78:	1f475a88 8f622890 066324d9 a3c8adda     .ZG..(b..$c.....
    5a88:	1d916f0d ffc4396d ffd0749c 02d80340     .o..m9...t..@...
    5a98:	a058c2f2 8cfc7fc1 f71abd9e 6d418dde     ..X...........Am
    5aa8:	18051f10 9efc8e01 15f5e077 2f11f765     ........w...e../
    5ab8:	d41b8cc6 64d3e00f fa5c11c0 698c51e5     .......d..\..Q.i
    5ac8:	006a36de 3c6f466b 3be62fc7 ea86c0a1     .6j.kFo<./.;....
    5ad8:	43f62fff 6c463ffc e44d452b cb3efe58     ./.C.?Fl+EM.X.>.
    5ae8:	e4f03cf3 d8617343 71cf950f fe5c6a87     .<..Csa....q.j\.
    5af8:	54680d75 903fe929 106ede30 312fc002     u.hT).?.0.n.../1
    5b08:	0c0e25f8 d1b11950 e435006f 601b6612     .%..P...o.5..f.`
    5b18:	c7f1abf4 fe250dba ae0d123c 9e264146     ......%.<...FA&.
    5b28:	2565caa4 afe9abfa 7f9f45e1 a00586c6     ..e%.....E......
    5b38:	12a78790 edff0f2b 3ad03d58 95826e40     ....+...X=.:@n..
    5b48:	400f4b49 978d2fed 84b1bf6a c0f9f03f     IK.@./..j...?...
    5b58:	3897a39b 986cffc1 e2cca379 8731a2d0     ...8..l.y.....1.
    5b68:	9a7eb453 52778279 6035962b fba729f4     S.~.y.wR+.5`.)..
    5b78:	3232288a 5bdb42eb e905f837 06e1cf46     .(22.B.[7...F...
    5b88:	e3fd7b39 24598bb6 89cf5fb7 1b5b8a83     9{....Y$._....[.
    5b98:	139b8e49 24af416c c38e820e 33bc6e61     I...lA.$....an.3
    5ba8:	b523847a ab3e40d9 b744f06e 6f45dfd9     z.#..@>.n.D...Eo
    5bb8:	bde56472 dc9058be 5d2b5900 873d4803     rd...X...Y+].H=.
    5bc8:	dce4f529 b3cdb95e fb7fd845 ed2008f0     )...^...E..... .
    5bd8:	eee661b7 409629f8 fe28ffe3 2481df40     .a...).@..(.@..$
    5be8:	26b7c2f6 fd6013d0 088c5a31 7b07dbf4     ...&..`.1Z.....{
    5bf8:	fbc49b0f 16fef493 d162783f 77c1c2af     ........?xb....w
    5c08:	cac7fb41 b23bc8c1 9062c5a0 f0106883     A.....;...b..h..
    5c18:	8a0b72e7 4d2fbbb2 f8fe8edc 1f73bd19     .r..../M......s.
    5c28:	7db401f3 65f77f94 1ac39254 e7fc4bcb     ...}...eT....K..
    5c38:	eb3f9653 b2f63c88 e7b1e5ca ae772bc2     S.?..<.......+w.
    5c48:	c280b66f af795fb6 f168630f 7f0123b7     o...._y..ch..#..
    5c58:	161a409d 493f8655 6c838419 14d6325e     .@..U.?I...l^2..
    5c68:	0d3cb585 fd6be806 9a1fb56b b2e5a498     ..<...k.k.......
    5c78:	09d76492 96408892 532776e4 78ad2f2b     .d....@..v'S+/.x
    5c88:	7a4f41ae fb550d90 7bd2ac47 4494812f     .AOz..U.G..{/..D
    5c98:	9bf6a583 beee2ac1 e952cfc0 42ff2cdb     .....*....R..,.B
    5ca8:	80cc79e4 91ce1f37 f6aada63 93d75000     .y..7...c....P..
    5cb8:	d35db70e c7b7dbe3 2b21f0f8 7aa72b46     ..].......!+F+.z
    5cc8:	7dee52fe 067b4cd4 2f93fc87 f83e76d9     .R.}.L{..../.v>.
    5cd8:	31ff8b06 ad162e97 68be875f 24af1d81     ...1...._..h...$
    5ce8:	5873f897 3a2fe003 dc89ab59 fe79f440     ..sX../:Y...@.y.
    5cf8:	6e90fb28 586f68f2 b13d783d 7a3544a0     (..n.hoX=x=..D5z
    5d08:	321b9047 417cccf6 7870583c f1fa2180     G..2..|A<Xpx.!..
    5d18:	e56ff6f2 af100b31 c822b033 969238d3     ..o.1...3."..8..
    5d28:	fdd4905b fc67bc7c 594edb96 e069023d     [...|.g...NY=.i.
    5d38:	d9639c2f fc67c741 170ebcb5 93c574b7     /.c.A.g......t..
    5d48:	b88342ce 6389b970 bf02ad6f 2780f655     .B..p..co...U..'
    5d58:	45d3db8f 72b6a2fc 1a17f1d7 e5c82dcc     ...E...r.....-..
    5d68:	e39f9dfe ebe62dce 7e07f6f4 49e1f71e     .....-.....~...I
    5d78:	b13fbb0e df8f7fca cb0f4ec3 606f9067     ..?......N..g.o`
    5d88:	a5791104 7ba94907 28e02fc1 6b6eed52     ..y..I.{./.(R.nk
    5d98:	ba5ef7be 69a42486 55edfdee c8f5fb17     ..^..$.i...U....
    5da8:	ead67de9 320dbf56 528bfe0d 6f6eb584     .}..V..2...R..no
    5db8:	2ebbb532 71e0d1f7 1ac3f046 53db4c3e     2......qF...>L.S
    5dc8:	fb32823d e1f01598 f816ed23 10a31ccf     =.2.....#.......
    5dd8:	e6523a4d aa56023c cdb87fef 3cced65b     M:R.<.V.....[..<
    5de8:	11181f7e 31eb793a 23beb702 bf4f539b     ~...:y.1...#.SO.
    5df8:	d45d7dfe 676dd8bb c59c32fc 7eadbf54     .}]...mg.2..T..~
    5e08:	1041f7ab 878baf66 e2e9532c d57bb9f9     ..A.f...,S....{.
    5e18:	3b5f77ad a05c60d4 95bb9ffc b01f605d     .w_;.`\.....]`..
    5e28:	b507b006 d882e7fe 680fc196 e02c1dd6     ...........h..,.
    5e38:	76f22175 dfa33125 2e9ff51d 17a3682c     u!.v%1......,h..
    5e48:	d2ad0e70 8d4913d3 f97aec2c d99461fa     p.....I.,.z..a..
    5e58:	e7a87aa7 276e367f 57d801ff fc7a9e45     .z...6n'...WE.z.
    5e68:	1857c78b 8b38b201 34406755 affd5386     ..W...8.Ug@4.S..
    5e78:	0def7e33 ed0baffa 40ef8bfb 15dad0e4     3~.........@....
    5e88:	d37ea82b e27cd2ee 7a725471 fb3448b0     +.~...|.qTrz.H4.
    5e98:	64daf2a3 d8df2837 b256375f b476b108     ...d7(.._7V...v.
    5ea8:	3f0625f8 59f0febd fda5f286 42e3f45a     .%.?...Y....Z..B
    5eb8:	1fd3aefe 61af1d7b 8342e971 a9dec976     ....{..aq.B.v...
    5ec8:	7d09f74d c7c6687a cff875fc 64ff01e8     M..}zh...u.....d
    5ed8:	9ed5563f 92ce2777 1eaf3f7d 3c15ef8a     ?V..w'..}?.....<
    5ee8:	06e8a6bc 04fe86dd d17568a1 ae0ac36b     .........hu.k...
    5ef8:	fb6aedb8 6b27ae0f 2ef85d01 67b17769     ..j...'k.]..iw.g
    5f08:	48303a1b 7e38f74f d202f736 35bbd4f7     .:0HO.8~6......5
    5f18:	0b07f687 5b7e33ae 23f47d06 2c9d3de3     .....3~[.}.#.=.,
    5f28:	874459e9 fbd300b0 bbf4c79f 5ab2fe8b     .YD............Z
    5f38:	629c3aa3 07e3101f ff8ed0f2 23405931     .:.b........1Y@#
    5f48:	78734bbb beeffacc f55e1eac 8fe8fd93     .Ksx......^.....
    5f58:	fe4abec9 e7dffd0e b0f57ec9 f039c87a     ..J......~..z.9.
    5f68:	ff68a713 48243eda 81695d5b a2fd1878     ..h..>$H[]i.x...
    5f78:	87f86852 466cff40 f68bbc6f e4b5e78a     Rh..@.lFo.......
    5f88:	0162ebb3 b82c25c8 8905b31d 17fc2e2e     ..b..%,.........
    5f98:	ee6bf7d4 cdea0201 7e2e9e81 9b3fd039     ..k........~9.?.
    5fa8:	18828735 c9fd6330 10c39a96 19dd5e1c     5...0c.......^..
    5fb8:	7436264c 42f41a1f e394cde9 a3f4b50f     L&6t...B........
    5fc8:	6eddc606 bfbdbfb2 77f6ddfd 7a34fb5b     ...n.......w[.4z
    5fd8:	62a16fd3 6eff1bfc bbb08bf3 3d17ff45     .o.b...n....E..=
    5fe8:	c93f36c6 d8d819fe 1fcd06d9 d1af7fc7     .6?.............
    5ff8:	ade3cdbe a2ebc0d8 0a83fe25 c83b030d     ........%.....;.
    6008:	2dcf5426 cfa5ef1a 9f32d3c6 e1572469     &T.-......2.i$W.
    6018:	3e676bcf 1b77aff1 eac3b585 68398bb7     .kg>..w.......9h
    6028:	8a6b7c99 5e7db6fe 6f2c642b 421ebf4f     .|k...}^+d,oO..B
    6038:	26f472ff 731e009d bf1e75a6 6dc61981     .r.&...s.u.....m
    6048:	b43c8cf9 5f664ffa e8e7db0f 0f7f61f3     ..<..Of_.....a..
    6058:	da8f18a7 03f1bae7 6b38cf6c 8bb038c8     ........l.8k.8..
    6068:	b85831ef 152f7bdd fdb7b7fb 5df6f51e     .1X..{/........]
    6078:	7a4445e9 98d23592 0be8effb 8b74078d     .EDz.5........t.
    6088:	4827e097 1566bbd6 1d269a57 baaefecc     ..'H..f.W.&.....
    6098:	b503ee32 11c837ea 5f8b58ad f06d6bbb     2....7...X._.km.
    60a8:	3b10c64a 1034280e 033c67f4 dfdb9fa8     J..;.(4..g<.....
    60b8:	aaa053ea 99b5ef43 9c1e49bd 7e3f54cf     .S..C....I...T?~
    60c8:	5a54feb3 5f52c8dd b5f9b53a 04601a94     ..TZ..R_:.....`.
    60d8:	3d1e2f47 faddeb47 ab81f30e 9641bc3e     G/.=G.......>.A.
    60e8:	a883274b 8ccf82b8 7a1df26e b5b2e400     K'......n..z....
    60f8:	3e877c9f 60ff1745 0ac4ded1 f01bfc5a     .|.>E..`....Z...
    6108:	606fd9d3 dcf6ee46 3f5df08e b505867f     ..o`F.....]?....
    6118:	abfca577 df824f79 80342b5f 45a9f5fe     w...yO.._+4....E
    6128:	f804f4ce 2d3d8e74 fb38f94d cb11eb10     ....t.=-M.8.....
    6138:	ebd04b11 5606b01f b0be7dbe 681e4d24     .K.....V.}..$M.h
    6148:	77fb5bfb e4603e5f c1e887aa b06bf6b7     .[.w_>`.......k.
    6158:	100dd509 d98e9e78 a0ec6882 5b1ac059     ....x....h..Y..[
    6168:	3497ddd1 609e547f d45bfde0 200f6cf2     ...4.T.`..[..l. 
    6178:	6f75353f 941a8053 8f0dfb56 650dbb00     ?5uoS...V......e
    6188:	b077dbdd 1bfdfcf2 fb7d41b1 9ec5a58b     ..w......A}.....
    6198:	d3f2f60b 2b26fd65 1e41b688 ecb68023     ....e.&+..A.#...
    61a8:	f6f3f925 6c66f6dc 0d550d91 f64edc62     %.....fl..U.b.N.
    61b8:	7ddf9ed7 d6d7d119 7aae4077 f3d7ec98     ...}....w@.z....
    61c8:	5d2f5a5a ab79fa05 7ced6717 e1eabbe3     ZZ/]..y..g.|....
    61d8:	af8ea106 97bdf9e8 ec6e1198 da20fd6b     ..........n.k. .
    61e8:	1c3997fa f7b703fa e6641c97 8459e750     ..9.......d.P.Y.
    61f8:	960aef8b 9af41637 7ac87fca 1eaf56bc     ....7......z.V..
    6208:	3e8ff517 b15ee65b 82b206a3 9ceb4d6b     ...>[.^.....kM..
    6218:	58ed8b87 e7436a79 45d7f3ed 3c9968ad     ...XyjC....E.h.<
    6228:	e3002d34 98fdf4b6 1f0f57bd fa07db50     4-.......W..P...
    6238:	68dead21 c32bd745 5f35a3df 7d4629f5     !..hE.+...5_.)F}
    6248:	efed9ab1 bdee0eae 39e3b1a4 00afd572     ...........9r...
    6258:	ef07f4e4 7498f67d 36bd6a72 66474987     ....}..trj.6.IGf
    6268:	4931ab6f 5d9887d1 9fd642e8 2099d24e     o.1I...].B..N.. 
    6278:	7b4cbecf 148bd6ae d7e8339a bfcefb4e     ..L{.....3..N...
    6288:	347e00d4 efe83bef f443bf03 be9f40db     ..~4.;....C..@..
    6298:	07f7a29e ebc75896 9cdb7ff6 3d4906c7     .....X........I=
    62a8:	bc3f5fd8 83e7f2f7 87aa2fbb bd0f388f     ._?....../...8..
    62b8:	31be0c17 bd7dc792 be5ff3ef 85848d89     ...1..}..._.....
    62c8:	7977487d 3e9fc0e1 f6361ec1 17a55daf     }Hwy...>..6..]..
    62d8:	0376affa b29aeedc 08e70cf7 67b2487c     ..v.........|H.g
    62e8:	4e7beb52 ff9ce3fa e0cc0bee eb0f54f0     R.{N.........T..
    62f8:	b9eabe39 3910077e 09d65ac0 780bea6f     9...~..9.Z..o..x
    6308:	e4b61d0f fb8e22c6 fbeeee5e a343a17c     ....."..^...|.C.
    6318:	7dc7eb5f 0dfa03ea c95862dc 67b65002     _..}.....bX..P.g
    6328:	cab9597c bb086ec2 efe9ab27 d1bad0e5     |Y...n..'.......
    6338:	8fdc56a7 d4ff463f 91728fc6 cdb73eb3     .V..?F....r..>..
    6348:	bcb3be49 0cf32178 63c3137a 7ac1cb71     I...x!..z..cq..z
    6358:	b293737e 37dac169 1f67785c f139cbf0     ~s..i..7\xg...9.
    6368:	5a63b1f9 9ee1a0f6 4d7ec402 4e482ce5     ..cZ......~M.,HN
    6378:	c7cb56c1 e2564072 ad4c7cf0 db931c49     .V..r@V..|L.I...
    6388:	dffa24e6 9376039c ba4dd26e 26e93749     .$....v.n.M.I7.&
    6398:	15ffa4dd 515bbb53 49b8d7de cc257fff     ....S.[Q...I..%.
    63a8:	069f26fb 24afbece abbb8211 4d6c2b95     .&.....$.....+lM
    63b8:	aa31b3be 5ae7c49d caaff7de d05b1bff     ..1....Z......[.
    63c8:	2c79c3d7 7fd695e1 caec971f 77cf4569     ..y,........iE.w
    63d8:	6cc1e1b7 b6f3077e 6130179b 69bf56fc     ...l~.....0a.V.i
    63e8:	6ff6e2ef 5bee66ac 3c45fbd9 c6a21dc5     ...o.f.[..E<....
    63f8:	6c74fee8 360e7c19 dea82d60 4ea01be5     ..tl.|.6`-.....N
    6408:	ac922fe5 c256b79e 784eab0f e91e1550     ./....V...NxP...
    6418:	1b3568d5 16e06858 aefb0601 13eda3db     .h5.Xh..........
    6428:	f9dd77b0 fd7eb4ff 3edf500d 78b91611     .w....~..P.>...x
    6438:	805bd000 714f7f61 ddf40702 c0bc2410     ..[.a.Oq.....$..
    6448:	5dda2e14 848efce6 795e020b ce03794d     ...]......^yMy..
    6458:	ff9ccf96 6a6bf2a5 b73b901b 2c0f5f8c     ......kj..;.._.,
    6468:	24abeadc 91ffddd7 f558f604 84c3d7ed     ...$......X.....
    6478:	0f110177 86edfd7e 4bf5bf8a 41633c0d     w...~......K.<cA
    6488:	9e928f3f f82dfefa 7fe027fb c20c99e3     ?.....-..'......
    6498:	dbfb3d63 83c690e4 020f0b07 1e10c1c7     c=..............
    64a8:	4bff8204 52e7eb23 0affa8e7 c386b738     ...K#..R....8...
    64b8:	1e742e35 0ffb8420 e33e2f0e 77a3162e     5.t. ..../>....w
    64c8:	67d08cc2 cc680d1a 55058a98 7c698dba     ...g..h....U..i|
    64d8:	53a05c22 e46a8266 f86bf2b7 160fc0e5     "\.Sf.j...k.....
    64e8:	d80fc5a0 57384641 4b00dff0 1cbaef92     ....AF8W...K....
    64f8:	ff08ef70 01a4b9bf 069d10fa daf11d67     p...........g...
    6508:	ec041b50 c07d0405 57534223 b08078b6     P.....}.#BSW.x..
    6518:	a496c039 9a0e400f 0e7e5828 c2cc2dbf     9....@..(X~..-..
    6528:	f7db95df 32bc4ccb a76c290e 90fb1861     .....L.2.)l.a...
    6538:	2a7fff45 e4fa0e0c ef97941f 6e82d6e5     E..*...........n
    6548:	e10817b1 35f2db02 b7e0581c 0761f8c9     .......5.X....a.
    6558:	bdf81374 75b52442 9eb07e25 d9dd44c4     t...B$.u%~...D..
    6568:	2ee3b832 c8d17219 9b8e0d1b c96287ec     2....r........b.
    6578:	5f555e82 64f0ee29 0bc067e3 83d30dfc     .^U_)..d.g......
    6588:	c68f6f1f 5a47b64f fc749beb 297e733e     .o..O.GZ..t.>s~)
    6598:	eda34787 8fc41811 83935a48 5f667eb4     .G......HZ...~f_
    65a8:	113ee7a3 040bc6dc ac9fea4b fb7a6467     ..>.....K...gdz.
    65b8:	2fbd3093 2371cf9f 856bcfce d8cb04ea     .0./..q#..k.....
    65c8:	162a6d5f 130a9b54 4e041e19 db47cb4b     _m*.T......NK.G.
    65d8:	b735be13 f83134de 6da61581 2db3b8bf     ..5..41....m...-
    65e8:	1cfc17f1 a63943d6 411b5fd0 0f41ae69     .....C9.._.Ai.A.
    65f8:	c6127091 3acfcbdd 01a34f49 ec007c95     .p.....:IO...|..
    6608:	06dee2c0 9cd865f7 05b0a736 df9009fd     .....e..6.......
    6618:	3ebc0c6f 1c689dce 0ee182c9 f8954872     o..>..h.....rH..
    6628:	3535b663 31b4addc 0f385b62 89524432     c.55...1b[8.2DR.
    6638:	ef1c114b 377bdcc5 8f0e7e38 59e3841c     K.....{78~.....Y
    6648:	35785107 1fd8b7bd 26589d4b 4122fa31     .Qx5....K.X&1."A
    6658:	9f7cbca0 8989dbb9 9fe7e979 a84eaf0f     ..|.....y.....N.
    6668:	2fc07637 13df2dc9 3be01751 de00a302     7v./.-..Q..;....
    6678:	437bd75e 3d9dd803 058a6cff e0f405a1     ^.{C...=.l......
    6688:	5e4caa57 c138dff8 60ffa8c1 10369cd4     W.L^..8....`..6.
    6698:	f1d72909 bd3fce7f c97d9ffb 271dcf81     .)....?...}....'
    66a8:	021ff11d 34ad494e deb73002 d9f2db73     ....NI.4.0..s...
    66b8:	dc98148b efee2084 e9040afb 7cc49cff     ..... .........|
    66c8:	cfcfc65f 8408f067 2a2b3c36 e588d805     _...g...6<+*....
    66d8:	33fb1bfa a749d19c 51082c66 4ab6c8a4     ...3..I.f,.Q...J
    66e8:	f6fb97cb e705b938 e16df806 d7f1971c     ....8.....m.....
    66f8:	86b727e1 3164bef9 e8c5b27e 795f7f43     .'....d1~...C._y
    6708:	88d6080a f0f020b5 f501a076 9c648820     ..... ..v... .d.
    6718:	5f249c94 b8beee74 fc46c2fb e40ce442     ..$_t.....F.B...
    6728:	be39f884 944583d2 3db7bee2 1ffc2435     ..9...E....=5$..
    6738:	44152c4b 81cf2fa5 c4173ff0 63c99d26     K,.D./...?..&..c
    6748:	c6b700d4 57b9bc11 03514f0a 2b1f7e7e     .......W.OQ.~~.+
    6758:	fdffc67e 783dc1ac 22cf4454 c66dcf45     ~.....=xTD."E.m.
    6768:	20be537e 3820b980 7c043aa7 d5a03f46     ~S. .. 8.:.|F?..
    6778:	981ade13 3c08f06f ed296e2b 643ffe0f     ....o..<+n)...?d
    6788:	f4088dd5 8e2386d2 5fd1aea6 bacc0834     ......#...._4...
    6798:	f309cbdb 913dc25e dac082d6 c45f4dc1     ....^.=......M_.
    67a8:	1c3692ee 0a38ce5d b3fb4eb6 b00e6d4f     ..6.].8..N..Om..
    67b8:	7e19f41b e3377a2f 39e55838 3357b560     ...~/z7.8X.9`.W3
    67c8:	515a0ce3 0daf10a5 554d7040 48f5a403     ..ZQ....@pMU...H
    67d8:	cee1b4fc 108b9038 9559fe09 9a5cbfea     ....8.....Y...\.
    67e8:	6648ff5b 9e76d459 f8fb0c54 98b87282     [.HfY.v.T....r..
    67f8:	31b0e795 8cb1738f 523dde1f 92453dcd     ...1.s....=R.=E.
    6808:	392f89fa e8217972 bf468a57 b3ffc4aa     ../9ry!.W.F.....
    6818:	d41da479 cc99fbdf 6bf7d100 fb5e082c     y..........k,.^.
    6828:	328cbdee d057d98e 151073ec 72fa22b3     ...2..W..s...".r
    6838:	2bfbbaa6 07383439 4166f9bc 1ca70fb3     ...+948...fA....
    6848:	fea9b6a8 20bf833d 14abfa88 83535040     ....=.. ....@PS.
    6858:	16435fb2 4770a5f4 43326283 fd5d792c     ._C...pG.b2C,y].
    6868:	a56b7f01 8e7cbcc1 934cfe05 39ddb703     ..k...|...L....9
    6878:	63327c83 d74933e6 13fb3afa 6c0749c9     .|2c.3I..:...I.l
    6888:	0f5d8965 7a7bc7d6 fe257583 5b72fd68     e.]...{z.u%.h.r[
    6898:	bd8fea4e 7106906e 5603935f 605f776b     N...n..q_..Vkw_`
    68a8:	06c587dc 1bdf0ed9 f80ef7ff 8f7c2783     .............'|.
    68b8:	81ef1873 ca74d36f 7cffea81 3909c6b1     s...o.t....|...9
    68c8:	015ac40a 41168ff6 7f036c61 fa397df0     ..Z....Aal...}9.
    68d8:	d771c72b 9d919ed5 31e4cbbf a85c5069     +.q........1iP\.
    68e8:	ca39682d 513e898d cd7b4644 424ad1ca     -h9...>QDF{...JB
    68f8:	79ff9977 5a9affa4 98b0687f 11f899e1     w..y...Z.h......
    6908:	f44b7f24 dc3f6d2f 10d6e057 af1ed78d     $.K./m?.W.......
    6918:	c40b363a d6d48c4f f330726b 269db405     :6..O...kr0....&
    6928:	5bdeba3f efc58d46 a9de091c 7efe7806     ?..[F........x.~
    6938:	5a001e22 adeef6dd 9444cf2e d68d6f7d     "..Z......D.}o..
    6948:	9db3f6b9 586ad13f e8cb416d 47a20cf3     ....?.jXmA.....G
    6958:	8d19e12b 90fc6a1e 64be06a8 35b4ded6     +....j.....d...5
    6968:	d4b45135 b29b8bd2 7f5082d6 e40d6ae7     5Q........P..j..
    6978:	082216e6 38480c62 ec7ea982 f7e61ce2     ..".b.H8..~.....
    6988:	82f4f8f6 ba7a0072 b691379d 3eeed26f     ....r.z..7..o..>
    6998:	95bbd6ec 53cf78ee 8c368823 8333af77     .....x.S#.6.w.3.
    69a8:	66724c00 96d5bef0 59053f6e d0772bbd     .Lrf....n?.Y.+w.
    69b8:	0f9e5d2b 2487e03b 3f09d5f8 50ea818e     +]..;..$...?...P
    69c8:	dcba527f 6ffdc7de f5681fec 8b7e5ebf     .R.....o..h..^~.
    69d8:	03d807d9 4a20b176 4110cecf 972b69fd     ....v. J...A.i+.
    69e8:	856e3fd9 bffe963b 9851ff45 2c5cedbf     .?n.;...E.Q...\,
    69f8:	6a7b2f4a bcc25f66 0816ff58 35f4cfbc     J/{jf_..X......5
    6a08:	77b10c00 44ee60bb dd0f5f87 16cc306a     ...w.`.D._..j0..
    6a18:	20b141bc c1210dbd 70e582ff e56d7e09     .A. ..!....p.~m.
    6a28:	65a483d9 38b087fe 64f24eea a10e73ff     ...e...8.N.d.s..
    6a38:	3fab40d5 f3d19fb8 1ccdb770 6b92f86e     .@.?....p...n..k
    6a48:	6ee7a2f7 26dc1016 dd86e9db 45ef7e7a     ...n...&....z~.E
    6a58:	fee55f3b aec0b0a4 15cef70c 33d7f641     ;_..........A..3
    6a68:	6ff581b7 85d7c39a 39f0e94b dd1dc4b6     ...o....K..9....
    6a78:	7bc2eabd d7835ea6 2e70cb45 e1b815ad     ...{.^..E.p.....
    6a88:	5c77fe0f e07b982c 2fe9b90f fb2c041e     ..w\,.{..../..,.
    6a98:	a52d5f07 3f66340e 9fbbfc27 6dfb433c     ._-..4f?'...<C.m
    6aa8:	700017b1 e7ca5c37 982e8013 bc1ef503     ...p7\..........
    6ab8:	9d73b541 0e8587ef 7b76fe0b afee6c17     A.s.......v{.l..
    6ac8:	af44101d c1673185 1c1f8721 c193f2b7     ..D..1g.!.......
    6ad8:	efee25eb 7a0964cf 73eb021b 8061bdae     .%...d.z...s..a.
    6ae8:	b327e0b9 f9ffa36f efa073c3 d73b7e7a     ..'.o....s..z~;.
    6af8:	e003f4df 2874eb00 1b2fbb8a a8cf27d9     ......t(../..'..
    6b08:	4e5ef10d 65f77fb2 977a2b4c 613b93f2     ..^N...eL+z...;a
    6b18:	420cc5b6 bdeec1b0 549fb674 3444effc     ...B....t..T..D4
    6b28:	dc0f13f3 059aa084 6897bec1 b0e5efd5     ...........h....
    6b38:	dca93022 8b0ad7a2 ec7a1c15 0c8f0af8     "0........z.....
    6b48:	8b161436 f68961d9 a1d1db54 242c2860     6....a..T...`(,$
    6b58:	e8e3fb17 1e735893 fe19065a e63fa6e2     .....Xs.Z.....?.
    6b68:	2c76219c fa120dad cb968f58 ef79e982     .!v,....X.....y.
    6b78:	b3d7d525 7fe84ba0 3c691c07 807fba73     %....K....i<s...
    6b88:	a66c0795 585dc228 0bfe1b80 47dfb80e     ..l.(.]X.......G
    6b98:	0f44b83d f7edfcb5 060bfef4 3e9358a9     =.D..........X.>
    6ba8:	3e2a9407 05ec5a00 2a1c21a0 265f078e     ..*>.Z...!.*.._&
    6bb8:	343ce93d cf68af23 9b87083c 3a3d40f4     =.<4#.h.<....@=:
    6bc8:	d3aad0ac 0f32fd8e ec805bd4 ccfe9098     ......2..[......
    6bd8:	50d85efd 91bfd0a0 32ef6ad2 ec67eece     .^.P.....j.2..g.
    6be8:	00bd87b1 9e4fd2d4 f6970b35 e775a357     ......O.5...W.u.
    6bf8:	ba3f425d 02e0a5ac b4cffa12 f68bafd2     ]B?.............
    6c08:	1a85e67c b0648b0c 5cac01ec 958bb5be     |.....d....\....
    6c18:	732c586b ab8a31c8 f6434ff5 03d0b321     kX,s.1...OC.!...
    6c28:	887c1023 5a61ef94 7e6a3ef6 eb54fdae     #.|...aZ.>j~..T.
    6c38:	10e6c17b 03d7621d 0bc2f6bd 01067e80     {....b.......~..
    6c48:	f80b0d4b 0f73b390 0a440b59 0a714e3f     K.....s.Y.D.?Nq.
    6c58:	36bc36fe 0986ff88 67a67b90 cbfb726e     .6.6.....{.gnr..
    6c68:	467c196b 029d8324 7b872179 bf2f59ff     k.|F$...y!.{.Y/.
    6c78:	0ff77b3c 7f3ac192 454072d2 f82a6f1e     <{....:..r@E.o*.
    6c88:	dfebbab5 ab57970a af25f081 ef900ffb     ......W...%.....
    6c98:	bdecb2e5 8f773e6a d606370e 74b68793     ....j>w..7.....t
    6ca8:	1ee33fe8 a002b17f 59dcfbd1 e2f4b9ff     .?.........Y....
    6cb8:	fd1a46bb f98bb875 58bb383b 57ec6c0b     .F..u...;8.X.l.W
    6cc8:	37fdb50f 4fcf17d0 772d6e35 0fb06c5f     ...7...O5n-w_l..
    6cd8:	f521b218 e7ec100c e6fccc86 f05c405e     ..!.........^@\.
    6ce8:	49fecc5b cb21f76e bfedfb96 f3c2fe5e     [..In.!.....^...
    6cf8:	fad755c0 6aef6921 e13f6074 c0057cc5     .U..!i.jt`?..|..
    6d08:	f9b73ff3 349c6e3b db6e7f20 85c2ebee     .?..;n.4 .n.....
    6d18:	c3fe2c43 e133f96c 56eb9f91 7db72111     C,..l.3....V.!.}
    6d28:	f6fe0fa0 17cdcc04 f16bf060 0651e76f     ........`.k.o.Q.
    6d38:	6dd878b6 01f7e0f7 0cfc625c c0338ebb     .x.m....\b....3.
    6d48:	e59ff2cc f7f81d89 9e368112 95d6434b     ..........6.KC..
    6d58:	fee76f7f fac1b22d 2178c36e 185ed170     .o..-...n.x!p.^.
    6d68:	370356ec d7c89e06 46bbfa16 bcecca60     .V.7.......F`...
    6d78:	c800664f d1ae7ea9 38df7c1f 3c2fcf45     Of...~...|.8E./<
    6d88:	623770f0 f45a105f f118b202 8375841c     .p7b_.Z.......u.
    6d98:	4e40ff78 696bf68f c1fde54b bef581be     x.@N..kiK.......
    6da8:	8c45fc29 b8752ebd b3bab060 b9e9ed18     ).E...u.`.......
    6db8:	07eb20b5 4903c1c0 b07b5e16 41eaeb0f     . .....I.^{....A
    6dc8:	82bb2160 f6e5bdfe 756bbe23 fd40483d     `!......#.ku=H@.
    6dd8:	7b0779f7 aaf7613f b0bbe0ff 651fbdbb     .y.{?a.........e
    6de8:	d1ac5ef7 b7a575df ac7d577b 0bfd931a     .^...u..{W}.....
    6df8:	5e2700f6 d416c884 b81e8839 627e303d     ..'^....9...=0~b
    6e08:	ee7b9276 cde17e3c b6ddc2ae 6bc5a6f7     v.{.<~.........k
    6e18:	b90efa39 1797a0c3 cd0185ed f8f9f07b     9...........{...
    6e28:	5ffdcb89 df7eb124 4db0dee9 3cebff56     ..._$.~....MV..<
    6e38:	9f2ca56e 871461ba 2f7bcfe7 21e1bde1     n.,..a....{/...!
    6e48:	fce574c6 5e24161f 84bdef43 0e8bc017     .t....$^C.......
    6e58:	fb94497c ef73f90e fc69fe30 0fde6ad3     |I....s.0.i..j..
    6e68:	882c9e44 06ad5872 c8b92717 c7a4bfc7     D.,.rX...'......
    6e78:	7b440de1 fb515992 f6dd72e5 4e34ac7e     ..D{.YQ..r..~.4N
    6e88:	f609f12f cd723b57 30063d07 a9461eaf     /...W;r..=.0..F.
    6e98:	9e4a1c6b b8f7627d 5bcf2d67 2b0615b1     k.J.}b..g-.[...+
    6ea8:	14944fc6 23e57f08 45a2f3d8 ba38e268     .O.....#...Eh.8.
    6eb8:	b3abc18e 9c391667 1e18fe3d 6e1eb2fe     ....g.9.=......n
    6ec8:	ec8c37fe b7d77b1c 4090fb9f b8dfd024     .7...{.....@$...
    6ed8:	6e937b96 49ba4dd2 dd26e937 93749ba4     .{.n.M.I7.&...t.
    6ee8:	62d3edfe f94565ef 9bf732db 575fddfc     ...b.eE..2...._W
    6ef8:	e604b2af 97ea7638 4becade7 f7060574     ....8v.....Kt...
    6f08:	0f5932df 7ab71f62 77312d59 7019306a     .2Y.b..zY-1wj0.p
    6f18:	f723f80c dee30815 c9876bb1 201e2ea7     ..#......k..... 
    6f28:	9905f816 50f49d8d 47a21f89 76af8dd6     .......P...G...v
    6f38:	cc1b3830 ce59c424 f8f0473a 5fc8ec50     08..$.Y.:G..P.._
    6f48:	1479606b aef54162 648dff9e e1ab8cd7     k`y.bA.....d....
    6f58:	6feb6417 fc7e3937 1df75bfa 4ac1a340     .d.o79~..[..@..J
    6f68:	ff39b72b c3dfb85b 89f6d1c9 bc3bff1b     +.9.[.........;.
    6f78:	0c433a8d d96078d9 000b3aff decdb377     .:C..x`..:..w...
    6f88:	a35f81db 5c679300 f1753a4c bd1a51e6     .._...g\L:u..Q..
    6f98:	8e5f5c1b 46bc62f7 2f8624d4 ff58937b     .\_..b.F.$./{.X.
    6fa8:	32d23c16 4491e20d 07bc419f 17060dc4     .<.2...D.A......
    6fb8:	7dc0b4f4 f3069d52 afaac83a e21f8c9a     ...}R...:.......
    6fc8:	1664eabf 1b9dfb09 624f56f9 65076309     ..d......VOb.c.e
    6fd8:	c2a01b95 40d576ff b596db18 28e70c1d     .....v.@.......(
    6fe8:	7f004f6a 8d1e1c83 c0407fc4 9f48703c     jO........@.<pH.
    6ff8:	0b2e5a7d 96df8c84 7d1e6d51 e26846b9     }Z......Qm.}.Fh.
    7008:	3f0cae2c bbb76de1 6bd6bab7 8611c484     ,..?.m.....k....
    7018:	cf8a2005 a0b1a169 0b730685 729dc73a     . ..i.....s.:..r
    7028:	82c6a5d8 fc8e3c90 2c47ba88 efe8975f     .....<....G,_...
    7038:	07a73848 adfd7bef 7ab7b730 66e90388     H8...{..0..z...f
    7048:	bd416c01 bdfa0685 1b7e303f 30739d83     .lA.....?0~...s0
    7058:	818f27bf 6fc4d35e db2fcad7 9fb0b84f     .'..^..o../.O...
    7068:	e2c431d2 1f133ef7 d7d14b1e 0971bf19     .1...>...K....q.
    7078:	65dcc27e 12e70fbf 296257b3 231a02c1     ~..e.....Wb)...#
    7088:	e25f2a8e 3466a443 d27bffa0 1dff16b8     .*_.C.f4..{.....
    7098:	996eedf2 5f809206 adbfaf92 fc61dabe     ..n...._......a.
    70a8:	a4402cdc fbfbd4ab c2639839 21b37700     .,@.....9.c..w.!
    70b8:	b972079b 310e211a 1923482c d8018da6     ..r..!.1,H#.....
    70c8:	1dbf12db 7ff07d9c d759bf11 e7e6e003     .....}....Y.....
    70d8:	937ffe84 179f07ed 063653f6 d0b77e08     .........S6..~..
    70e8:	8b4f4f7b ce1f8cfb 4e02d9e2 886bf1ca     {OO........N..k.
    70f8:	3c119eaf e0169c35 ef31ad1f c407fc50     ...<5.....1.P...
    7108:	30fe2ccc 1ef60d7a 3d3416c1 98ba0b65     .,.0z.....4=e...
    7118:	01ffec05 6ecab4bc ea2d05b9 841ffe1e     .......n..-.....
    7128:	72357df5 739c00b1 37815f55 e4ef3110     .}5r...sU_.7.1..
    7138:	23fe0f74 7e9fce5c 06de81ad b0237625     t..#\..~....%v#.
    7148:	c1a4860e 510f78e5 37f21bc0 78e8fc55     .....x.Q...7U..x
    7158:	90ad91e0 47b74c05 68d1ef5e ed2b1a73     .....L.G^..hs.+.
    7168:	8d7bb847 91b4f191 f9fbfbcb ca6fc5a9     G.{...........o.
    7178:	940f9edc 8c463c6d 49f3bb08 2ee0b707     ....m<F....I....
    7188:	6237e266 c3fc011e c04fa011 47b1a71e     f.7b......O....G
    7198:	0233bea2 37bf33e7 04a0d65e c1ad197f     ..3..3.7^.......
    71a8:	e198b9db 3d47b216 74e8d5c1 9f03db4f     ......G=...tO...
    71b8:	189f2075 51c467e6 8803d8a4 0d0e0e7a     u ...g.Q....z...
    71c8:	1ab93e7e 841af3f9 f9dd220f 361b9ca9     ~>.......".....6
    71d8:	dc15e4f8 013c449d 40bd691c 3107ec2f     .....D<..i.@/..1
    71e8:	d24ba3bf d4e9387b 23f6348e 22815f11     ..K.{8...4.#._."
    71f8:	e2e9feb5 b07e2dfd 2fe8c68c fdb986cf     .....-~..../....
    7208:	01f5e08f e60a1fde 828a55dd 892f8073     .........U..s./.
    7218:	3fd318fb 08c49e80 98c14b17 b988b721     ...?.....K..!...
    7228:	105b9a0f 2decabec 7cf83f04 4f07e058     ..[....-.?.|X..O
    7238:	5b961fe0 cbfa0796 774e27fa 2d5a7148     ...[.....'NwHqZ-
    7248:	1ac6b416 2c3c1a20 008eb348 d68b6de3     .... .<,H....m..
    7258:	8b7d607d 1f70ccf5 100c9074 5e5cbc0f     }`}...p.t.....\^
    7268:	f036a4ec 312bf70c e774207e 03f3e2f7     ..6...+1~ t.....
    7278:	ffef0ced afc0b67e 03c45a31 f03490fe     ....~...1Z....4.
    7288:	df719f3f 479c0cf1 f82f7730 a1ff2b77     ?.q....G0w/.w+..
    7298:	357d8777 f41d6746 040a6102 505b2d6e     w.}5Fg...a..n-[P
    72a8:	e5fade56 5b1e1fec 4f5f817e fbe1bf8f     V......[~._O....
    72b8:	6ae295e7 bdcf9156 6bfb9735 e0d39fe9     ...jV...5..k....
    72c8:	873caf74 cbdef4b5 12e8b3f1 b6705dbc     t.<..........]p.
    72d8:	feddcc67 e5f1231c fc7959f8 a236e8f6     g....#...Yy...6.
    72e8:	ecd06f86 e3f6d7e1 cb8f67e5 8da37fe2     .o.......g......
    72f8:	9e8ff7db 7e099fbd 8fd143e8 7fcc78db     .......~.C...x..
    7308:	bfed1a49 35e30236 57018f60 79655f24     I...6..5`..W$_ey
    7318:	15f89bf9 a3a5cbf9 267ec375 72a62dec     ........u.~&.-.r
    7328:	e041034d edc7d1c3 abf02c3b 67c8fd92     M.A.....;,.....g
    7338:	d0c6f47d 3fce0fe8 88b7189e dd57a371     }......?....q.W.
    7348:	4a57c5fe 9f8068c5 cb9405b6 7f0bbb82     ..WJ.h..........
    7358:	6ce64d1f 59bb770b f2abedc8 d96bdde8     .M.l.w.Y......k.
    7368:	3f5e97dd d9ae0cba 34a7c90f beeff412     ..^?.......4....
    7378:	587cef3c c1fc203e affc1779 75b35766     <.|X> ..y...fW.u
    7388:	ff7e7dae 7f108ecc ff465a49 eac4be4f     .}~.....IZF.O...
    7398:	ebff584b 78a1ff6c a492f8af 0fd64a4f     KX..l..x....OJ..
    73a8:	bf73e323 316e7498 b4361fe7 031340d0     #.s..tn1..6..@..
    73b8:	f0f18c1e dfc9f817 826d24ca 8d6181b6     .........$m...a.
    73c8:	873dfd5b 6ab4247b f9c0d2a3 2d601697     [.=.{$.j......`-
    73d8:	07ffbca8 b1ee35fa 869b662f efeccdb9     .....5../f......
    73e8:	ca09cc3d b747bfe3 fe3d98d7 2a27ec97     =.....G...=...'*
    73f8:	0c2009bd bff7e5fc ef6fef45 fe1b508f     .. .....E.o..P..
    7408:	f06bf8c0 1f7fe611 33df3731 c87e020f     ..k.....17.3..~.
    7418:	c61fafe4 7ceff16f 46ca8b73 131e47fb     ....o..|s..F.G..
    7428:	8f125ef6 7f76abee 75d3f7d8 3f6f1cfc     .^....v....u..o?
    7438:	e0b17f41 7f40114a 7857fdc7 e6a9096f     A...J.@...Wxo...
    7448:	81ab33a6 bd9cf6f6 20518639 c5f3d9a2     .3......9.Q ....
    7458:	f827fcec d3dd398d fd8460dc eb37bdc8     ..'..9...`....7.
    7468:	c7ec4039 2ea0be33 b3e5e53a afc625e7     9@..3...:....%..
    7478:	820408c2 8e1f499f d53bc1a9 0b5f0a5f     .....I....;._._.
    7488:	a31fb35a 0b91ee3e 837e1ffe 123adbe5     Z...>.....~...:.
    7498:	8852b345 8f118105 011b47d1 f993f04e     E.R......G..N...
    74a8:	e07fa10b b7228676 01133d76 6477f487     ....v.".v=....wd
    74b8:	c7b1228f 2a7ed226 fb3d402d e8fffdc0     ."..&.~*-@=.....
    74c8:	3da38b79 9eadbdf1 b5a051cf 7ab17ff7     y..=.....Q.....z
    74d8:	7d3398e1 43d3fde1 40703f3d 0e4d6554     ..3}...C=?p@TeM.
    74e8:	7e2c7f18 26175cc2 32d7fdae d8f3d7e9     ..,~.\.&...2....
    74f8:	eadd957d b0d74adb 7f817608 93f6d979     }....J...v..y...
    7508:	42da40d5 ac67ec9d 22493f98 d13f19fd     .@.B..g..?I"..?.
    7518:	0e603bdf 564eb9e7 73723ff8 f6db585f     .;`...NV.?rs_X..
    7528:	5e56bf1e fea35812 e5690592 3b710ce2     ..V^.X....i...q;
    7538:	97ddeec3 452a031c c3f5a6ec ea5a2fbb     ......*E...../Z.
    7548:	3b71abfe 6cfaaece 10f6263f df5525df     ..q;...l?&...%U.
    7558:	12df0720 e33affcc 1fb98b77 755edfeb      .....:.w.....^u
    7568:	a41bec35 b86fbb30 8901d8e3 7509610e     5...0.o......a.u
    7578:	7da7e48e 8d85d783 7fd60c40 c69358c5     ...}....@....X..
    7588:	b9f48c7e f32cc030 637d85df d7cc4bf8     ~...0.,...}c.K..
    7598:	f46d4d68 45d4f6ce c220f47f a416b340     hMm....E.. .@...
    75a8:	eece3d2f 0db388be 02f80089 04dc3e2c     /=..........,>..
    75b8:	f17e7b5f 3dff1754 49eeddbe beabefcc     _{~.T..=...I....
    75c8:	0f559f9c 2e10bdef cb072e91 2b7ea9de     ..U...........~+
    75d8:	4aed5df8 fbdd55ec c162d763 1f0e68de     .].J.U..c.b..h..
    75e8:	a9dac176 a367dcd1 d2e0fbd4 a1f8d85b     v.....g.....[...
    75f8:	776a0b73 5ac78f29 bf736bfd 85132d0d     s.jw)..Z.ks..-..
    7608:	95240c15 feb9bdfe 1968decc 3b1483ec     ..$.......h....;
    7618:	9bfa0e31 2344c35e 754d6f3e d6b4280c     1...^.D#>oMu.(..
    7628:	191a2fbb 7ee01f58 7770524c ed9fe7a2     ./..X..~LRpw....
    7638:	efd654d7 b1f8c1df dfa81cf6 fdb2117d     .T..........}...
    7648:	7617ff08 596f2e55 ac2171b6 1afd897f     ...vU.oY.q!.....
    7658:	1b401cd3 86be1abd 60dbe270 b66bf8d6     ..@.....p..`..k.
    7668:	36a7ac25 06d8381d 693add81 0690e360     %..6.8....:i`...
    7678:	1f0e6699 afa5bfb2 402ccb87 d7d79fd8     .f........,@....
    7688:	9fd07e8d 7843ccc6 f6186810 e4b99d46     .~....Cx.h..F...
    7698:	21fd274d b0de675b 14731f60 ee0cc57a     M'.![g..`.s.z...
    76a8:	340ad792 2fcf440a e1c3130e e2d5eb47     ...4.D./....G...
    76b8:	8520c8df cae82411 f0e7b5cf 3d1e5024     .. ..$......$P.=
    76c8:	ec4de596 0bee6175 19e4f07e fec7f8aa     ..M.ua..~.......
    76d8:	f5e97d1c fadfd997 a0d85c1a 053b8068     .}.......\..h.;.
    76e8:	785021c8 d1fe8061 bd6dc4a1 7afbf06f     .!Pxa.....m.o..z
    76f8:	7404be28 269e93fa 7ff8377a f442dfc2     (..t...&z7....B.
    7708:	56998bf7 15f9f17f 4ffe5a1d 487fbd8d     ...V.....Z.O...H
    7718:	fe857a0c 338fddcc 6ce2f870 b3f62192     .z.....3p..l.!..
    7728:	e854f4f8 85f9a77f ad9c4b58 8ac87ec1     ..T.....XK...~..
    7738:	e63be9ce f89ab411 2ffe3ca9 fb96ece6     ..;......<./....
    7748:	1a4dfccb 7ebb5b85 1b20ad7f f0bded50     ..M..[.~.. .P...
    7758:	6c6f8f6d fdcb7904 b1d00b16 d306d900     m.ol.y..........
    7768:	fb01eb65 6871503b 52e5fa38 1e8b66e4     e...;Pqh8..R.f..
    7778:	3de5c266 f0e95b00 2c3f99a1 04478047     f..=.[....?,G.G.
    7788:	121eed79 c40bf6cd 68febf9b ede6dfd8     y..........h....
    7798:	36ebdfc1 4afa7708 060de86b 12fd8a91     ...6.w.Jk.......
    77a8:	f0be8ede 0587fc79 980083c1 1539f484     ....y.........9.
    77b8:	5b9a6a5f a20e9320 af77d7af 6e0616f8     _j.[ .....w....n
    77c8:	08278873 f185fecd faedf51b 0483d6b7     s.'.............
    77d8:	9f91bf73 d4010783 6cbbbd53 5c01123f     s.......S..l?..\
    77e8:	4fabfabb 32d77997 d3eb4317 92374fc5     ...O.y.2.C...O7.
    77f8:	4ddb714b fd73f124 f1dc03fa 88fd92f6     Kq.M$.s.........
    7808:	f9dd1fff c4bbda1f 3407067c 877c6eec     ........|..4.n|.
    7818:	f9305fdd e1582735 f0fa9c6d 1783261c     ._0.5'X.m....&..
    7828:	8493db09 7f4f5a5d c69ed1aa bfadb02d     ....]ZO.....-...
    7838:	e5b5ee11 ecd4b7de 5a1fac5b dcfc835d     ........[..Z]...
    7848:	fccb8383 afbf72d9 bbe5e496 ee3102c6     .....r........1.
    7858:	7f9bd02e 456fb157 45fe7a5e e396f6f4     ....W.oE^z.E....
    7868:	1cfadffc 7360685a be1fd72b 035f30de     ....Zh`s+....0_.
    7878:	6c5f77f2 be980331 e5501f70 34f20203     .w_l1...p.P....4
    7888:	3ea3bd86 c1259f63 faaefe04 8d00fa54     ...>c.%.....T...
    7898:	98da41f6 17ede0af 60efd3f0 26e78c34     .A.........`4..&
    78a8:	63747a33 f5bcf627 c736463d fee186fd     3ztc'...=F6.....
    78b8:	acc82dab def5aedf 0761cfc0 901fbc46     .-........a.F...
    78c8:	431e43d4 897fd056 07fb2ffb 056ea9f5     .C.CV..../....n.
    78d8:	f6d148d2 1c1df711 92efedde f4beabfd     .H..............
    78e8:	95f46005 f5bffb49 1aecb17b 020f153c     .`..I...{...<...
    78f8:	b24e5f77 fb1ba7f5 7bf241d8 923fe3e5     w_N......A.{..?.
    7908:	77d5bf5d f6b2eb51 35dee772 676dec16     ]..wQ...r..5..mg
    7918:	40ac9e16 2bca1665 f6175d88 4dfaf2f7     ...@e..+.].....M
    7928:	46b840fc 76f6e780 a6ee7d8d 7ce6837f     .@.F...v.}.....|
    7938:	2a61f5ec 7486c3fa 8e6dc87b 0d8f0eff     ..a*...t{.m.....
    7948:	10d8ad11 67e13dff b4fab0fd beddbf9c     .....=.g........
    7958:	18e16883 2483d1f3 96fcc2fb d221f09f     .h.....$......!.
    7968:	ff4eadfe ea5efb05 a506fdd2 37b5dcdc     ..N...^........7
    7978:	c019dd90 5278ae52 afe772d1 38ad2e97     ....R.xR.r.....8
    7988:	99fd08f8 4d59d9ff 81a1f87f c4c3c2fe     ......YM........
    7998:	125681fe 2dac0016 23a2fc03 ec75209e     ..V....-...#. u.
    79a8:	2c8f76fd b31610e5 3be0ffb5 37877dc4     .v.,.......;.}.7
    79b8:	efa8b278 af5e0f10 780c6e3f 570fdc79     x.....^.?n.xy..W
    79c8:	bcc70062 fe690b73 bd1d8bd4 eec922b7     b...s.i......"..
    79d8:	e949c995 03497afd b070f7b9 297e0dda     ..I..zI...p...~)
    79e8:	1ff461b5 fd1c35ef 2b8522c7 d5eedfeb     .a...5...".+....
    79f8:	8b39ed09 2f62d73b 8a90b209 335fdfa8     ..9.;.b/......_3
    7a08:	87b080de 6a0792ec 24e01e20 75063569     .......j ..$i5.u
    7a18:	700f107c 91670d67 fe0ab4f8 45671ce6     |..pg.g.......gE
    7a28:	ab1fd179 33cf3769 c6fd6a92 219feb11     y...i7.3.j.....!
    7a38:	a2bc4f0a fb0e93fe 792238a1 eeb9fb67     .O.......8"yg...
    7a48:	5a55c4bf 8056066c 82d5cc91 c11ff94c     ..UZl.V.....L...
    7a58:	1fde97fd 51f07623 e2ceacf9 bff638ff     ....#v.Q.....8..
    7a68:	cd9f1df1 ecace0fd fe602001 ae1caaca     ......... `.....
    7a78:	00381355 f45b8fcb 93749bcf ba4dd26e     U.8...[...t.n.M.
    7a88:	26e93749 4b8fa4dd 91cdf52d 4ad7f49b     I7.&...K-......J
    7a98:	fc2efbab 8df9c275 b46d4cab 9b0afde0     ....u....Lm.....
    7aa8:	bef743f3 c2dfd2cb 8a3f8482 8d7f31d8     .C........?..1..
    7ab8:	1c4d743a 8f257daf 75ef6661 ac47bd60     :tM..}%.af.u`.G.
    7ac8:	0f077eb8 3a7e1aec 5d95bee6 34878c44     .~....~:...]D..4
    7ad8:	e61adc38 11732fc6 3d8b5a2e 23c9bb00     8..../s..Z.=...#
    7ae8:	6ec4a6d2 c7ede55f 14ddc27b dbd827de     ...n_...{....'..
    7af8:	b88036ee 3fdf098f e07fdd74 c481a35d     .6.....?t...]...
    7b08:	bff8e6ef 889f3b8e 82388b16 583f7e60     .....;....8.`~?X
    7b18:	fc658721 bc1f8c6a 305b6800 3f6f0350     !.e.j....h[0P.o?
    7b28:	f082382e f87bc2b4 736f0563 47068359     .8....{.c.osY..G
    7b38:	f8e6170d 6b75b7fa c60d2a41 f5795b7b     ......ukA*..{[y.
    7b48:	a2c8d5d5 c2e47687 dc30dddd 2eff894d     .....v....0.M...
    7b58:	a2e47dfc c7d981cf 0521c0af a3f608ef     .}........!.....
    7b68:	07b040d7 3f1cfc76 7ef8b91a 90f0a440     .@..v..?...~@...
    7b78:	3684873d ebff6607 38fc17b5 a209ca7a     =..6.f.....8z...
    7b88:	e05adef7 617da8a7 347f0afe b02f8c36     ..Z...}a...46./.
    7b98:	9422d976 505ad82d e76a2583 cbbd6e95     v.".-.ZP.%j..n..
    7ba8:	f7354d3a 7a3993bf 7ba77ba7 466bef49     :M5...9z.{.{I.kF
    7bb8:	35dc710f 847ac365 08f3fa3b fc6dc8b9     .q.5e.z.;.....m.
    7bc8:	c39b87af 8822d530 0fdac79e e034412c     ....0.".....,A4.
    7bd8:	c9a5a2a8 ce106af8 bff1c67e bfe67a87     .....j..~....z..
    7be8:	2d1a3f9f 2031a072 20c1cd75 161bdfc7     .?.-r.1 u.. ....
    7bf8:	f8332ebf 43ed4d0b 25829e32 9847fd22     ..3..M.C2..%".G.
    7c08:	6c4560d5 5c4de80d 585d3834 345fe090     .`El..M\48]X.._4
    7c18:	6c7665a6 2ef8bf99 ff5479e8 cf45a4f8     .evl.....yT...E.
    7c28:	b64eafcf 0521c27a 1f7c5b6b 87d6b927     ..N.z.!.k[|.'...
    7c38:	b83bda07 8c0356be c70b6400 0d729d67     ..;..V...d..g.r.
    7c48:	57c7f6c0 dc233c38 599db910 dded43db     ...W8<#....Y.C..
    7c58:	f6edbc4b 7305cbc8 ca523d1e 1e3c28e1     K......s.=R..(<.
    7c68:	608dd33f dd6a1f82 6bac27e2 06bcafc1     ?..`..j..'.k....
    7c78:	e1b13ace 139919da e7cb0d66 d5b7ee12     .:......f.......
    7c88:	9e7094e0 0b276a74 9c43600d ff1979c3     ..p.tj'..`C..y..
    7c98:	0d6ef2cf 21b3397a ae8417d8 56bf61fd     ..n.z9.!.....a.V
    7ca8:	1accfb58 26cf857e 7fd2a28e 68cfd938     X...~..&....8..h
    7cb8:	c4de8349 13f18341 69cddef4 fb168a73     I...A......is...
    7cc8:	5867c460 81de0164 3831e6ee 1a0736e3     `.gXd.....18.6..
    7cd8:	c96db201 d23e20e1 49c72ec6 ef3d70a5     ..m.. >....I.p=.
    7ce8:	fc138b4b f1a617a8 f4d35a7c 3b895300     K.......|Z...S.;
    7cf8:	e224be2b 70048e13 45bdedae 7b9f3f03     +.$....p...E.?.{
    7d08:	6facb00d ad304cf1 9860d895 6836f45a     ...o.L0...`.Z.6h
    7d18:	52f46604 da8305f1 600079d7 b0851f5f     .f.R.....y.`_...
    7d28:	9c8391c0 a9938004 6749a0b1 03d87ec9     ..........Ig.~..
    7d38:	5b80e204 828c3e0d c111b4f0 f01bbe17     ...[.>..........
    7d48:	f86e2c13 3f9dd073 52f4d623 2641270e     .,n.s..?#..R.'A&
    7d58:	defa6fbc aa6b7bf7 d4c68c33 93f197cf     .o...{k.3.......
    7d68:	c48f2455 037158d3 4a9d6c0e a81c9331     U$...Xq..l.J1...
    7d78:	fb1c46bd 1dff662b 4f1416ba e65c8161     .F..+f.....Oa.\.
    7d88:	2787f054 65036b6d 68f458b9 465bd6e6     T..'mk.e.X.h..[F
    7d98:	ebafb50f e4e6d001 90fe680d 2fb03d7b     .........h..{=./
    7da8:	db5b07e1 bde98003 91b3f6c6 d121ff4b     ..[.........K.!.
    7db8:	f035cbe4 d654d172 c1ff182d 2e28e423     ..5.r.T.-...#.(.
    7dc8:	dfb9cb2f fd693ba2 b22d6644 1e7bf40e     /....;i.Df-...{.
    7dd8:	e7d7eefb 1c1edf60 9f1f837c 9f6a69e0     ....`...|....ij.
    7de8:	8647e873 3763cbb1 c49ecfe3 68a7744e     s.G...c7....Nt.h
    7df8:	4b7bd988 3527ff38 c46f00d6 c26bc36f     ..{K8.'5..o.o.k.
    7e08:	88648f0f 067efcd8 46defdfd c0efdc2e     ..d...~....F....
    7e18:	3661e69c bfa0d2ae 403ed856 87e2dc78     ..a6....V.>@x...
    7e28:	883f675b 08352b55 adef180b 000e2615     [g?.U+5......&..
    7e38:	5b87d0db e77a5832 cef47da4 2d806d7a     ...[2Xz..}..zm.-
    7e48:	760d3900 9f340392 de976b15 d11c8722     .9.v..4..k.."...
    7e58:	fc39d41f f7f0fc19 2885f8c0 efb2af97     ..9........(....
    7e68:	47c3ee07 b2641ef8 63cf5796 87910359     ...G..d..W.cY...
    7e78:	236e5e06 7e4d8801 6cfc7a58 a3aef0ad     .^n#..M~Xz.l....
    7e88:	8781a467 b6707cae 0792156f d5830dee     g....|p.o.......
    7e98:	77fca89a 8281fd58 1acbfd8c 61f11e60     ...wX.......`..a
    7ea8:	633064d9 24547ee6 64df8eb4 dd947ce6     .d0c.~T$...d.|..
    7eb8:	055da97d a58d8326 0247e01c 90e6b416     }.].&.....G.....
    7ec8:	6f0fc583 bbe11b5f c98c6f7d c698f7e5     ...o_...}o......
    7ed8:	b798aecf 3f04711b 2d92fe96 07bb44e0     .....q.?...-.D..
    7ee8:	35667e38 68e4f9a0 6bb20b32 22e497f8     8~f5...h2..k..."
    7ef8:	29f971e8 5ce1c438 b29fda9a db6b0bfd     .q.)8..\......k.
    7f08:	d7b081be 0a3ef503 07d41be4 1438f1ac     ......>.......8.
    7f18:	620fefce 1d6ca65f b985fc0a 062f64df     ...b_.l......d/.
    7f28:	c1e2fbe8 ef3a17dd c1f6544f fee0732f     ......:.OT../s..
    7f38:	ae507397 8657fa22 cfec0d37 ecf14b3a     .sP.".W.7...:K..
    7f48:	de1add53 9de89beb 54f96c07 1bbf1877     S........l.Tw...
    7f58:	6bbc1dea 332e9ff5 654761ce f5fdf828     ...k...3.aGe(...
    7f68:	e97f6e62 508dddf2 efcf451d 50677e23     bn.....P.E..#~gP
    7f78:	41120778 e0e16f06 6ebfa23f 2df587f4     x..A.o..?..n...-
    7f88:	de961feb 97fd3fe1 17dace68 3de00daf     .....?..h......=
    7f98:	5a8165af 2f468f77 98ad61c9 780e463c     .e.Zw.F/.a..<F.x
    7fa8:	0721c887 7dd07f8c f6662ffc 3a8354b2     ..!....}./f..T.:
    7fb8:	d7bebd0c 1655ef1b fcbf3f91 5fa0e7b0     ......U..?....._
    7fc8:	a82c606b 94ea3d7f f8df36ee bafa42d9     k`,..=...6...B..
    7fd8:	e2068b84 3bb84c47 2b44d5e2 d0b8568b     ....GL.;..D+.V..
    7fe8:	8c39fae0 8854fe72 0cf82fe7 17081d92     ..9.r.T../......
    7ff8:	873615ff 4f9806cf af0b71d4 09bd16e7     ..6....O.q......
    8008:	4fc6031e 2e17ddc0 820d6b87 133efdb5     ...O.....k....>.
    8018:	5fd816de def37290 f7f9dc2b 2dbfe219     ..._.r..+......-
    8028:	bdda4398 f7a0cf6c cfc73a70 78ee5931     .C..l...p:..1Y.x
    8038:	77e4dcdd 6cfc61cd db2de7bc acb2438f     ...w.a.l..-..C..
    8048:	dc2fbbfd c521edef c04887c6 01c147f7     ../...!...H..G..
    8058:	457f47d1 d2bfeb02 f99774ad 506f2e3b     .G.E.....t..;.oP
    8068:	61b5fb7d 0e3b836d 741f3069 1e45edec     }..am.;.i0.t..E.
    8078:	3465a0d0 17a577a8 82608dd0 0ff982dd     ..e4.w....`.....
    8088:	803d5d0c 39eedc48 1ecd477f 0356f2b2     .]=.H..9.G....V.
    8098:	a5de3f1b 126770fe b9dbdfb1 4a5c3ef0     .?...pg......>\J
    80a8:	cb21ff16 664387b7 b7cbeb01 ebbbd5e8     ..!...Cf........
    80b8:	addcfcdf d91dd6ef 7cbfe05b 739abc3d     ........[..|=..s
    80c8:	6762dd48 faa1d75e 3fc343ed 32df97d2     H.bg^....C.?...2
    80d8:	1cfaadec 86e7a03b 2d236bdf 21e12dac     ....;....k#-.-.!
    80e8:	a7d7c8bb c719f90b 3f897780 bdefcada     .........w.?....
    80f8:	fd88fa04 249c82ed 2f117ff0 ff43ddae     .......$.../..C.
    8108:	7833c9f1 bb9e8811 e7063fc4 5f2e72de     ..3x.....?...r._
    8118:	e25059f3 f99c7fe4 05f7ec8f bfec6bd2     .YP..........k..
    8128:	5e2dedca 05db3f83 33f85fff 73690360     ..-^.?..._.3`.is
    8138:	ede73d78 af1dbf59 52e52d79 445bdfbe     x=..Y...y-.R..[D
    8148:	f80b8f6d 8ffbd5b1 35841d14 59639128     m..........5(.cY
    8158:	d00f757f bbbe36c8 13ddb2f7 bec90e3f     .u...6......?...
    8168:	1588fe2b 7805ef7b 4123f03f 7167b773     +...{..x?.#As.gq
    8178:	a145f77a fe783fb4 df8cf462 f3d3e60e     z.E..?x.b.......
    8188:	01af525a 3516b9d6 67237fac e57c1506     ZR.....5..#g..|.
    8198:	fba90ad6 77b49108 df43f8b5 fae6ec65     .......w..C.e...
    81a8:	8f94b91f 0de6cfe8 3e0b11ce 0ed078e2     ...........>.x..
    81b8:	ee2cf7fa a8027b11 87f1eb9f f5b02007     ..,..{....... ..
    81c8:	dc516e82 bc70d97d 7333e3c5 c5be7a24     .nQ.}.p...3s$z..
    81d8:	fc8c2fcc 988201f0 78691ae2 d57ac32d     ./........ix-.z.
    81e8:	3f7327a2 f172e1f8 fcf0b89f b5a6fd50     .'s?..r.....P...
    81f8:	f8623f0b 063deb9b ec72f72f 987fc0c1     .?b...=./.r.....
    8208:	ecd72044 0dd6633e 7c3ec0ec b9e75e78     D ..>c....>|x^..
    8218:	e8b85857 ac17f40f d987307d 5b61ec8f     WX......}0....a[
    8228:	e85edfc5 8a977d8f 9a753fe8 0f433c03     ..^..}...?u..<C.
    8238:	34e3761e f016477a 1d89d262 583c0f5a     .v.4zG..b...Z.<X
    8248:	6bb08720 47ecff78 86f1fc00 87b7f766      ..kx..G....f...
    8258:	7e61679d b0b77622 a177d9c0 a483fbc2     .ga~"v....w.....
    8268:	eae1cceb 755162b7 6ce1f887 3241a443     .....bQu...lC.A2
    8278:	c6143590 ff132b81 1e72c3e1 51b6d97b     .5...+....r.{..Q
    8288:	cef517bb 7819e83a 239eede0 df8cbbea     ....:..x...#....
    8298:	e308f1a1 1a1d0112 a333a8d0 b2d9efb1     ..........3.....
    82a8:	f8951a27 5db56a33 c193b8f0 6ace2f78     '...3j.]....x/.j
    82b8:	7a21dd59 92e01831 c5fef083 07b6888f     Y.!z1...........
    82c8:	eb2cfc10 fd782d1f d4c36a5b fedf6907     ..,..-x.[j...i..
    82d8:	65fef1b5 4cb5e073 0453b5f7 5318896e     ...es..L..S.n..S
    82e8:	c0d696fd a88abb7d 91e6eaef d6ffaccb     ....}...........
    82f8:	3d3202c2 b6fe737a efa3f0e1 4045399f     ..2=zs.......9E@
    8308:	36245eb7 e78d6406 0aa4798b b79667c5     .^$6.d...y...g..
    8318:	860067cb de56d5bd 90cf8443 0078a1ea     .g....V.C.....x.
    8328:	eb140b02 f18a4987 bc3da744 7b8cc92e     .....I..D.=....{
    8338:	56dffd99 e4d23dd6 c2af7831 987c97fd     ...V.=..1x....|.
    8348:	a0c4ebc7 45da1b62 8f785fbb 5f78b1d0     ....b..E._x...x_
    8358:	d97f3dcf 60fb0035 de54369a f82d244b     .=..5..`.6T.K$-.
    8368:	ac69f6e3 65a001e0 78a98fc7 d831d2a0     ..i....e...x..1.
    8378:	fbf067ef cc1f68f0 b62f7bef 1bc6dbf7     .g...h...{/.....
    8388:	de8ca44c f7318f0d bc7f465e c4e37ec7     L.....1.^F...~..
    8398:	c7bb447f 1fe76879 64d9ac85 af6b2f06     .D..yh.....d./k.
    83a8:	387e139a 2c5d7b6f 1ffe771e 7d96d3d8     ..~8o{],.w.....}
    83b8:	d41c90df edecc7e5 de162e2d a057dc7f     ........-.....W.
    83c8:	68d46dec 01e0af1f add7b2c0 4ae0583c     .m.h........<X.J
    83d8:	ffb033ed e2e003e1 e1dbf110 219263c5     .3...........c.!
    83e8:	efaabc16 c71e2fcb 3fa2e419 03c7fbc2     ...../.....?....
    83f8:	fe8223f6 74017e1f c6de201a 4686ffb2     .#...~.t. .....F
    8408:	5dd43121 bf9d5c31 9ebf734a 9eeebfbd     !1.]1\..Js......
    8418:	48276c07 425e2c83 ddc0f64f d011b0b4     .l'H.,^BO.......
    8428:	53818bd8 fda725ef b3eec701 fd1ba1ef     ...S.%..........
    8438:	c7bedac0 ffe01afe f5a4508f 7777c6df     .........P....ww
    8448:	dbd96a5f f0e71eed 28ac8d62 fa336eec     _j......b..(.n3.
    8458:	fa2da7d5 26e1db5b 203db9b4 f153a7b1     ..-.[..&..= ..S.
    8468:	7b5eeaa2 bb820ef6 eef7c7a4 1f287bc7     ..^{.........{(.
    8478:	07b8d6fb 948b92e1 dd973a8c 5a8bdc73     .........:..s..Z
    8488:	7db81ee5 f85bd703 c8cf31a8 a47e18f2     ...}..[..1....~.
    8498:	4ae69f2f 84fe783d fb9f87e7 6518def0     /..J=x.........e
    84a8:	7a3d1d17 5e7a80b0 f2f7bc3d fd82cb1e     ..=z..z^=.......
    84b8:	f4283e2f 7d5623da e777b03c 7ee80671     />(..#V}<.w.q..~
    84c8:	5ce3ddff 2aef4384 ef175d7b 8bdedb9d     ...\.C.*{]......
    84d8:	9f9ff567 3fc6afba bae0f5b7 c89cb577     g......?....w...
    84e8:	b70f297a 7bbd903a d707797f dfdb7f41     z)..:..{.y..A...
    84f8:	dc01f044 7f73d87b 7c9e617b c34be46c     D...{.s.{a.|l.K.
    8508:	3ca8ff3b 5d1c3116 b2cc8264 ecb23ff7     ;..<.1.]d....?..
    8518:	8f9807b9 d0fa43c9 ec83a4d5 aaabe9fa     .....C..........
    8528:	d57714c4 b1d96630 6fb2b573 49ba4dd2     ..w.0f..s..o.M.I
    8538:	ffa7b3ff 8f31fe0f 0000006c              ......1.l...

00008544 <PL1S>:
    8544:	00200020 20000144                        . .D.. 

0000854c <PL1N>:
    854c:	00200020 200000e4                        . .... 

00008554 <PL1W>:
    8554:	00200020 20000174                        . .t.. 

0000855c <PL1E>:
    855c:	00200020 20000114                        . .... 

00008564 <PL2S>:
    8564:	00200020 20000204                        . .... 

0000856c <PL2N>:
    856c:	00200020 200001a4                        . .... 

00008574 <PL2W>:
    8574:	00200020 20000234                        . .4.. 

0000857c <PL2E>:
    857c:	00200020 200001d4                        . .... 

00008584 <PL3S>:
    8584:	00200020 200002c4                        . .... 

0000858c <PL3N>:
    858c:	00200020 20000264                        . .d.. 

00008594 <PL3W>:
    8594:	00200020 200002f4                        . .... 

0000859c <PL3E>:
    859c:	00200020 20000294                        . .... 

000085a4 <PL4S>:
    85a4:	00200020 20000384                        . .... 

000085ac <PL4N>:
    85ac:	00200020 20000324                        . .$.. 

000085b4 <PL4W>:
    85b4:	00200020 200003b4                        . .... 

000085bc <PL4E>:
    85bc:	00200020 20000354 00001a26 00001a9e      . .T.. &.......
    85cc:	00001afc 00001b6c 00001bac 00000043     ....l.......C...

000085dc <_init>:
    85dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    85de:	46c0      	nop			; (mov r8, r8)
    85e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
    85e2:	bc08      	pop	{r3}
    85e4:	469e      	mov	lr, r3
    85e6:	4770      	bx	lr

000085e8 <__init_array_start>:
    85e8:	000000dd 	.word	0x000000dd

000085ec <_fini>:
    85ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    85ee:	46c0      	nop			; (mov r8, r8)
    85f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
    85f2:	bc08      	pop	{r3}
    85f4:	469e      	mov	lr, r3
    85f6:	4770      	bx	lr

000085f8 <__fini_array_start>:
    85f8:	000000b5 	.word	0x000000b5
